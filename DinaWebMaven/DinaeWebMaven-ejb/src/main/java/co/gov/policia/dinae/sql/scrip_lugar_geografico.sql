SELECT LG2.CODIGO CODIGO_DEPTO, LG2.DESCRIPCION DESC_DEPTO, LG.CODIGO COD_MUNI, LG.DESCRIPCION DESC_MUNI
FROM USR_REHU.LUGARES_GEOGRAFICOS LG, USR_REHU.LUGARES_GEOGRAFICOS LG2
WHERE LG.LUGE_PAPA=LG2.CODIGO
GROUP BY  LG2.CODIGO, LG2.DESCRIPCION, LG.CODIGO, LG.DESCRIPCION
ORDER BY LG2.DESCRIPCION

VISTA: USUARIO_ROL_UNIDAD

SELECT ROWNUM ID_REG,
U.ID_UNIDAD_POLICIAL,
U.NOMBRE NOMBRE_UNIDAD,
R.ID_ROL,
R.NOMBRE NOMBRE_ROL,
VF.IDENTIFICACION IDENTIFICACION_USUARIO,
VF.GRADO GRADO_USUARIO,
VF.NOMBRE_COMPLETO NOMBRE_COMPLETO_USUARIO,
R.REQUIERE_UNIDAD_POLICIAL,
VF.CARGO CARGO_USUARIO,
VF.CORREO CORREO_USUARIO,
UR.ACTIVO ESTADO_USUARIO_ROL,
U.SIGLA_FISICA SIGLA_FISICA_UNID_POL
FROM ROL R
JOIN USUARIO_ROL UR ON (R.ID_ROL = UR.ID_ROL)
JOIN VISTA_FUNCIONARIO_TMP VF ON (VF.IDENTIFICACION = UR.IDENTIFICADOR_USUARIO)
LEFT JOIN USUARIO_UNIDAD_POLICIAL UN ON (VF.IDENTIFICACION = UN.IDENTIFICADOR_USUARIO)
LEFT JOIN UNIDAD_POLICIAL U ON (UN.ID_UNIDAD_POLICIAL = U.ID_UNIDAD_POLICIAL)

delete from CRITERIO_EVALUACION where id_criterio_evaluacion = 9;



SELECT ROWNUM ID_REG,
U.ID_UNIDAD_POLICIAL,
U.NOMBRE NOMBRE_UNIDAD,
R.ID_ROL,
R.NOMBRE NOMBRE_ROL,
VF.IDENTIFICACION IDENTIFICACION_USUARIO,
VF.GRADO GRADO_USUARIO,
VF.NOMBRE_COMPLETO NOMBRE_COMPLETO_USUARIO,
R.REQUIERE_UNIDAD_POLICIAL,
VF.CARGO CARGO_USUARIO,
VF.CORREO CORREO_USUARIO,
UR.ACTIVO ESTADO_USUARIO_ROL,
U.SIGLA_FISICA SIGLA_FISICA_UNID_POL
FROM ROL R
JOIN USUARIO_ROL UR ON (R.ID_ROL = UR.ID_ROL)
JOIN VISTA_FUNCIONARIO_TMP VF ON (VF.IDENTIFICACION = UR.IDENTIFICADOR_USUARIO)
LEFT JOIN USUARIO_UNIDAD_POLICIAL UN ON (VF.IDENTIFICACION = UN.IDENTIFICADOR_USUARIO)
LEFT JOIN UNIDAD_POLICIAL U ON (UN.ID_UNIDAD_POLICIAL = U.ID_UNIDAD_POLICIAL);


drop package PKG_CALCULO_PRESUPUESTO2;
drop package PKG_CALCULO_PRESUPUESTO_BAK;


ALTER TABLE PROYECTO ADD ID_REG_DINAE_PROYECTO_MIGRADO NUMBER;

Insert into PERIODO (ID_PERIODO,ANIO,DESCRIPCION,FECHA_INICIO,FECHA_FIN,CANTIDAD,ESTADO,NOMBRE_ARCHIVO,CONSECUTIVO_CONVOCATORIA,CONSECUTIVO_ENSAYO,ID_TIPO_PERIODO,NOMBRE_CONVOCATORIA,IDENTIFICADOR_USUARIO_CREA,IDENTIFICADOR_USUARIO_MODIF,NOMBRE_ARCHIVO_FISICO,ID_ESTADO_CONVOCATORIA,TIPO_REGISTRO) values ('1','2013','PERÍODO PARA MIGRACIÓN',to_date('01/01/2001','DD/MM/RR'),to_date('31/12/13','DD/MM/RR'),'1','P',null,'',null,null,null,'SIAT_123-ADMIN','SIAT_123-ADMIN',null,null,'NECESIDAD');

Insert into CRITERIO_EVALUACION (ID_CRITERIO_EVALUACION,NOMBRE_CRITERIO,DESCRIPCION_CRITERIO,VALOR,TIPO,ESTADO) values ('7','Nota trabajo','Nota trabajo','0','PROYECTO_INVESTIGACION_MIGRADO','INACTIVO');
Insert into CRITERIO_EVALUACION (ID_CRITERIO_EVALUACION,NOMBRE_CRITERIO,DESCRIPCION_CRITERIO,VALOR,TIPO,ESTADO) values ('8','Nota sustentación','Nota sustentación','0','PROYECTO_INVESTIGACION_MIGRADO','INACTIVO');
Insert into CRITERIO_EVALUACION (ID_CRITERIO_EVALUACION,NOMBRE_CRITERIO,DESCRIPCION_CRITERIO,VALOR,TIPO,ESTADO) values ('9','Nota final','Nota final','0','PROYECTO_INVESTIGACION_MIGRADO','INACTIVO');

ALTER TABLE PROYECTO ADD COSTO_PRO_MIGRADO NUMBER;

CREATE TABLE EVALUADORES_PROYECTO_MIGRADO
  (
    ID_INVESTIGADOR_PROYECTO NUMBER NOT NULL ,
    ID_PROYECTO              NUMBER,
    VALOR_ESPECIE            NUMBER(15,2),
    ID_TIPO_VINCULACION      NUMBER,
    IDENTIFICACION           VARCHAR2(100 ),
    FUNCION_PROYECTO         VARCHAR2(600 ),
    HORAS_DEDICACION         NUMBER(3,0),
    INVESTIGADO_3ANIOS       CHAR(1 ),
    INVESTIGADO_ANUAL        CHAR(1 ),
    VALOR_HORA               NUMBER(12,2),
    ACTIVO                   CHAR(1 ),
    VALOR_EFECTIVO           NUMBER(15,2),
    ID_FUENTE_PROYECTO       NUMBER,
    ID_USUARIO_ROL           NUMBER,
    FECHA_REGISTRO TIMESTAMP (6) NOT NULL ,
    TELEFONO                      VARCHAR2(50 ),
    INSTITUCION_EXTERNA           VARCHAR2(250 ),
    NOMBRE_COMPLETO               VARCHAR2(100 ),
    GRADO                         VARCHAR2(100 ),
    CORREO                        VARCHAR2(100 ),
    CARGO                         VARCHAR2(100 ),
    CALCULO_HORA_TOTAL            NUMBER,
    ID_UNIDAD_POLICIAL            NUMBER,
    ID_TIPO_INVESTIGADOR          NUMBER,
    ORIGEN_SIAF_O_INVESTI         CHAR(1 ) DEFAULT 'S',
    ID_PLAN_TRABAJO               NUMBER,
    HORAS_TOTALES_IMPL            NUMBER,
    HORAS_DEDICADA_AVANCE_IMPL    NUMBER,
    HORAS_DEDICADA_AVANC_FIN_IMPL NUMBER,
    ID_EVENTO_INVESTIGACION       NUMBER,
    VALOR_HORA_INVESTIGADOR_IMPL  NUMBER(12,2),
    CONSTRAINT EVALUADORES_PROYE_MIG_PK PRIMARY KEY (ID_INVESTIGADOR_PROYECTO),
    CONSTRAINT PROYE_MIG_FK_1 FOREIGN KEY (ID_EVENTO_INVESTIGACION) REFERENCES EVENTO_INVESTIGACION (ID_EVENTO_INVESTIGACION) ,
    CONSTRAINT PROYE_MIG_FK_2 FOREIGN KEY (ID_UNIDAD_POLICIAL) REFERENCES UNIDAD_POLICIAL (ID_UNIDAD_POLICIAL) ,
    CONSTRAINT PROYE_MIG_FK_3 FOREIGN KEY (ID_PLAN_TRABAJO) REFERENCES PLAN_TRABAJO_IMPLEMENTACION (ID_PLAN_TRABAJO) ,
    CONSTRAINT PROYE_MIG_FK_4 FOREIGN KEY (ID_TIPO_VINCULACION) REFERENCES CONSTANTES (ID_CONSTANTES) ,
    CONSTRAINT PROYE_MIG_FK_5 FOREIGN KEY (ID_PROYECTO) REFERENCES PROYECTO (ID_PROYECTO) ,
    CONSTRAINT PROYE_MIG_FK_6 FOREIGN KEY (ID_TIPO_INVESTIGADOR) REFERENCES CONSTANTES (ID_CONSTANTES) 
  );

CREATE SEQUENCE SEC_EVALU_PROYECTO_MIGRADO START WITH 1 INCREMENT BY 1 MINVALUE 1;
ALTER TABLE HISTORIAL_ESTADOS_PROYECTO ADD OBSERVACION VARCHAR2(4000);
ALTER TABLE EVALUADORES_PROYECTO_MIGRADO ADD CLASE_AVALUADOR CHAR(2);


  DELETE FROM tema_proyecto WHERE ID_PROYECTO IN (SELECT ID_PROYECTO FROM PROYECTO WHERE codigo_proyecto LIKE 'MTG%' OR codigo_proyecto LIKE 'MVIC%');
  DELETE FROM EVALUACION_PROYECTO WHERE ID_PROYECTO IN (SELECT ID_PROYECTO FROM PROYECTO WHERE codigo_proyecto LIKE 'MTG%' OR codigo_proyecto LIKE 'MVIC%');
  DELETE FROM HISTORIAL_ESTADOS_PROYECTO WHERE ID_PROYECTO IN (SELECT ID_PROYECTO FROM PROYECTO WHERE codigo_proyecto LIKE 'MTG%' OR codigo_proyecto LIKE 'MVIC%');  
  DELETE FROM COMPROMISO_PROYECTO WHERE ID_PROYECTO IN (SELECT ID_PROYECTO FROM PROYECTO WHERE codigo_proyecto LIKE 'MTG%' OR codigo_proyecto LIKE 'MVIC%');
  DELETE FROM compromiso_periodo WHERE ID_PERIODO = 1;
  DELETE FROM INVESTIGADORES_PROYECTO WHERE ID_PROYECTO IN (SELECT ID_PROYECTO FROM PROYECTO WHERE codigo_proyecto LIKE 'MTG%' OR codigo_proyecto LIKE 'MVIC%');
  DELETE FROM EVALUADORES_PROYECTO_MIGRADO WHERE ID_PROYECTO IN (SELECT ID_PROYECTO FROM PROYECTO WHERE codigo_proyecto LIKE 'MTG%' OR codigo_proyecto LIKE 'MVIC%');
  DELETE FROM PROYECTO WHERE codigo_proyecto LIKE 'MTG%' OR codigo_proyecto LIKE 'MVIC%';
  COMMIT;
 
 
 
Insert into OPCION_MENU (ID_OPCION_MENU,NOMBRE,TIPO_ACCESO,ACCION,ID_OPCION_MENU2,ORDEN,TITULO) values ('9','Consultar convocatoria','PRIVADO','BEAN:#{cuCo6ConsultaConvocatoriasFaces.initReturnCU}','2','8','Permite al usuario consultar las convocatorias incluyendo el detalle de las mismas');

Insert into ROL_OPCION_MENU (ID_ROL_OPCION_MENU,ID_ROL,ID_OPCION_MENU) values ('67','20','2');
Insert into ROL_OPCION_MENU (ID_ROL_OPCION_MENU,ID_ROL,ID_OPCION_MENU) values ('68','20','9');

ALTER TABLE PERIODO ADD NOM_ARCHI_FISICO_CONV_ENSAYO VARCHAR2(300);
ALTER TABLE PERIODO ADD NOM_ARCHI_ORIGINAL_CONV_ENSAYO VARCHAR2(300);

ALTER TABLE TIPO_UNIDAD ADD ACTIVO CHAR(1) DEFAULT 'Y';
UPDATE TIPO_UNIDAD SET ACTIVO = 'N' WHERE ID_TIPO_UNIDAD = 2;

Insert into CONSTANTES (ID_CONSTANTES,TIPO,CODIGO,VALOR,ESTADO) values ('2001','CONFIG_CONEXION_BD_GENERACION_REPORTE','className','oracle.jdbc.driver.OracleDriver','ACTIVO');
Insert into CONSTANTES (ID_CONSTANTES,TIPO,CODIGO,VALOR,ESTADO) values ('2002','CONFIG_CONEXION_BD_GENERACION_REPORTE','url','jdbc:oracle:thin:@srvprde-scan.policia.gov.co:1521/telepol','ACTIVO');
Insert into CONSTANTES (ID_CONSTANTES,TIPO,CODIGO,VALOR,ESTADO) values ('2003','CONFIG_CONEXION_BD_GENERACION_REPORTE','UserName','usr_disigac2','ACTIVO');
Insert into CONSTANTES (ID_CONSTANTES,TIPO,CODIGO,VALOR,ESTADO) values ('2004','CONFIG_CONEXION_BD_GENERACION_REPORTE','Password','disigac2','ACTIVO');
Insert into CONSTANTES (ID_CONSTANTES,TIPO,CODIGO,VALOR,ESTADO) values ('2005','CONFIG_CONEXION_BD_GENERACION_REPORTE','PathSubReportes','/u01/archivos_dinae_sigac2/sigac2/','ACTIVO');

ALTER TABLE SEMILLERO_INVESTIGACION MODIFY NOMBRE VARCHAR(100);

Insert into OPCION_MENU (ID_OPCION_MENU,NOMBRE,TIPO_ACCESO,ACCION,ID_OPCION_MENU2,ORDEN,TITULO) values ('10','Consultar propuestas de convocatorias de financiación','PRIVADO','BEAN:#{cuCo5ConsultaPropuestasProyectosConvocatoriaFaces.initReturnCU}','2','9','Permite al usuario consultar las propuestas de proyectos de investigación para convocatoria en el sistema');
Insert into ROL_OPCION_MENU (ID_ROL_OPCION_MENU,ID_ROL,ID_OPCION_MENU) values ('70','20','10');

Insert into ROL_OPCION_MENU (ID_ROL_OPCION_MENU,ID_ROL,ID_OPCION_MENU) values ('71','32','5');
Insert into ROL_OPCION_MENU (ID_ROL_OPCION_MENU,ID_ROL,ID_OPCION_MENU) values ('72','32','21');

UPDATE KEY_PROPERTIES SET VALOR = 'Desea eliminar la fuente de financiación seleccionada?' WHERE CLAVE = 'cu_pr_5_lbl_titulo_confirmacion_mensaje_eliminar_fuente'; 
UPDATE KEY_PROPERTIES SET VALOR = 'Desea eliminar el equipo de la investigación seleccionado?' WHERE CLAVE = 'cu_pr_5_lbl_titulo_confirmacion_mensaje_eliminar_equipo'; 
UPDATE KEY_PROPERTIES SET VALOR = 'Desea eliminar el evento seleccionado?' WHERE CLAVE = 'cu_pr_5_lbl_titulo_confirmacion_mensaje_eliminar_evento'; 
UPDATE KEY_PROPERTIES SET VALOR = 'Desea eliminar el viaje seleccionado?' WHERE CLAVE = 'cu_pr_5_lbl_titulo_confirmacion_mensaje_eliminar_viaje'; 
UPDATE KEY_PROPERTIES SET VALOR = 'Desea eliminar el gasto seleccionado?' WHERE CLAVE = 'cu_pr_5_lbl_titulo_confirmacion_mensaje_eliminar_gasto'; 

Insert into OPCION_MENU (ID_OPCION_MENU,NOMBRE,TIPO_ACCESO,ACCION,ID_OPCION_MENU2,ORDEN,TITULO) values ('40','Gestionar Eventos','PRIVADO','BEAN:#{cuPr18IngresaModificarEventoInvestigacionFaces.initReturnCU}','3','8','Gestionar Implementaciones');
Insert into ROL_OPCION_MENU (ID_ROL_OPCION_MENU,ID_ROL,ID_OPCION_MENU) values ('73','10','40');

ALTER TABLE PERIODO ADD NOM_ARCHI_FISI_PROP_CONV VARCHAR2(300);
ALTER TABLE PERIODO ADD NOM_ARCHI_ORIGIN_PROP_CONV VARCHAR2(300);

ALTER TABLE PERIODO ADD NOM_ARCHI_FISI_PROP_NECE VARCHAR2(300);
ALTER TABLE PERIODO ADD NOM_ARCHI_ORIGIN_PROP_NECE VARCHAR2(300);

ALTER TABLE RECURSO_HUMANO_SEMILLERO ADD GRADO VARCHAR2(100);

Insert into OPCION_MENU (ID_OPCION_MENU,NOMBRE,TIPO_ACCESO,ACCION,ID_OPCION_MENU2,ORDEN,TITULO) values ('44','Consultar propuestas de Necesidades de investigación','PRIVADO','BEAN:#{cuNe4ConsultaPropuestaDeNecesidad.initReturnCU}','1','5','Consultar propuestas de Necesidades de investigación');
Insert into ROL_OPCION_MENU (ID_ROL_OPCION_MENU,ID_ROL,ID_OPCION_MENU) values ('74','23','44');
Insert into ROL_OPCION_MENU (ID_ROL_OPCION_MENU,ID_ROL,ID_OPCION_MENU) values ('75','5','44');
Insert into ROL_OPCION_MENU (ID_ROL_OPCION_MENU,ID_ROL,ID_OPCION_MENU) values ('76','24','44');


CREATE TABLE DATOS_REPORTE(
    REPORTE VARCHAR2(100) NOT NULL,
    DIRECCION VARCHAR2(250),
    TELEFONO_FIJO_CELULAR VARCHAR2(250),
    CORREO VARCHAR2(250),
    PAGINA_WEB VARCHAR2(250)
);

DELETE FROM DATOS_REPORTE WHERE REPORTE = 'REPORTE_1_DATOS_BASICOS';
insert into DATOS_REPORTE VALUES('REPORTE_1_DATOS_BASICOS',NULL,NULL,NULL,'wwww.policia.gov.co');

ALTER TABLE DATOS_REPORTE ADD CIUDAD_PIE_PAGINA VARCHAR2(250); 
ALTER TABLE DATOS_REPORTE ADD MAIL_PIE_PAGINA VARCHAR2(250);
ALTER TABLE DATOS_REPORTE ADD DIRECICON_PIE_PAGINA VARCHAR2(250);

UPDATE DATOS_REPORTE SET CIUDAD_PIE_PAGINA = 'Bogotá, D.C., Colombia. 2009',MAIL_PIE_PAGINA='vicindinae@policia.gov.co',DIRECICON_PIE_PAGINA='Trasversal 33 Nro. 47 A 35 Sur Bogotá D. C. Colombia. Tel: 3159854' WHERE REPORTE = 'REPORTE_1_DATOS_BASICOS';

ALTER TABLE PROYECTO ADD FECHA_APRUEBA_JEFE_UNIDAD TIMESTAMP;


CREATE TABLE RESUMEN_PRES_EJECUTA_IMPL
  (
    ID_RESUMEN_PRES_EJECUTA_IMPL NUMBER NOT NULL ,
    ID_IMPLEMENTACION_PROYECTO   NUMBER NOT NULL ,
    ID_INFORME_AVANCE_IMPL       NUMBER,
    NOMBRE_RUBRO                 VARCHAR2(30 ) NOT NULL ,
    POLICIA_NAL_PPTO             NUMBER(20,2) DEFAULT 0,
    POLICIA_NAL_EJECUTA          NUMBER(20,2) DEFAULT 0,
    VICIN_PPTO                   NUMBER(20,2) DEFAULT 0,
    VICIN_EJECUTA                NUMBER(20,2) DEFAULT 0,
    UNIDAD_PPTO                  NUMBER(20,2) DEFAULT 0,
    UNIDAD_EJECUTA               NUMBER(20,2) DEFAULT 0,
    FUENTE1_PPTO                 NUMBER(20,2) DEFAULT 0,
    FUENTE1_EJECUTA              NUMBER(20,2) DEFAULT 0,
    FUENTE2_PPTO                 NUMBER(20,2) DEFAULT 0,
    FUENTE2_EJECUTA              NUMBER(20,2) DEFAULT 0,
    FUENTE3_PPTO                 NUMBER(20,2) DEFAULT 0,
    FUENTE3_EJECUTA              NUMBER(20,2) DEFAULT 0,
    FUENTE4_PPTO                 NUMBER(20,2) DEFAULT 0,
    FUENTE4_EJECUTA              NUMBER(20,2) DEFAULT 0,
    ORDEN                        NUMBER,
    TIPO                         VARCHAR2(1 ) DEFAULT 'I' NOT NULL ,
    PRIMARY KEY (ID_RESUMEN_PRES_EJECUTA_IMPL)   
  );

DROP TABLE RESUMEN_PRESUPUESTO_IMPL CASCADE CONSTRAINTS;
CREATE TABLE RESUMEN_PRESUPUESTO_IMPL
  (
    ID_RESUMEN_PRESUPUESTO_IMPL NUMBER,
    ID_IMPLEMENTACION_PROY      NUMBER NOT NULL ,
    ID_PLAN_TRABAJO             NUMBER NOT NULL ,
    NOMBRE_RUBRO                VARCHAR2(30 ) NOT NULL ,
    POLICIA_NACIONAL_ESPECIE    NUMBER(20,2) DEFAULT 0,
    POLICIA_NACIONAL_EFECTIVO   NUMBER(20,2) DEFAULT 0,
    VICIN_ESPECIE               NUMBER(20,2) DEFAULT 0,
    VICIN_EFECTIVO              NUMBER(20,2) DEFAULT 0,
    UNIDAD_ESPECIE              NUMBER(20,2) DEFAULT 0,
    UNIDAD_EFECTIVO             NUMBER(20,2) DEFAULT 0,
    FUENTE1_ESPECIE             NUMBER(20,2) DEFAULT 0,
    FUENTE1_EFECTIVO            NUMBER(20,2) DEFAULT 0,
    FUENTE2_ESPECIE             NUMBER(20,2) DEFAULT 0,
    FUENTE2_EFECTIVO            NUMBER(20,2) DEFAULT 0,
    FUENTE3_ESPECIE             NUMBER(20,2) DEFAULT 0,
    FUENTE3_EFECTIVO            NUMBER(20,2) DEFAULT 0,
    FUENTE4_ESPECIE             NUMBER(20,2) DEFAULT 0,
    FUENTE4_EFECTIVO            NUMBER(20,2) DEFAULT 0,
    ORDEN                       NUMBER,
    ES_FUENTE1_INTERNA          VARCHAR2(1 ),
    ES_FUENTE2_INTERNA          VARCHAR2(1 ),
    ES_FUENTE3_INTERNA          VARCHAR2(1 ),
    ES_FUENTE4_INTERNA          VARCHAR2(1 ),
    ESTADO                      VARCHAR2(100 ) DEFAULT 'TEMPORAL',
    PRIMARY KEY (ID_RESUMEN_PRESUPUESTO_IMPL) 
  );
COMMENT ON COLUMN RESUMEN_PRESUPUESTO_IMPL.ID_RESUMEN_PRESUPUESTO_IMPL
IS
  'Identificador único';
  COMMENT ON COLUMN RESUMEN_PRESUPUESTO_IMPL.ID_IMPLEMENTACION_PROY
IS
  'Identificador de la implementación del proyecto';
  COMMENT ON COLUMN RESUMEN_PRESUPUESTO_IMPL.ID_PLAN_TRABAJO
IS
  'Identificador del plan de trabajo de la implementación';
  COMMENT ON COLUMN RESUMEN_PRESUPUESTO_IMPL.NOMBRE_RUBRO
IS
  'Nombre del rubro';
  COMMENT ON COLUMN RESUMEN_PRESUPUESTO_IMPL.POLICIA_NACIONAL_ESPECIE
IS
  'Valor policía en especie';
  COMMENT ON COLUMN RESUMEN_PRESUPUESTO_IMPL.POLICIA_NACIONAL_EFECTIVO
IS
  'Valor policía en efectivo';
  COMMENT ON COLUMN RESUMEN_PRESUPUESTO_IMPL.VICIN_ESPECIE
IS
  'Valor VICIN en especie';
  COMMENT ON COLUMN RESUMEN_PRESUPUESTO_IMPL.VICIN_EFECTIVO
IS
  'Valor VICIN en efectivo';
  COMMENT ON COLUMN RESUMEN_PRESUPUESTO_IMPL.UNIDAD_ESPECIE
IS
  'Valor de la unidad en especie';
  COMMENT ON COLUMN RESUMEN_PRESUPUESTO_IMPL.UNIDAD_EFECTIVO
IS
  'Valor de la unidad en efectivo';
  COMMENT ON COLUMN RESUMEN_PRESUPUESTO_IMPL.FUENTE1_ESPECIE
IS
  'Valor de la fuente 1 en especie';
  COMMENT ON COLUMN RESUMEN_PRESUPUESTO_IMPL.FUENTE1_EFECTIVO
IS
  'Valor de la fuente en efectivo';
  COMMENT ON COLUMN RESUMEN_PRESUPUESTO_IMPL.FUENTE2_ESPECIE
IS
  'Valor de la fuente 2  en especie';
  COMMENT ON COLUMN RESUMEN_PRESUPUESTO_IMPL.FUENTE2_EFECTIVO
IS
  'Valor de la fuente 2 en efectivo';
  COMMENT ON COLUMN RESUMEN_PRESUPUESTO_IMPL.FUENTE3_ESPECIE
IS
  'Valor de la fuente 3 en especie';
  COMMENT ON COLUMN RESUMEN_PRESUPUESTO_IMPL.FUENTE3_EFECTIVO
IS
  'Valor de la fuente3 en efectivo';
  COMMENT ON COLUMN RESUMEN_PRESUPUESTO_IMPL.FUENTE4_ESPECIE
IS
  'Valor de la fuente 4 en especie';
  COMMENT ON COLUMN RESUMEN_PRESUPUESTO_IMPL.FUENTE4_EFECTIVO
IS
  'Valor de la fuente 4 en efectivo';

UPDATE KEY_PROPERTIES SET VALOR = 'Plan de trabajo de implementación de investigación' WHERE CLAVE = 'cu_pr_21_lbl_titulo_registra_plan_de_trabajo'; 

CREATE OR REPLACE FUNCTION CALCULAR_ANIO_MES_DIA( fecha IN TIMESTAMP, valor IN VARCHAR2 ) RETURN NUMBER
IS
  anio_mes_dia NUMBER;
  fecha_inicial_mes NUMBER;
  fecha_final_mes NUMBER;
  diferencia NUMBER;
  dias NUMBER;
  anio NUMBER;
  dias_temp NUMBER;
  mess NUMBER;
  
BEGIN
    
  anio := 0;
  mess := 0;
  anio := 0;
  
  IF fecha IS NOT NULL THEN   
    dias := trunc(sysdate) - trunc(fecha);  
    
    anio := dias / 365.25;
    
    dias_temp := mod ( dias , 365.25);
    dias := dias_temp;
    
    mess := dias / 30.4375;
    dias_temp := mod (dias , 30.4375);
    dias := dias_temp;
  END IF;  
    
  IF valor = 'ANIO' THEN
    anio_mes_dia := TRUNC(anio,0);
  ELSIF valor = 'MES' THEN
    anio_mes_dia := TRUNC(mess,0);
  ELSIF valor = 'DIA' THEN
    anio_mes_dia := TRUNC(dias,0);
  ELSE 
    anio_mes_dia := 0;
  END IF; 
  
  RETURN anio_mes_dia;
END;

UPDATE CONSTANTES SET VALOR = 'Para Financiar' WHERE ID_CONSTANTES = 87;

UPDATE OPCION_MENU SET TIPO_ACCESO = '.' WHERE ID_OPCION_MENU = 6;
Insert into ROL_OPCION_MENU (ID_ROL_OPCION_MENU,ID_ROL,ID_OPCION_MENU) values ('77','21','4');

UPDATE KEY_PROPERTIES SET VALOR = 'Está seguro que desea publicar los resultados de la convocatoria?' WHERE CLAVE = 'cu_co_4_lbl_titulo_confirmacion_mensaje_confirma_financiar'; 

ALTER TABLE RESULTADOS_INVESTIGACION MODIFY DESCRIPCION VARCHAR2(650);

--Insert into KEY_PROPERTIES (CLAVE,VALOR) values ('cu_pr_11_lbl_tab_reg_archivo_tab_consulta','2. Registrar archivo');
--Insert into KEY_PROPERTIES (CLAVE,VALOR) values ('cu_pr_11_lbl_tab_resultado_inve_tab_consulta','3. Resultados de la investigación');
--update KEY_PROPERTIES set VALOR = '4. Reseña de la investigación' where CLAVE = 'cu_pr_11_lbl_tab_resenia_investigacion';

CREATE OR REPLACE VIEW VISTA_EVENTO_INVESTIGACION AS SELECT 
ID_EVENTO_INVESTIGACION,
ID_TIPO_EVENTO,
NOMBRE,
DESCRIPCION,
MODALIDAD_VIRTUAL,
MODALIDAD_PRESENCIAL,
FECHA_INICIO,
FECHA_FIN,
LUGAR,
CIUDAD,
FECHA_REGISTRO,
FECHA_ACTUALIZA,
ID_USUARIO_ROL,
USUARIO,
MAQUINA,
NOMBRE_ARCHIVO,
NOMBRE_ARCHIVO_FISICO,
TO_CHAR(FECHA_INICIO,'YYYY') ANIO_INICIO,
TO_CHAR(FECHA_FIN,'YYYY') ANIO_FIN
FROM EVENTO_INVESTIGACION;


update KEY_PROPERTIES set VALOR = 'La publicación ha sido almacenada.' where CLAVE = 'cu_iv_01_info_guardar_investigacion_exitosa';

ALTER TABLE ENSAYO_CRITICO ADD GRADO_Y_NOMBRES VARCHAR2(255);

create or replace PROCEDURE PRC_REPORTE_CUCO_10 (P_NUM_CONVOCA IN NUMBER) AS 

CURSOR ENSAYOS_CONVOCATORIA(P_CONVOCA NUMBER) IS
SELECT DISTINCT EC.ID_ENSAYO_CRITICO, UP.ID_UNIDAD_POLICIAL, UP.SIGLA_FISICA, EC.TITULO_ENSAYO, VF.IDENTIFICACION, VF.GRADO, VF.NOMBRE_COMPLETO, CP.COMENTARIO
FROM ENSAYO_CRITICO EC JOIN VISTA_FUNCIONARIO VF ON (EC.IDENTIFICACION = VF.IDENTIFICACION)
JOIN USUARIO_UNIDAD_POLICIAL UUP ON (VF.IDENTIFICACION = UUP.IDENTIFICADOR_USUARIO)
JOIN UNIDAD_POLICIAL UP ON (UUP.ID_UNIDAD_POLICIAL = UP.ID_UNIDAD_POLICIAL)
JOIN COMENTARIO_PROYECTO CP ON (EC.ID_ENSAYO_CRITICO = CP.ID_ENSAYO_CRITICO)
WHERE EC.ID_PERIODO = P_CONVOCA AND 
EC.ID_ESTADO_CUCO10 IN (204, 205) AND  -- Ganador y No Aprobado.
CP.ID_ENSAYO_CRITICO IS NOT NULL AND
CP.AUTOR_COMENTARIO = 224; -- AUTOR VICIN


CURSOR VALOR_CRITERIOS_ENSAYO(P_ID_ENSAYO NUMBER) IS
SELECT DISTINCT CE.ID_CRITERIO_EVALUACION, CE.NOMBRE_CRITERIO, CE.VALOR, EP.VALOR_CRITERIO, EP.VALOR_CRITERIO_VICIN, EP.ID_ENSAYO_CRITICO
FROM EVALUACION_PROYECTO EP JOIN CRITERIO_EVALUACION CE ON (EP.ID_CRITERIO_EVALUACION = CE.ID_CRITERIO_EVALUACION)
WHERE EP.ID_ENSAYO_CRITICO IS NOT NULL AND
EP.ID_ENSAYO_CRITICO = P_ID_ENSAYO AND 
EP.VALOR_CRITERIO_VICIN IS NOT NULL AND
CE.TIPO = 'ENSAYO_CRITICO' AND
CE.ESTADO = 'ACTIVO';

CURSOR TOMAR_ENSAYOS_REPORTE_TOTAL IS
SELECT ID_REG, PUESTO, VALOR_TOTAL
FROM REPORTE_CUCO10_RES_ENSAYOS_TMP
ORDER BY VALOR_TOTAL DESC;

V_TOTAL NUMBER;
V_PUESTO NUMBER;
V_CONT_REG NUMBER;
V_VALOR_CRITERIO_1 NUMBER := NULL;
V_VALOR_CRITERIO_2 NUMBER := NULL;
V_VALOR_CRITERIO_3 NUMBER := NULL;
V_VALOR_CRITERIO_4 NUMBER := NULL;
V_VALOR_CRITERIO_5 NUMBER := NULL;
V_VALOR_CRITERIO_6 NUMBER := NULL;
V_VALOR_CRITERIO_7 NUMBER := NULL;

BEGIN
  
  DELETE REPORTE_CUCO10_RES_ENSAYOS_TMP;
  COMMIT;
  
  V_CONT_REG := 1;
  
  FOR I IN ENSAYOS_CONVOCATORIA(P_NUM_CONVOCA) LOOP
    
    V_TOTAL := 0;      
              
        FOR J IN VALOR_CRITERIOS_ENSAYO(I.ID_ENSAYO_CRITICO) LOOP              
              V_TOTAL := V_TOTAL + J.VALOR_CRITERIO_VICIN;      
              
              IF (V_CONT_REG = 1) THEN
                V_VALOR_CRITERIO_1 := J.VALOR_CRITERIO_VICIN;
              END IF;
              
              IF (V_CONT_REG = 2) THEN
                V_VALOR_CRITERIO_2 := J.VALOR_CRITERIO_VICIN;
              END IF;
              
              IF (V_CONT_REG = 3) THEN
                V_VALOR_CRITERIO_3 := J.VALOR_CRITERIO_VICIN;
              END IF;
              
              IF (V_CONT_REG = 4) THEN
                V_VALOR_CRITERIO_4 := J.VALOR_CRITERIO_VICIN;
              END IF;
              
              IF (V_CONT_REG = 5) THEN
                V_VALOR_CRITERIO_5 := J.VALOR_CRITERIO_VICIN;
              END IF;
              
              IF (V_CONT_REG = 6) THEN
                V_VALOR_CRITERIO_6 := J.VALOR_CRITERIO_VICIN;
              END IF;
              
              IF (V_CONT_REG = 7) THEN
                V_VALOR_CRITERIO_7 := J.VALOR_CRITERIO_VICIN;
              END IF;
              
              V_CONT_REG := V_CONT_REG + 1;           
        END LOOP; 
        
        INSERT INTO REPORTE_CUCO10_RES_ENSAYOS_TMP (
          ID_REG,          
          ID_ENSAYO,
          ID_UNIDAD_POLICIAL,
          UNIDAD_SIGLA_FISICA,
          IDENTIFICACION_USUARIO,  
          PUESTO,
          NOMBRE_COMPLETO_USUARIO,
          GRADO_USUARIO,
          TITULO_ENSAYO,
          COMENTARIOS,
          VALOR_CRITERIO_1,
          VALOR_CRITERIO_2,
          VALOR_CRITERIO_3,
          VALOR_CRITERIO_4,
          VALOR_CRITERIO_5,
          VALOR_CRITERIO_6,
          VALOR_CRITERIO_7,
          VALOR_TOTAL)
        VALUES
        (SEC_REP_CUCO_10.NEXTVAL,
         I.ID_ENSAYO_CRITICO,
         I.ID_UNIDAD_POLICIAL,
         I.SIGLA_FISICA,
         I.IDENTIFICACION,
         1,
         I.NOMBRE_COMPLETO,
         I.GRADO,
         I.TITULO_ENSAYO,
         I.COMENTARIO,
         V_VALOR_CRITERIO_1,
         V_VALOR_CRITERIO_2,
         V_VALOR_CRITERIO_3,
         V_VALOR_CRITERIO_4,
         V_VALOR_CRITERIO_5,
         V_VALOR_CRITERIO_6,
         V_VALOR_CRITERIO_7,
         V_TOTAL         
         );
         
         COMMIT;
        
  END LOOP; 
  
  V_PUESTO := 1;
  
  -- CALCULAR PUESTOS ENSAYOS  
  FOR I IN TOMAR_ENSAYOS_REPORTE_TOTAL LOOP
      
      UPDATE REPORTE_CUCO10_RES_ENSAYOS_TMP
      SET PUESTO = V_PUESTO
      WHERE ID_REG = I.ID_REG;
      
      COMMIT;
      
      V_PUESTO := V_PUESTO + 1;
      
  END LOOP;
  
  
  
END PRC_REPORTE_CUCO_10;
/


ALTER TABLE PROPUESTA_NECESIDAD ADD IDENTIFICADOR_USUARIO_CREACION VARCHAR2(100);
ALTER TABLE PLAN_TRABAJO_IMPLEMENTACION MODIFY OBJETIVOS_ESPECIFICOS VARCHAR2(1200);
ALTER TABLE PLAN_TRABAJO_IMPLEMENTACION MODIFY OBJETIVO_GRAL_IMPLEMENTACION VARCHAR2(600);
ALTER TABLE SEMILLERO_INVESTIGACION MODIFY MISION_SEMILLERO VARCHAR2(600);
ALTER TABLE SEMILLERO_INVESTIGACION MODIFY VISION_SEMILLERO VARCHAR2(600);
ALTER TABLE SEMILLERO_INVESTIGACION MODIFY OBJETIVO_GENERAL VARCHAR2(600);
ALTER TABLE SEMILLERO_INVESTIGACION MODIFY OBJETIVO_ESPECIFICO VARCHAR2(600);
ALTER TABLE SEMILLERO_INVESTIGACION MODIFY METODOLOGIA_TRABAJO VARCHAR2(600);
ALTER TABLE SEMILLERO_INVESTIGACION MODIFY PRODUCTO_O_RESULTADO VARCHAR2(600);
ALTER TABLE SEMILLERO_INVESTIGACION MODIFY NOMBRE_RED_NODO_PERTENECE VARCHAR2(600);
ALTER TABLE RECURSO_HUMANO_SEMILLERO MODIFY COMPANIA VARCHAR2(100);
ALTER TABLE COMPROMISO_IMPLEMENTACION MODIFY COMENTARIO_TEMPORAL VARCHAR2(700);
ALTER TABLE compromiso_proyecto MODIFY COMENTARIO_TEMPORAL VARCHAR2(700);
ALTER TABLE COMENTARIO_COMPROMISO_PROYECTO MODIFY COMENTARIO VARCHAR2(700);
ALTER TABLE INFORME_AVANCE_IMPLEMENTACION MODIFY NRO_ACTA_APROBACION_COMITE VARCHAR2(100);
ALTER TABLE PERIODO MODIFY NOMBRE_CONVOCATORIA VARCHAR2(400);

ALTER TABLE PERIODO MODIFY NOMBRE_CONVOCATORIA VARCHAR2(400);
ALTER TABLE PROYECTO MODIFY NRO_ACTA_APROBACION_COMITE VARCHAR2(50);
ALTER TABLE ACTIVIDADES_REALIZADAS_PROY MODIFY DESCRIPCION_ACTIVIDAD VARCHAR2(600);
ALTER TABLE RESULTADOS_ALCANZADOS_PROY MODIFY RESULTADO_ALCANZADO VARCHAR2(600);
ALTER TABLE SUGERENCIAS_PROY MODIFY SUGERENCIA VARCHAR2(600);
ALTER TABLE EVIDENCIA_PROYECTO MODIFY DESCRIPCION VARCHAR2(600);
ALTER TABLE INFORME_AVANCE MODIFY TIPO_CONTENIDO_ARCHIVO VARCHAR2(300);
ALTER TABLE RESULTADOS_INVESTIGACION MODIFY DESCRIPCION VARCHAR2(600);
ALTER TABLE EVENTO_INVESTIGACION MODIFY DESCRIPCION VARCHAR2(700);

ALTER TABLE INVESTI_DESARROL_INVESTTIGADOR MODIFY TITULO_INVESTIGACION VARCHAR2(300);
ALTER TABLE INVESTI_DESARROL_INVESTTIGADOR MODIFY RESUMEN VARCHAR2(700);
ALTER TABLE INVESTI_DESARROL_INVESTTIGADOR MODIFY TITULO_INVESTIGACION VARCHAR2(700);

ALTER TABLE PUBLICACION_INVESTIGADOR MODIFY TITULO_PUBLICACION VARCHAR2(700);
ALTER TABLE PUBLICACION_INVESTIGADOR MODIFY RESUMEN_PUBLICACION VARCHAR2(700);
ALTER TABLE PUBLICACION_INVESTIGADOR MODIFY CODIGO_ISSN VARCHAR2(50);
ALTER TABLE PUBLICACION_INVESTIGADOR MODIFY VOLUMEN_REVISTA VARCHAR2(50);
ALTER TABLE PUBLICACION_INVESTIGADOR MODIFY FASCICULO_REVISTA VARCHAR2(50);
ALTER TABLE PUBLICACION_INVESTIGADOR MODIFY SERIE_REVISTA VARCHAR2(50);
ALTER TABLE PUBLICACION_INVESTIGADOR MODIFY CODIGO_ISBN VARCHAR2(50);
ALTER TABLE PUBLICACION_INVESTIGADOR MODIFY NOMBRE_LIBRO VARCHAR2(200);
ALTER TABLE PUBLICACION_INVESTIGADOR MODIFY EDITORIAL_LIBRO VARCHAR2(200);
ALTER TABLE PUBLICACION_INVESTIGADOR MODIFY NOMBRE_REVISTA VARCHAR2(200);


ALTER TABLE PROYECTO_VERSION MODIFY NRO_ACTA_APROBACION_COMITE VARCHAR(50);

UPDATE KEY_PROPERTIES SET VALOR = 'No se encontraron compromisos para el periodo seleccionado.' WHERE CLAVE = 'cu_pr_24_lbl_no_tipo_compromiso_convocatoria_lista_vacia';
UPDATE KEY_PROPERTIES SET VALOR = 'No se encontraron compromisos para la convocatoria seleccionada.' WHERE CLAVE = 'cu_pr_24_lbl_no_tipo_compromiso_convocatoria_lista_vacia';
UPDATE KEY_PROPERTIES SET VALOR = 'El número de identificación ingresado no existe en el sistema' WHERE CLAVE = 'cu_pr_21_info_persona_no_encontrada';
UPDATE KEY_PROPERTIES SET VALOR = 'Fecha incio' WHERE VALOR = 'Fecha de inicio';
UPDATE KEY_PROPERTIES SET VALOR = 'Fecha fin' WHERE VALOR = 'Fecha de fin';
UPDATE KEY_PROPERTIES SET VALOR = 'La publicación ha sido almacenada.' WHERE CLAVE = 'cu_iv_01_info_guardar_investigacion_exitosa';
UPDATE KEY_PROPERTIES SET VALOR = 'No existen compromisos con resultado No aceptado, para enviar al Grupo de investigación' WHERE CLAVE = 'cu_pr_25_lbl_mensaje_error_noexisten_propuesta_envia_grupo_inves';

CREATE TABLE RESUMEN_PRES_EJECUT_IMPL_COPIA
  (
    ID_RESUMEN_PRES_EJECUTA_IMPL NUMBER NOT NULL,
    ID_IMPLEMENTACION_PROYECTO   NUMBER NOT NULL,
    ID_INFORME_AVANCE_IMPL       NUMBER,
    NOMBRE_RUBRO                 VARCHAR2(30) NOT NULL,
    POLICIA_NAL_PPTO             NUMBER(20,2) DEFAULT 0,
    POLICIA_NAL_EJECUTA          NUMBER(20,2) DEFAULT 0,
    VICIN_PPTO                   NUMBER(20,2) DEFAULT 0,
    VICIN_EJECUTA                NUMBER(20,2) DEFAULT 0,
    UNIDAD_PPTO                  NUMBER(20,2) DEFAULT 0,
    UNIDAD_EJECUTA               NUMBER(20,2) DEFAULT 0,
    FUENTE1_PPTO                 NUMBER(20,2) DEFAULT 0,
    FUENTE1_EJECUTA              NUMBER(20,2) DEFAULT 0,
    FUENTE2_PPTO                 NUMBER(20,2) DEFAULT 0,
    FUENTE2_EJECUTA              NUMBER(20,2) DEFAULT 0,
    FUENTE3_PPTO                 NUMBER(20,2) DEFAULT 0,
    FUENTE3_EJECUTA              NUMBER(20,2) DEFAULT 0,
    FUENTE4_PPTO                 NUMBER(20,2) DEFAULT 0,
    FUENTE4_EJECUTA              NUMBER(20,2) DEFAULT 0,
    ORDEN                        NUMBER,
    TIPO                         VARCHAR2(1) DEFAULT 'I' NOT NULL,
    COMPROMISO_ACUMULA           VARCHAR2(100) NOT NULL
  );




create or replace PROCEDURE CREA_V_PRESU_PRO_CUMPLIDO_IMPL (P_ID_COMPROMISO_IMPL IN NUMBER, P_ID_IMPLEMENTACION_PROY  IN NUMBER) AS  

  P_ID_PLAN_TRABAJO plan_trabajo_implementacion.ID_PLAN_TRABAJO%TYPE;
  P_TIPO_COMPRO_IMPL compromiso_implementacion.ID_TIPO_COMPROMISO%TYPE;
  P_ID_INFORME_AVANCE_IMPL compromiso_implementacion.ID_TIPO_COMPROMISO%TYPE;
  P_COMPROMISO_ACUMULA RESUMEN_PRES_EJECUT_IMPL_COPIA.COMPROMISO_ACUMULA%TYPE;
  
BEGIN    
        
    select ID_TIPO_COMPROMISO  into P_TIPO_COMPRO_IMPL FROM compromiso_implementacion
        WHERE id_compromiso_implementacion = P_ID_COMPROMISO_IMPL;
    
    --226	TIPO_COMPROMISO_IMPLEMENTACION	Plan de Trabajo
    --227	TIPO_COMPROMISO_IMPLEMENTACION	Informe de avance de implementación
    --228	TIPO_COMPROMISO_IMPLEMENTACION	Informe final de implementación    
    IF P_TIPO_COMPRO_IMPL = 226 THEN
    
        select id_plan_trabajo into P_ID_PLAN_TRABAJO 
          from plan_trabajo_implementacion 
            WHERE id_compromiso_implementacion = P_ID_COMPROMISO_IMPL AND id_implementacion_proy = P_ID_IMPLEMENTACION_PROY;
            
        PKG_CALCULO_PRESUPUESTO_IMPL.PRC_CREAR_ACTUALIZA_PRES( P_ID_PLAN_TRABAJO, P_ID_IMPLEMENTACION_PROY );
        DELETE FROM RESUMEN_PRESUPUESTO_IMPL WHERE ID_IMPLEMENTACION_PROY = P_ID_IMPLEMENTACION_PROY AND ID_PLAN_TRABAJO = P_ID_PLAN_TRABAJO AND ESTADO = 'COMPROMISO_CUMPLIDO_PLAN_TRABAJO';
        UPDATE RESUMEN_PRESUPUESTO_IMPL set ESTADO = 'COMPROMISO_CUMPLIDO_PLAN_TRABAJO' WHERE ID_IMPLEMENTACION_PROY = P_ID_IMPLEMENTACION_PROY AND ID_PLAN_TRABAJO = P_ID_PLAN_TRABAJO;
        
    ELSE
        
        select ID_INFORME_AVANCE_IMPL into P_ID_INFORME_AVANCE_IMPL 
          from informe_avance_implementacion 
            WHERE id_compromiso_implementacion = P_ID_COMPROMISO_IMPL AND id_implementacion_proy = P_ID_IMPLEMENTACION_PROY;
        
        PKG_CALCULO_PRESUPUESTO_IMPL.PRC_CALCULAR_PRES_EJECUTA( P_ID_IMPLEMENTACION_PROY, P_ID_INFORME_AVANCE_IMPL );
        
          IF P_TIPO_COMPRO_IMPL = 227 THEN
                     
                DELETE FROM RESUMEN_PRES_EJECUT_IMPL_COPIA WHERE ID_IMPLEMENTACION_PROYECTO = P_ID_IMPLEMENTACION_PROY AND ID_INFORME_AVANCE_IMPL IS NOT NULL;   
                  insert into RESUMEN_PRES_EJECUT_IMPL_COPIA ( 
                  ID_RESUMEN_PRES_EJECUTA_IMPL,
                  ID_IMPLEMENTACION_PROYECTO,
                  ID_INFORME_AVANCE_IMPL,
                  NOMBRE_RUBRO,
                  POLICIA_NAL_PPTO,
                  POLICIA_NAL_EJECUTA,
                  VICIN_PPTO,
                  VICIN_EJECUTA,
                  UNIDAD_PPTO,
                  UNIDAD_EJECUTA,
                  FUENTE1_PPTO,
                  FUENTE1_EJECUTA,
                  FUENTE2_PPTO,
                  FUENTE2_EJECUTA,
                  FUENTE3_PPTO,
                  FUENTE3_EJECUTA,
                  FUENTE4_PPTO,
                  FUENTE4_EJECUTA,
                  ORDEN,
                  COMPROMISO_ACUMULA) 
                  select 
                  rpe.ID_RESUMEN_PRES_EJECUTA_IMPL,
                  rpe.ID_IMPLEMENTACION_PROYECTO,
                  rpe.ID_INFORME_AVANCE_IMPL,
                  rpe.NOMBRE_RUBRO,
                  rpe.POLICIA_NAL_PPTO,
                  rpe.POLICIA_NAL_EJECUTA,
                  rpe.VICIN_PPTO,
                  rpe.VICIN_EJECUTA,
                  rpe.UNIDAD_PPTO,
                  rpe.UNIDAD_EJECUTA,
                  rpe.FUENTE1_PPTO,
                  rpe.FUENTE1_EJECUTA,
                  rpe.FUENTE2_PPTO,
                  rpe.FUENTE2_EJECUTA,
                  rpe.FUENTE3_PPTO,
                  rpe.FUENTE3_EJECUTA,
                  rpe.FUENTE4_PPTO,
                  rpe.FUENTE4_EJECUTA,
                  rpe.ORDEN,
                  'ACUMULA_COMPROMISO_SOLO_AVANCE' AS COMPROMISO_ACUMULA
            from RESUMEN_PRES_EJECUTA_IMPL rpe WHERE rpe.ID_IMPLEMENTACION_PROYECTO = P_ID_IMPLEMENTACION_PROY AND rpe.ID_INFORME_AVANCE_IMPL IS NOT NULL;
                     
          ELSIF P_TIPO_COMPRO_IMPL = 228 THEN
                    
                  DELETE FROM RESUMEN_PRES_EJECUT_IMPL_COPIA WHERE ID_IMPLEMENTACION_PROYECTO = P_ID_IMPLEMENTACION_PROY AND ID_INFORME_AVANCE_IMPL IS NULL;  
                   insert into RESUMEN_PRES_EJECUT_IMPL_COPIA ( 
                  ID_RESUMEN_PRES_EJECUTA_IMPL,
                  ID_IMPLEMENTACION_PROYECTO,
                  ID_INFORME_AVANCE_IMPL,
                  NOMBRE_RUBRO,
                  POLICIA_NAL_PPTO,
                  POLICIA_NAL_EJECUTA,
                  VICIN_PPTO,
                  VICIN_EJECUTA,
                  UNIDAD_PPTO,
                  UNIDAD_EJECUTA,
                  FUENTE1_PPTO,
                  FUENTE1_EJECUTA,
                  FUENTE2_PPTO,
                  FUENTE2_EJECUTA,
                  FUENTE3_PPTO,
                  FUENTE3_EJECUTA,
                  FUENTE4_PPTO,
                  FUENTE4_EJECUTA,
                  ORDEN,
                  COMPROMISO_ACUMULA) 
                  select 
                  rpe.ID_RESUMEN_PRES_EJECUTA_IMPL,
                  rpe.ID_IMPLEMENTACION_PROYECTO,
                  rpe.ID_INFORME_AVANCE_IMPL,
                  rpe.NOMBRE_RUBRO,
                  rpe.POLICIA_NAL_PPTO,
                  rpe.POLICIA_NAL_EJECUTA,
                  rpe.VICIN_PPTO,
                  rpe.VICIN_EJECUTA,
                  rpe.UNIDAD_PPTO,
                  rpe.UNIDAD_EJECUTA,
                  rpe.FUENTE1_PPTO,
                  rpe.FUENTE1_EJECUTA,
                  rpe.FUENTE2_PPTO,
                  rpe.FUENTE2_EJECUTA,
                  rpe.FUENTE3_PPTO,
                  rpe.FUENTE3_EJECUTA,
                  rpe.FUENTE4_PPTO,
                  rpe.FUENTE4_EJECUTA,
                  rpe.ORDEN,
                  'ACUMULA_COMPROMISO_AVANCE_Y_FINAL' AS COMPROMISO_ACUMULA
            from RESUMEN_PRES_EJECUTA_IMPL rpe WHERE rpe.ID_IMPLEMENTACION_PROYECTO = P_ID_IMPLEMENTACION_PROY AND rpe.ID_INFORME_AVANCE_IMPL IS NULL;
            
          END IF;
                              
    END IF;    
    
END CREA_V_PRESU_PRO_CUMPLIDO_IMPL;


create or replace
PROCEDURE CREA_V_PRESUPUES_PRO_CUMPLIDO (P_ID_PROYECTO IN NUMBER, P_ID_COMPROMISO_PROYECTO IN NUMBER) AS

  V_TIPO_COMPROMISO COMPROMISO_PERIODO.TIPO_COMPROMISO%TYPE;
  V_ID_INFORME_AVANCE INFORME_AVANCE.ID_INFORME_AVANCE%TYPE;

BEGIN
    
  SELECT TIPO_COMPROMISO 
    INTO V_TIPO_COMPROMISO 
    FROM COMPROMISO_PERIODO 
      WHERE ID_COMPROMISO_PERIODO = 
        (SELECT ID_COMPROMISO_PERIODO 
            FROM COMPROMISO_PROYECTO 
                WHERE ID_COMPROMISO_PROYECTO = P_ID_COMPROMISO_PROYECTO);
  
  --COMPROMISO_PERIODO_FORMULACION_DEL_PROYECTO = 26 
  IF V_TIPO_COMPROMISO = 26 THEN
  
    --SE EJECUTA PARA DEJAR EN ESTADO COMPROMISO_CUMPLIDO
    PKG_CALCULO_PRESUPUESTO.PRC_CREAR_ACTUALIZA_PRES( P_ID_PROYECTO );
    UPDATE RESUMEN_PRESUPUESTO_PROYECTO set ESTADO = 'COMPROMISO_CUMPLIDO_FORMULACION' WHERE ID_PROYECTO = P_ID_PROYECTO;
    
    --SE EJECUTA NUEVAMENTE PARA DEJAR UNO TEMPORAR
    PKG_CALCULO_PRESUPUESTO.PRC_CREAR_ACTUALIZA_PRES( P_ID_PROYECTO );
    
  --COMPROMISO_PERIODO_INFORME_DE_AVANCE = 27   
  --COMPROMISO_PERIODO_INFORME_FINAL = 28
  ELSIF V_TIPO_COMPROMISO = 27 OR V_TIPO_COMPROMISO = 28 THEN
    
    SELECT informe.ID_INFORME_AVANCE
        INTO V_ID_INFORME_AVANCE
        FROM INFORME_AVANCE informe
        WHERE informe.ID_COMPROMISO_PROYECTO = P_ID_COMPROMISO_PROYECTO AND informe.ID_PROYECTO = P_ID_PROYECTO;
    
    PKG_CALCULO_PRESUPUESTO.PRC_CALCULAR_PRES_ACUM( P_ID_PROYECTO );    
    UPDATE RESUMEN_PRESUPUESTO_EJECUTADO resumen SET resumen.TIPO = 'F',resumen.ID_INFORME_AVANCE = V_ID_INFORME_AVANCE  
        WHERE resumen.ID_PROYECTO = P_ID_PROYECTO AND resumen.TIPO = 'A';
    
  END IF;

END CREA_V_PRESUPUES_PRO_CUMPLIDO;


create or replace
PROCEDURE "PRC_VERSION_PROYECTO" 
(
  P_ID_PROYECTO IN NUMBER,  
  ID_VERSION_PROYECTO IN NUMBER
) AS  

  ID_SEC_INSERT_PROYECTO_VERSION NUMBER;    
  ID_SEC_INSERT_FUENTE_PROYECTO NUMBER;
  
BEGIN
  DBMS_OUTPUT.PUT_LINE('ID_VERSION_PROYECTO ' || ID_VERSION_PROYECTO);  
  
  --ESTA CONSULTA SIEMPRE DEVOLVERA UN REGISTRO
  FOR rec_proyecto IN (SELECT * FROM PROYECTO WHERE ID_PROYECTO = P_ID_PROYECTO)
  LOOP
    DBMS_OUTPUT.PUT_LINE('Encontro pro ' || rec_proyecto.ID_PROYECTO);
    
    ID_SEC_INSERT_PROYECTO_VERSION := SEC_PROYECTO_VERSION.NEXTVAL;
    INSERT INTO PROYECTO_VERSION (
      ID_PROYECTO_VERSION,
      ID_VERSION,
			ID_PROYECTO,
			CODIGO_PROYECTO,
			TITULO_PROPUESTO,
			ID_LINEA,
			ID_PERIODO,
			FUNCION_PROYECTO,
			FECHA_ESTIMADA_INICIO,
			FECHA_ESTIMADA_FINALIZACION,
			VALOR_TOTAL,
			CONVOCATORIA,
			FECHA_REGISTRO,
			TEMA,
			FECHA_APROBACION_COMITE,
			NRO_ACTA_APROBACION_COMITE,
			ID_USUARIO_ROL,
			FECHA_ACTUALIZACION,
			ID_USUARIO_ROL_ACTUALIZA,
			ID_ESTADO,
			INFORME_FINAL,
			DESCRIPCION_INFORME_FINAL,
			FECHA_REGISTRO_INFORME_FINAL,
			ID_PROGRAMA,
			RESUMEN_PROYECTO,
			FECHA_APROBACION_COMITE_2,
			NRO_ACTA_APROB_COMITE,
			ID_UNIDAD_POLICIAL,
			ESTADO_TEMPORAL_FINANCIA,
			VALOR_FINANCIAR,
			ID_PROPUESTA_NECESIDAD,
			ID_PROPUESTA_CONVOCATORIA,
			ID_ESTADO_IMPLEMENTACION,
			PRESUPUESTO_SOLICITADO)
			VALUES (
          ID_SEC_INSERT_PROYECTO_VERSION,
					ID_VERSION_PROYECTO,
          rec_proyecto.ID_PROYECTO,
					rec_proyecto.CODIGO_PROYECTO,
					rec_proyecto.TITULO_PROPUESTO,
					rec_proyecto.ID_LINEA,
					rec_proyecto.ID_PERIODO,
					rec_proyecto.FUNCION_PROYECTO,
					rec_proyecto.FECHA_ESTIMADA_INICIO,
					rec_proyecto.FECHA_ESTIMADA_FINALIZACION,
					rec_proyecto.VALOR_TOTAL,
					rec_proyecto.CONVOCATORIA,
					rec_proyecto.FECHA_REGISTRO,
					rec_proyecto.TEMA,
					rec_proyecto.FECHA_APROBACION_COMITE,
					rec_proyecto.NRO_ACTA_APROBACION_COMITE,
					rec_proyecto.ID_USUARIO_ROL,
					rec_proyecto.FECHA_ACTUALIZACION,
					rec_proyecto.ID_USUARIO_ROL_ACTUALIZA,
					rec_proyecto.ID_ESTADO,
					rec_proyecto.INFORME_FINAL,
					rec_proyecto.DESCRIPCION_INFORME_FINAL,
					rec_proyecto.FECHA_REGISTRO_INFORME_FINAL,
					rec_proyecto.ID_PROGRAMA,
					rec_proyecto.RESUMEN_PROYECTO,
					rec_proyecto.FECHA_APROBACION_COMITE_2,
					rec_proyecto.NRO_ACTA_APROB_COMITE,
					rec_proyecto.ID_UNIDAD_POLICIAL,
					rec_proyecto.ESTADO_TEMPORAL_FINANCIA,
					rec_proyecto.VALOR_FINANCIAR,
					rec_proyecto.ID_PROPUESTA_NECESIDAD,
					rec_proyecto.ID_PROPUESTA_CONVOCATORIA,
					rec_proyecto.ID_ESTADO_IMPLEMENTACION,
					rec_proyecto.PRESUPUESTO_SOLICITADO
			);
      
      --SEMILLERO DE DICHO PROYECTO
        --COPIA DE SEMILLERO PROYECTO
        FOR rec_semillero_proyecto IN (SELECT * FROM SEMILLERO_PROYECTO WHERE ID_PROYECTO = P_ID_PROYECTO)
        LOOP
        
          DBMS_OUTPUT.PUT_LINE('  Encontro semillero proyecto ' || rec_semillero_proyecto.ID_SEMILLERO_PROYECTO);
          
       END LOOP;
       
      --INSTITUCIONES DE DICHO PROYECTO
        --COPIA DE INSTITUCIONES PROYECTO
        FOR rec_instituciones_proyecto IN (SELECT * FROM INSTITUCIONES_PROYECTO WHERE ID_PROYECTO = P_ID_PROYECTO)
        LOOP
        
          DBMS_OUTPUT.PUT_LINE('  Encontro instituciones proyecto ' || rec_instituciones_proyecto.ID_INSTITUCION_PROYECTO);
          INSERT INTO INSTITUCIONES_PROYECTO_VERSION 
                  (
                    ID_INSTITUCION_PROYECTO,
                    FECHA_REGISTRO,
                    ID_USUARIO_ROL,
                    ID_INSTITUCION,
                    APORTE_INVESTIGACION,
                    VALOR_OTRO_TIPO,
                    ID_PROYECTO
                  )
                  VALUES(
                    SEC_INSTITUCION_PROYECTO_VERS.NEXTVAL,
                    rec_instituciones_proyecto.FECHA_REGISTRO,
                    rec_instituciones_proyecto.ID_USUARIO_ROL,
                    rec_instituciones_proyecto.ID_INSTITUCION,
                    rec_instituciones_proyecto.APORTE_INVESTIGACION,
                    rec_instituciones_proyecto.VALOR_OTRO_TIPO,
                    ID_SEC_INSERT_PROYECTO_VERSION);
          
       END LOOP;
       
      --GRUPO INVESTIGACION DE DICHO PROYECTO
        --COPIA DE GRUPOS INVESTIGACION PROYECTO
        FOR rec_grupo_inv_proyecto IN (SELECT * FROM GRUPO_INVEST_PROYECTO WHERE ID_PROYECTO = P_ID_PROYECTO)
        LOOP
        
          DBMS_OUTPUT.PUT_LINE('  Encontro grupo investigacion proyecto ' || rec_grupo_inv_proyecto.ID_GRUPO_INVEST_PROYECTO);
          INSERT INTO GRUPO_INVEST_PROYECTO_VERSION 
            (
            ID_GRUPO_INVEST_PROYECTO,
            FECHA_VINCULACION,
            ID_GRUPO_INVESTIGACION,
            ID_PROYECTO,
            FECHA_REGISTRO,
            ID_USUARIO_ROL,
            USUARIO,
            MAQUINA
              )
              VALUES(
              SEC_GRUPO_INVEST_PROYECTO_VERS.NEXTVAL,									
            rec_grupo_inv_proyecto.FECHA_VINCULACION,
            rec_grupo_inv_proyecto.ID_GRUPO_INVESTIGACION,
            ID_SEC_INSERT_PROYECTO_VERSION,
            rec_grupo_inv_proyecto.FECHA_REGISTRO,
            rec_grupo_inv_proyecto.ID_USUARIO_ROL,
            rec_grupo_inv_proyecto.USUARIO,
            rec_grupo_inv_proyecto.MAQUINA);
          
        END LOOP;  
      
       --TEMAS PROYECTO DE DICHO PROYECTO
        --COPIA DE TEMAS PROYECTO
        FOR rec_tema_proyecto IN (SELECT * FROM TEMA_PROYECTO WHERE ID_PROYECTO = P_ID_PROYECTO)
        LOOP
        
          DBMS_OUTPUT.PUT_LINE('  Encontro tema proyecto ' || rec_tema_proyecto.ID_TEMA_PROYECTO);
          INSERT INTO TEMA_PROYECTO_VERSION 
                (
                ID_TEMA_PROYECTO,
                TEXTO,
                ARCHIVO_SOPORTE,
                ID_PROYECTO,
                ID_TEMA,
                FECHA_REGISTRO,
                USUARIO,
                NOMBRE_ARCHIVO_FISICO,
                TIPO_CONTENIDO_ARCHIVO,
                TIPO_TAB_INFORMACION_IMPL
                )
                VALUES(
                SEC_TEMA_PROYECTO_VERSION.NEXTVAL,				
                rec_tema_proyecto.TEXTO,
                rec_tema_proyecto.ARCHIVO_SOPORTE,
                ID_SEC_INSERT_PROYECTO_VERSION,
                rec_tema_proyecto.ID_TEMA,
                rec_tema_proyecto.FECHA_REGISTRO,
                rec_tema_proyecto.USUARIO,
                rec_tema_proyecto.NOMBRE_ARCHIVO_FISICO,
                rec_tema_proyecto.TIPO_CONTENIDO_ARCHIVO,
                rec_tema_proyecto.TIPO_TAB_INFORMACION_IMPL);
          
        END LOOP;
      
        --INDICADORES DE DICHO PROYECTO
        --COPIA DE INDICADORES PROYECTO
        FOR rec_indicador_proyecto IN (SELECT * FROM INDICADORES_PROYECTO WHERE ID_PROYECTO = P_ID_PROYECTO)
        LOOP
          DBMS_OUTPUT.PUT_LINE('  Encontro indicador proyecto ' || rec_indicador_proyecto.ID_INDICADOR_PROYECTO);
          
          INSERT INTO INDICADORES_PROYECTO_VERSION 
                  (
                    ID_INDICADOR_PROYECTO,
					NOMBRE_INDICADOR,
					NOMBRE_NUMERADOR,
					NOMBRE_DENOMINADOR,
					FECHA_REGISTRO,
					ID_USUARIO_ROL,
					ID_PROYECTO,
					INDICADOR_BASE,
					CASO_USO,
					VALOR_NUMERADOR,
					VALOR_DENOMINADOR
          )
          VALUES(
          SEC_INDICADORES_PROYECTO_VERSI.NEXTVAL,
					rec_indicador_proyecto.NOMBRE_INDICADOR,
					rec_indicador_proyecto.NOMBRE_NUMERADOR,
					rec_indicador_proyecto.NOMBRE_DENOMINADOR,
					rec_indicador_proyecto.FECHA_REGISTRO,
					rec_indicador_proyecto.ID_USUARIO_ROL,
					ID_SEC_INSERT_PROYECTO_VERSION,
					rec_indicador_proyecto.INDICADOR_BASE,
					rec_indicador_proyecto.CASO_USO,
					rec_indicador_proyecto.VALOR_NUMERADOR,
					rec_indicador_proyecto.VALOR_DENOMINADOR);
          
        END LOOP;
        
        --INVESTIGADORES DE DICHO PROYECTO
        --COPIA DE INVESTIGADOR PROYECTO
        FOR rec_investiga_proyecto IN (SELECT * FROM INVESTIGADORES_PROYECTO WHERE ID_PROYECTO = P_ID_PROYECTO)
        LOOP
          DBMS_OUTPUT.PUT_LINE('  Encontro investigador ' || rec_investiga_proyecto.ID_INVESTIGADOR_PROYECTO);
          INSERT INTO INVESTIGADORES_PROY_VERSION(
          ID_INVESTIGADOR_PROYECTO,
          ID_PROYECTO,
          VALOR_ESPECIE,
          ID_TIPO_VINCULACION,
          IDENTIFICACION,
          FUNCION_PROYECTO,
          HORAS_DEDICACION,
          INVESTIGADO_3ANIOS,
          INVESTIGADO_ANUAL,
          VALOR_HORA,
          ACTIVO,
          VALOR_EFECTIVO,
          ID_FUENTE_PROYECTO,
          ID_USUARIO_ROL,
          FECHA_REGISTRO,
          TELEFONO,
          INSTITUCION_EXTERNA,
          NOMBRE_COMPLETO,
          GRADO,
          CORREO,
          CARGO,
          CALCULO_HORA_TOTAL,
          ID_UNIDAD_POLICIAL,
          ID_TIPO_INVESTIGADOR,
          ORIGEN_SIAF_O_INVESTI,
          ID_PLAN_TRABAJO,
          HORAS_TOTALES_IMPL,
          HORAS_DEDICADA_AVANCE_IMPL,
          HORAS_DEDICADA_AVANC_FIN_IMPL) 
        VALUES(
          SEC_INVESTIGADORES_PROY_VERSIO.NEXTVAL,
          ID_SEC_INSERT_PROYECTO_VERSION,
          rec_investiga_proyecto.VALOR_ESPECIE,
          rec_investiga_proyecto.ID_TIPO_VINCULACION,
          rec_investiga_proyecto.IDENTIFICACION,
          rec_investiga_proyecto.FUNCION_PROYECTO,
          rec_investiga_proyecto.HORAS_DEDICACION,
          rec_investiga_proyecto.INVESTIGADO_3ANIOS,
          rec_investiga_proyecto.INVESTIGADO_ANUAL,
          rec_investiga_proyecto.VALOR_HORA,
          rec_investiga_proyecto.ACTIVO,
          rec_investiga_proyecto.VALOR_EFECTIVO,
          rec_investiga_proyecto.ID_FUENTE_PROYECTO,
          rec_investiga_proyecto.ID_USUARIO_ROL,
          rec_investiga_proyecto.FECHA_REGISTRO,
          rec_investiga_proyecto.TELEFONO,
          rec_investiga_proyecto.INSTITUCION_EXTERNA,
          rec_investiga_proyecto.NOMBRE_COMPLETO,
          rec_investiga_proyecto.GRADO,
          rec_investiga_proyecto.CORREO,
          rec_investiga_proyecto.CARGO,
          rec_investiga_proyecto.CALCULO_HORA_TOTAL,
          rec_investiga_proyecto.ID_UNIDAD_POLICIAL,
          rec_investiga_proyecto.ID_TIPO_INVESTIGADOR,
          rec_investiga_proyecto.ORIGEN_SIAF_O_INVESTI,
          rec_investiga_proyecto.ID_PLAN_TRABAJO,
          rec_investiga_proyecto.HORAS_TOTALES_IMPL,
          rec_investiga_proyecto.HORAS_DEDICADA_AVANCE_IMPL,
          rec_investiga_proyecto.HORAS_DEDICADA_AVANC_FIN_IMPL
          );
        END LOOP;
        
        --FUENTES DE DICHO PROYECTO
        --COPIA DE FUENTE PROYECTO
        FOR rec_fuente_proyecto IN (SELECT * FROM FUENTE_PROYECTO WHERE ID_PROYECTO = P_ID_PROYECTO)
        LOOP
          DBMS_OUTPUT.PUT_LINE('  Encontro fuente proyecto ' || rec_fuente_proyecto.ID_FUENTE_PROYECTO);
          
            ID_SEC_INSERT_FUENTE_PROYECTO := SEC_FUENTE_PROYECTO_VERSION.NEXTVAL;
            INSERT INTO FUENTE_PROYECTO_VERSION 
            (
              ID_FUENTE_PROYECTO,
              ID_TIPO_FUENTE,
              ID_PROYECTO,
              ID_USUARIO_ROL,
              FECHA_REGISTRO,
              NOMBRE_FUENTE,
              FUENTE_BASE,
              USUARIO_REGISTRA,
              MAQUINA
              )
              VALUES(
              ID_SEC_INSERT_FUENTE_PROYECTO,
              rec_fuente_proyecto.ID_TIPO_FUENTE,
              ID_SEC_INSERT_PROYECTO_VERSION,
              rec_fuente_proyecto.ID_USUARIO_ROL,
              rec_fuente_proyecto.FECHA_REGISTRO,
              rec_fuente_proyecto.NOMBRE_FUENTE,
              rec_fuente_proyecto.FUENTE_BASE,
              rec_fuente_proyecto.USUARIO_REGISTRA,
              rec_fuente_proyecto.MAQUINA);
              
              --POR CADA FUENTE - COPIA EQUIPOS INVESTIGACION
              --COPIA DE SEMILLERO PROYECTO
              FOR rec_equipo_inv_proyecto IN (SELECT * FROM EQUIPOS_INVESTIGACION WHERE ID_FUENTE_PROYECTO = rec_fuente_proyecto.ID_FUENTE_PROYECTO)
              LOOP
              
                DBMS_OUTPUT.PUT_LINE('    Encontro equipo investigacion ' || rec_equipo_inv_proyecto.ID_EQUIPO_INVESTIGACION);
                INSERT INTO EQUIPOS_INVESTIGACION_VERSION 
                  (
                    ID_EQUIPO_INVESTIGACION,
                    VALOR,
                    ESPECIFICACIONES,
                    ID_FUENTE_PROYECTO,
                    ID_ORIGEN,
                    NOMBRE_EQUIPO
                    )
                    VALUES(
                    SEC_EQUIPOS_INVESTIGACION_VERS.NEXTVAL,																			
                    rec_equipo_inv_proyecto.VALOR,
                    rec_equipo_inv_proyecto.ESPECIFICACIONES,
                    ID_SEC_INSERT_FUENTE_PROYECTO,
                    rec_equipo_inv_proyecto.ID_ORIGEN,
                    rec_equipo_inv_proyecto.NOMBRE_EQUIPO);
              END LOOP;
              
              --POR CADA FUENTE PROYECTO - COPIA DE EVENTO PROYECTO
              FOR rec_evento_proyecto IN (SELECT * FROM EVENTO_PROYECTO WHERE ID_PROYECTO = P_ID_PROYECTO AND ID_FUENTE_PROYECTO = rec_fuente_proyecto.ID_FUENTE_PROYECTO)
              LOOP
                  
                  DBMS_OUTPUT.PUT_LINE('    Encontro evento proyecto ' || rec_evento_proyecto.ID_EVENTO_PROYECTO);
                  INSERT INTO EVENTO_PROYECTO_VERSION 
                  (
                    ID_EVENTO_PROYECTO,
                    ID_FUENTE_PROYECTO,
                    COSTO,
                    ID_PROYECTO,
                    TITULO_EVENTO,
                    OBJETIVO_EVENTO,
                    FECHA_REGISTRO,
                    ID_USUARIO_ROL,
                    CODIGO_CIUDAD,
                    NOMBRE_CIUDAD
                    )
                    VALUES(
                    SEC_EVENTO_PROYECTO_VERSION.NEXTVAL,		
                    ID_SEC_INSERT_FUENTE_PROYECTO,
                    rec_evento_proyecto.COSTO,
                    ID_SEC_INSERT_PROYECTO_VERSION,
                    rec_evento_proyecto.TITULO_EVENTO,
                    rec_evento_proyecto.OBJETIVO_EVENTO,
                    rec_evento_proyecto.FECHA_REGISTRO,
                    rec_evento_proyecto.ID_USUARIO_ROL,
                    rec_evento_proyecto.CODIGO_CIUDAD,
                    rec_evento_proyecto.NOMBRE_CIUDAD);
              END LOOP;
              
              --POR CADA FUENTE PROYECTO - COPIA DE EVENTO PROYECTO
              FOR rec_otros_gasto_proyecto IN (SELECT * FROM OTROS_GASTOS_PROYECTO WHERE ID_FUENTE_PROYECTO = rec_fuente_proyecto.ID_FUENTE_PROYECTO)          
              LOOP
                  
                  DBMS_OUTPUT.PUT_LINE('    Encontro otros gastos proyecto ' || rec_otros_gasto_proyecto.ID_OTROS_GASTOS_PROYECTO);                  
                  INSERT INTO OTROS_GASTOS_PROYECTO_VERSION 
                  (
                    ID_OTROS_GASTOS_PROYECTO,
                    VALOR,
                    ID_FUENTE_PROYECTO_VERSION,
                    ID_TIPO_RUBRO,
                    ID_TIPO_ESPECIE_EFECTIVO,
                    FECHA_REGISTRO,
                    ID_USUARIO_ROL
                    )
                    VALUES(
                    SEC_OTROS_GASTOS_PROYECTO_VERS.NEXTVAL,		                    
                    rec_otros_gasto_proyecto.VALOR,
                    ID_SEC_INSERT_FUENTE_PROYECTO,
                    rec_otros_gasto_proyecto.ID_TIPO_RUBRO,
                    rec_otros_gasto_proyecto.ID_TIPO_ESPECIE_EFECTIVO,
                    rec_otros_gasto_proyecto.FECHA_REGISTRO,
                    rec_otros_gasto_proyecto.ID_USUARIO_ROL);
              END LOOP;    
              
        END LOOP;          
    END LOOP;--FIN LOOP PROYECTOS
    
    --HACEMOS EL LLAMADO PAQUETE DE PRESUPUESTO PARA EL PROYECTO RECIBIDO COMO PARAMETRO
      PKG_CALCULO_PRESUPUESTO.PRC_CREAR_ACTUALIZA_PRES( P_ID_PROYECTO );
      UPDATE RESUMEN_PRESUPUESTO_PROYECTO set ESTADO = CONCAT( 'P_VERSION_', TO_CHAR(ID_SEC_INSERT_PROYECTO_VERSION) ) WHERE ID_PROYECTO = P_ID_PROYECTO AND ESTADO = 'TEMPORAL';  
              
END PRC_VERSION_PROYECTO;
/

ALTER TABLE EJECUCION_EQUIPOS_PROYECTO ADD CORRECION CHAR(1) DEFAULT 'N';
ALTER TABLE EJECUCION_EVENTOS_PROYECTO ADD CORRECION CHAR(1) DEFAULT 'N';
ALTER TABLE EJECUCION_VIAJES_PROYECTO ADD CORRECION CHAR(1) DEFAULT 'N';
ALTER TABLE EJECUCION_OTROS_GASTOS_PROY ADD CORRECION CHAR(1) DEFAULT 'N';
ALTER TABLE SUGERENCIAS_PROY ADD CORRECION CHAR(1) DEFAULT 'N';
ALTER TABLE COMENTARIO_COMPROMISO_PROYECTO ADD CORRECION CHAR(1) DEFAULT 'N';
ALTER TABLE INDICADOR_COMPROMISO_PROYECTO ADD CORRECION CHAR(1) DEFAULT 'N';
ALTER TABLE ACTIVIDADES_REALIZADAS_PROY ADD CORRECION CHAR(1) DEFAULT 'N';
ALTER TABLE RESULTADOS_ALCANZADOS_PROY ADD CORRECION CHAR(1) DEFAULT 'N';
ALTER TABLE HORAS_INVESTIGADOR ADD CORRECION CHAR(1) DEFAULT 'N';
ALTER TABLE EVIDENCIA_PROYECTO ADD CORRECION CHAR(1) DEFAULT 'N';

UPDATE EJECUCION_EQUIPOS_PROYECTO SET CORRECION =  'N';
UPDATE EJECUCION_EVENTOS_PROYECTO SET CORRECION =  'N';
UPDATE EJECUCION_VIAJES_PROYECTO SET CORRECION =  'N';
UPDATE EJECUCION_OTROS_GASTOS_PROY SET CORRECION =  'N';
UPDATE SUGERENCIAS_PROY SET CORRECION =  'N';
UPDATE COMENTARIO_COMPROMISO_PROYECTO SET CORRECION =  'N';
UPDATE INDICADOR_COMPROMISO_PROYECTO SET CORRECION =  'N';
UPDATE ACTIVIDADES_REALIZADAS_PROY SET CORRECION =  'N';
UPDATE RESULTADOS_ALCANZADOS_PROY SET CORRECION =  'N';
UPDATE HORAS_INVESTIGADOR SET CORRECION =  'N';
UPDATE EVIDENCIA_PROYECTO SET CORRECION =  'N';

DELETE FROM tema_proyecto;
DELETE FROM EVALUACION_PROYECTO;
DELETE FROM HISTORIAL_ESTADOS_PROYECTO;
DELETE FROM actividades_realizadas_proy;
DELETE from HORAS_INVESTIGADOR;
DELETE FROM INDICADOR_COMPROMISO_PROYECTO;
DELETE FROM EJECUCION_OTROS_GASTOS_PROY;
DELETE FROM EJECUCION_EQUIPOS_PROYECTO;
DELETE FROM EJECUCION_EVENTOS_PROYECTO;
DELETE FROM EJECUCION_VIAJES_PROYECTO;
DELETE FROM RESENIA_INVESTIGACION;
DELETE FROM RESULTADOS_INVESTIGACION;
DELETE FROM INFORME_AVANCE;
DELETE FROM RESULTADOS_ALCANZADOS_PROY;
DELETE FROM SUGERENCIAS_PROY;
DELETE FROM EVIDENCIA_PROYECTO;
DELETE FROM COMENTARIO_COMPROMISO_PROYECTO;
DELETE FROM COMPROMISO_PROYECTO;
DELETE FROM EXCEPCIONES_COMPROMISO;
DELETE FROM compromiso_periodo;
DELETE FROM INVESTIGADORES_PROYECTO;
DELETE FROM VIAJES_PROYECTO;
DELETE FROM EVALUADORES_PROYECTO_MIGRADO;
DELETE FROM TIPO_GASTO_EVENTO;
DELETE FROM EVENTO_PROYECTO;
DELETE FROM GRUPO_INVEST_PROYECTO;
DELETE FROM EQUIPOS_INVESTIGACION;
DELETE FROM FUENTE_PROYECTO;
DELETE FROM INDICADORES_PROYECTO;
DELETE FROM COMENTARIO_PROYECTO;
DELETE FROM INSTITUCIONES_PROYECTO;
DELETE FROM COMENTARIO;
DELETE FROM CRONOGRAMA_SEMILLERO;
DELETE FROM SEMILLERO_PROYECTO;
DELETE FROM EVALUACION_PROYECTO_GRADO;
DELETE FROM ASESORIA_PROYECTO;
DELETE FROM DOCUMENTACION_PROYECTO;
DELETE FROM GRUPO_INVEST_PROYECTO_VERSION;
DELETE FROM EVENTO_PROYECTO_VERSION;
DELETE FROM EQUIPOS_INVESTIGACION_VERSION;
DELETE FROM FUENTE_PROYECTO_VERSION;
DELETE FROM INDICADORES_PROYECTO_VERSION;
DELETE FROM INSTITUCIONES_PROYECTO_VERSION;
DELETE FROM INVESTIGADORES_PROY_VERSION;
DELETE FROM TEMA_PROYECTO_VERSION;
DELETE FROM PROYECTO_VERSION;
delete from DETALLE_EVALUACION;
DELETE FROM INDICADORES_INFORME_AVANCE_IMP;
DELETE FROM ACTIVIDADES_IMPLEMENTACION;
DELETE FROM INFORME_AVANCE_IMPLEMENTACION;
DELETE FROM RESPONSABLE_ACTIVIDAD_IMPLEMEN;
DELETE FROM ACTIVIDADES_PLAN_TRABAJO;
DELETE FROM INDICADORES_PLAN_TRABAJO;
DELETE FROM INVESTIGADORES_PROYECTO;
DELETE FROM PLAN_TRABAJO_IMPLEMENTACION;
DELETE FROM COMPROMISO_IMPLEMENTACION;
DELETE FROM SEMILLEROS_IMPLEMENTACION;
DELETE FROM IMPLEMENTACIONES_PROYECTO;
DELETE FROM VERSIONES;
DELETE FROM PROYECTO;
DELETE FROM TIPO_UNIDAD_PERIODO;
DELETE FROM UNIDAD_POLICIAL_PERIODO;
DELETE FROM FUNCIONARIO_NECESIDAD;
DELETE FROM UNIDAD_EJECUTORA;
DELETE FROM PROPUESTA_NECESIDAD;
DELETE FROM PERIODO WHERE ID_PERIODO != 1;
DELETE FROM correo_envio;
DELETE FROM EVALUADORES_PROYECTO_GRADO;
DELETE FROM EVENTO_INVESTIGACION;
DELETE FROM EVENTOS_CAPACITACION_SEMILLERO;
DELETE FROM FORMACION_INVESTIGADOR;
DELETE FROM GRADOS_VALORES;
DELETE FROM INVESTI_DESARROL_INVESTTIGADOR;
DELETE FROM PUBLICACION_INVESTIGADOR;
DELETE FROM INVESTIGADOR;
DELETE FROM MODALIDAD_ASESORIA_PROYECTO;
DELETE FROM TALENTO_ESTIMULO_SEMILLERO;
DELETE FROM OTROS_ESTIMULOS_SEMILLERO;
DELETE FROM OTROS_GASTOS_PROYECTO;
DELETE FROM OTROS_GASTOS_PROYECTO_VERSION;
DELETE FROM RECURSO_HUMANO_SEMILLERO;
DELETE FROM REPORTE_CUCO10_RES_ENSAYOS_TMP;
DELETE FROM RESUMEN_PRES_EJECUTA_IMPL;
DELETE FROM RESUMEN_PRESUPUESTO_EJECUTADO;
DELETE FROM RESUMEN_PRESUPUESTO_IMPL;
DELETE FROM RESUMEN_PRESUPUESTO_PROYECTO;
DELETE FROM REUNIONES_SEMILLERO;
DELETE FROM SEMILLERO_INVESTIGACION;
--SELECT * FROM user_constraints where constraint_name = 'OTROS_GASTOS_PROYECTO';
UPDATE PERIODO SET ESTADO = 'M' WHERE ID_PERIODO = 1;


--EMPLE_VICIN_DINAE
SELECT DISTINCT E.CONSECUTIVO CONSECUTIVO_EMPLEA, E.IDENTIFICACION, E.NOMBRES, E.APELLIDOS, E.GRAD_ALFABETICO GRADO, C.DESCRIPCION CARGO, C.CARGO COD_CARGO,
       E.DIRECCION DIREC_EMPLEA, LG1.DESCRIPCION DEPTO_RESIDE, LG1.CODIGO COD_DEPTO_RESIDE, LG.DESCRIPCION CIUDAD_RESIDE, LG.CODIGO COD_CIU_RES,
       E.SIGLA_LABORANDO, UD.CONSECUTIVO COD_UNID_LAB, E.CORREO_ELECTRONICO, E.TELEFONO, LG2.DESCRIPCION CIU_EXP_DOC, LG2.CODIGO COD_CIU_EXP_DOC,
       E.NUMERO_CELULAR, CT.DESCRIPCION, CT.ID_CATEGORIA COD_CATEG_EMP, TE.FECHA_INICIO INGRESO_INSTITU,
       E.GRAD_ALFABETICO ALFABETICO
FROM USR_REHU.EMPLEADOS E, USR_REHU.CARGOS C, USR_REHU.LUGARES_GEOGRAFICOS LG, USR_REHU.LUGARES_GEOGRAFICOS LG1, USR_REHU.LUGARES_GEOGRAFICOS LG2, USR_REHU.GRADOS GR, USR_REHU.CATEGORIAS CT, USR_REHU.UNIDADES_DEPENDENCIA UD,
     USR_REHU.TIEMPOS_EMPLEADOS TE
WHERE E.CARG_CARGO=C.CARGO
AND LG.CODIGO=E.LUBA_LUGE_CODIGO
AND LG.LUGE_PAPA=LG1.CODIGO
AND LG2.CODIGO=E.LUGE_CODIGO_EXPEDIDA
AND GR.ALFABETICO=E.GRAD_ALFABETICO
AND GR.ID_CATEGORIA=CT.ID_CATEGORIA
AND E.UNDE_CONSECUTIVO_NOMINADO=UD.CONSECUTIVO
AND TE.EMPL_CONSECUTIVO=E.CONSECUTIVO
AND TE.EMPL_UNDE_FUERZA=E.UNDE_FUERZA
AND TE.EMPL_UNDE_CONSECUTIVO=E.UNDE_CONSECUTIVO
AND CT.DESCRIPCION IN ('OFICIAL','NIVEL EJECUTIVO','AGENTE','SUBOFICIAL')
AND TE.TIPO = 'IE'
AND E.ACTIVO= 'SI'
UNION
SELECT DISTINCT E.CONSECUTIVO CONSECUTIVO_EMPLEA, E.IDENTIFICACION, E.NOMBRES, E.APELLIDOS, E.GRAD_ALFABETICO GRADO, C.DESCRIPCION CARGO, C.CARGO COD_CARGO,
       E.DIRECCION DIREC_EMPLEA, LG1.DESCRIPCION DEPTO_RESIDE, LG1.CODIGO COD_DEPTO_RESIDE, LG.DESCRIPCION CIUDAD_RESIDE, LG.CODIGO COD_CIU_RES,
       E.SIGLA_LABORANDO, UD.CONSECUTIVO COD_UNID_LAB, E.CORREO_ELECTRONICO, E.TELEFONO, LG2.DESCRIPCION CIU_EXP_DOC, LG2.CODIGO COD_CIU_EXP_DOC,
       E.NUMERO_CELULAR, CT.DESCRIPCION, CT.ID_CATEGORIA COD_CATEG_EMP, TE.FECHA_INICIO INGRESO_INSTITU,
        E.GRAD_ALFABETICO ALFABETICO
FROM USR_REHU.EMPLEADOS E,
     USR_REHU.CARGOS C,
    USR_REHU.LUGARES_GEOGRAFICOS LG,
    USR_REHU.LUGARES_GEOGRAFICOS LG1,
    USR_REHU.LUGARES_GEOGRAFICOS LG2,
    USR_REHU.GRADOS GR, USR_REHU.CATEGORIAS CT,
    USR_REHU.UNIDADES_DEPENDENCIA UD,
    USR_REHU.TIEMPOS_EMPLEADOS TE
WHERE E.CARG_CARGO=C.CARGO
AND LG.CODIGO=E.LUBA_LUGE_CODIGO
AND LG.LUGE_PAPA=LG1.CODIGO
AND LG2.CODIGO=E.LUGE_CODIGO_EXPEDIDA
AND GR.ALFABETICO=E.GRAD_ALFABETICO
AND GR.ID_CATEGORIA=CT.ID_CATEGORIA
AND E.UNDE_CONSECUTIVO_NOMINADO=UD.CONSECUTIVO
AND TE.EMPL_CONSECUTIVO=E.CONSECUTIVO
AND TE.EMPL_UNDE_FUERZA=E.UNDE_FUERZA
AND TE.EMPL_UNDE_CONSECUTIVO=E.UNDE_CONSECUTIVO
AND CT.DESCRIPCION IN ('NO UNIFORMADO')
AND TE.TIPO = 'AP'
AND E.ACTIVO= 'SI'


--LUGAR_GEOGRAFICO
SELECT LG2.CODIGO CODIGO_DEPTO, LG2.DESCRIPCION DESC_DEPTO, LG.CODIGO COD_MUNI, LG.DESCRIPCION DESC_MUNI
FROM USR_REHU.LUGARES_GEOGRAFICOS LG, USR_REHU.LUGARES_GEOGRAFICOS LG2
WHERE LG.LUGE_PAPA=LG2.CODIGO
GROUP BY  LG2.CODIGO, LG2.DESCRIPCION, LG.CODIGO, LG.DESCRIPCION
ORDER BY LG2.DESCRIPCION


--NIVACA_VICIN_DINAE
select TO_CHAR(e.identificacion) IDENTIFICACION, c.descripcion TITULO, n.descripcion NIVEL_ACADEMICO, t.fecha_termino
from usr_rehu.niveles_academicos_empleado t,
usr_rehu.empleados e,
usr_educ.carreras c,
usr_educ.niveles_academicos n
where t.empl_consecutivo=e.consecutivo
and c.id_carrera=t.carr_id_carrera
and c.id_nivel_academico=n.id_nivel_academico
and t.nivel_acad_actual='SI'


--PROGRAMAS_ESCUELAS
SELECT DISTINCT CC.COD_ESCUELA, UD.DESCRIPCION_DEPENDENCIA, P.ID_PROGRAMA,P.DESCRIPCION
FROM USR_EDUC.PROGRAMAS_ACADEMICO PA,
USR_EDUC.PROGRAMAS P,
USR_EDUC.COMPANIAS_CURSO CC,
USR_REHU.UNIDADES_DEPENDENCIA UD
WHERE UD.CONSECUTIVO=CC.COD_ESCUELA
AND PA.ID_PROGRAMACA=CC.PRAC_ID_PROGRAMACA
AND P.ID_PROGRAMA=PA.PRGR_ID_PROGRAMA
ORDER BY UD.DESCRIPCION_DEPENDENCIA, P.DESCRIPCION


--SELECT_DIM_DETA_PROP_CONVO_PN
(SELECT proyecto.id_proyecto, proyecto.codigo_proyecto, proyecto.titulo_propuesto, proyecto.id_linea, proyecto.funcion_proyecto,
      proyecto.fecha_estimada_inicio,proyecto.fecha_estimada_finalizacion,proyecto.valor_total,proyecto.tema,proyecto.presupuesto_solicitado,
      'APROBADO' as estado
      FROM PROYECTO proyecto, PERIODO periodo
      WHERE proyecto.id_periodo = periodo.id_periodo
      and proyecto.codigo_proyecto IS NOT NULL
      AND periodo.id_tipo_periodo = 38
      UNION ALL
      SELECT proyecto.id_proyecto, proyecto.codigo_proyecto, proyecto.titulo_propuesto, proyecto.id_linea, proyecto.funcion_proyecto,
      proyecto.fecha_estimada_inicio,proyecto.fecha_estimada_finalizacion,proyecto.valor_total,proyecto.tema,proyecto.presupuesto_solicitado,
      'NO-APROBADO' as estado
      FROM PROYECTO proyecto, PERIODO periodo
      WHERE proyecto.id_periodo = periodo.id_periodo
      and proyecto.codigo_proyecto IS NULL
      and proyecto.id_estado = 86
      AND periodo.id_tipo_periodo = 38)


--SELECT_FACT_PROP_CONVOCATORIA
(SELECT periodo.nombre_convocatoria, count(*) as total_propuesta,
			(SELECT COUNT(*) FROM PROYECTO p WHERE p.id_periodo = periodo.id_periodo AND p.id_estado = 87) as propuesta_aprobadas,
			(SELECT COUNT(*) FROM PROYECTO p WHERE p.id_periodo = periodo.id_periodo AND p.id_estado = 86) as propuesta_no_aprobadas,
			periodo.id_periodo as id_dim_periodo_pn
			FROM PROYECTO proyecto, PERIODO periodo
			WHERE proyecto.id_periodo = periodo.id_periodo
			AND proyecto.codigo_proyecto IS NULL
			AND periodo.id_tipo_periodo = 38
			GROUP BY periodo.id_periodo, periodo.nombre_convocatoria)



--USUARIO_ROL_UNIDAD
SELECT ROWNUM ID_REG,
U.ID_UNIDAD_POLICIAL,
U.NOMBRE NOMBRE_UNIDAD,
R.ID_ROL,
R.NOMBRE NOMBRE_ROL,
VF.IDENTIFICACION IDENTIFICACION_USUARIO,
VF.GRADO GRADO_USUARIO,
VF.NOMBRE_COMPLETO NOMBRE_COMPLETO_USUARIO,
R.REQUIERE_UNIDAD_POLICIAL,
VF.CARGO CARGO_USUARIO,
VF.CORREO CORREO_USUARIO,
UR.ACTIVO ESTADO_USUARIO_ROL,
U.SIGLA_FISICA SIGLA_FISICA_UNID_POL
FROM ROL R
JOIN USUARIO_ROL UR ON (R.ID_ROL = UR.ID_ROL)
JOIN VISTA_FUNCIONARIO VF ON (VF.IDENTIFICACION = UR.IDENTIFICADOR_USUARIO)
LEFT JOIN USUARIO_UNIDAD_POLICIAL UN ON (VF.IDENTIFICACION = UN.IDENTIFICADOR_USUARIO)
LEFT JOIN UNIDAD_POLICIAL U ON (UN.ID_UNIDAD_POLICIAL = U.ID_UNIDAD_POLICIAL)



--V_INFO_NOTAS_ENSAYO_CRITICO
select id_periodo, (SELECT NVL(SUM(VALOR_CRITERIO_VICIN),0)
                    FROM evaluacion_proyecto
                    WHERE ENSAYO_CRITICO.ID_ENSAYO_CRITICO = evaluacion_proyecto.ID_ENSAYO_CRITICO) NOTA, ID_ENSAYO_CRITICO
FROM ENSAYO_CRITICO



--VISTA_EVENTO_INVESTIGACION
SELECT 
ID_EVENTO_INVESTIGACION,
ID_TIPO_EVENTO,
NOMBRE,
DESCRIPCION,
MODALIDAD_VIRTUAL,
MODALIDAD_PRESENCIAL,
FECHA_INICIO,
FECHA_FIN,
LUGAR,
CIUDAD,
FECHA_REGISTRO,
FECHA_ACTUALIZA,
ID_USUARIO_ROL,
USUARIO,
MAQUINA,
NOMBRE_ARCHIVO,
NOMBRE_ARCHIVO_FISICO,
TO_CHAR(FECHA_INICIO,'YYYY') ANIO_INICIO,
TO_CHAR(FECHA_FIN,'YYYY') ANIO_FIN
FROM EVENTO_INVESTIGACION


--VISTA_FUNCIONARIO
SELECT
vFunTest.IDENTIFICACION ID_VISTA_FUNCIONARIO,
TO_CHAR(vFunTest.IDENTIFICACION) IDENTIFICACION ,
vFunTest.NOMBRES,
vFunTest.APELLIDOS,
vFunTest.NOMBRES||' '||vFunTest.APELLIDOS NOMBRE_COMPLETO,
vFunTest.GRADO,
vFunTest.CARGO ,
vFunTest.COD_CARGO,
vFunTest.DIREC_EMPLEA,
vFunTest.DEPTO_RESIDE,
vFunTest.COD_DEPTO_RESIDE,
vFunTest.CIUDAD_RESIDE,
vFunTest.COD_CIU_RES,
vFunTest.SIGLA_LABORANDO,
vFunTest.CORREO_ELECTRONICO CORREO,
vFunTest.TELEFONO,
vFunTest.CIU_EXP_DOC,
vFunTest.COD_CIU_EXP_DOC,
vFunTest.NUMERO_CELULAR,
vFunTest.DESCRIPCION,
vFunTest.COD_CATEG_EMP,
vFunTest.INGRESO_INSTITU,
vFunTest.ALFABETICO GRADO_ALFABETICO,
(SELECT TO_CHAR(usuUnidPol.ID_UNIDAD_POLICIAL) FROM USUARIO_UNIDAD_POLICIAL usuUnidPol WHERE usuUnidPol.IDENTIFICADOR_USUARIO = TO_CHAR(vFunTest.IDENTIFICACION) AND ROWNUM = 1) COD_UNID_LAB
FROM EMPLE_VICIN_DINAE vFunTest;


--PRC_VERSION_PROYECTO
create or replace
PROCEDURE "PRC_VERSION_PROYECTO" 
(
  P_ID_PROYECTO IN NUMBER,  
  ID_VERSION_PROYECTO IN NUMBER
) AS  

  ID_SEC_INSERT_PROYECTO_VERSION NUMBER;    
  ID_SEC_INSERT_FUENTE_PROYECTO NUMBER;
  
BEGIN
  DBMS_OUTPUT.PUT_LINE('ID_VERSION_PROYECTO ' || ID_VERSION_PROYECTO);  
  
  --ESTA CONSULTA SIEMPRE DEVOLVERA UN REGISTRO
  FOR rec_proyecto IN (SELECT * FROM PROYECTO WHERE ID_PROYECTO = P_ID_PROYECTO)
  LOOP
    DBMS_OUTPUT.PUT_LINE('Encontro pro ' || rec_proyecto.ID_PROYECTO);
    
    ID_SEC_INSERT_PROYECTO_VERSION := SEC_PROYECTO_VERSION.NEXTVAL;
    INSERT INTO PROYECTO_VERSION (
      ID_PROYECTO_VERSION,
      ID_VERSION,
			ID_PROYECTO,
			CODIGO_PROYECTO,
			TITULO_PROPUESTO,
			ID_LINEA,
			ID_PERIODO,
			FUNCION_PROYECTO,
			FECHA_ESTIMADA_INICIO,
			FECHA_ESTIMADA_FINALIZACION,
			VALOR_TOTAL,
			CONVOCATORIA,
			FECHA_REGISTRO,
			TEMA,
			FECHA_APROBACION_COMITE,
			NRO_ACTA_APROBACION_COMITE,
			ID_USUARIO_ROL,
			FECHA_ACTUALIZACION,
			ID_USUARIO_ROL_ACTUALIZA,
			ID_ESTADO,
			INFORME_FINAL,
			DESCRIPCION_INFORME_FINAL,
			FECHA_REGISTRO_INFORME_FINAL,
			ID_PROGRAMA,
			RESUMEN_PROYECTO,
			FECHA_APROBACION_COMITE_2,
			NRO_ACTA_APROB_COMITE,
			ID_UNIDAD_POLICIAL,
			ESTADO_TEMPORAL_FINANCIA,
			VALOR_FINANCIAR,
			ID_PROPUESTA_NECESIDAD,
			ID_PROPUESTA_CONVOCATORIA,
			ID_ESTADO_IMPLEMENTACION,
			PRESUPUESTO_SOLICITADO)
			VALUES (
          ID_SEC_INSERT_PROYECTO_VERSION,
					ID_VERSION_PROYECTO,
          rec_proyecto.ID_PROYECTO,
					rec_proyecto.CODIGO_PROYECTO,
					rec_proyecto.TITULO_PROPUESTO,
					rec_proyecto.ID_LINEA,
					rec_proyecto.ID_PERIODO,
					rec_proyecto.FUNCION_PROYECTO,
					rec_proyecto.FECHA_ESTIMADA_INICIO,
					rec_proyecto.FECHA_ESTIMADA_FINALIZACION,
					rec_proyecto.VALOR_TOTAL,
					rec_proyecto.CONVOCATORIA,
					rec_proyecto.FECHA_REGISTRO,
					rec_proyecto.TEMA,
					rec_proyecto.FECHA_APROBACION_COMITE,
					rec_proyecto.NRO_ACTA_APROBACION_COMITE,
					rec_proyecto.ID_USUARIO_ROL,
					rec_proyecto.FECHA_ACTUALIZACION,
					rec_proyecto.ID_USUARIO_ROL_ACTUALIZA,
					rec_proyecto.ID_ESTADO,
					rec_proyecto.INFORME_FINAL,
					rec_proyecto.DESCRIPCION_INFORME_FINAL,
					rec_proyecto.FECHA_REGISTRO_INFORME_FINAL,
					rec_proyecto.ID_PROGRAMA,
					rec_proyecto.RESUMEN_PROYECTO,
					rec_proyecto.FECHA_APROBACION_COMITE_2,
					rec_proyecto.NRO_ACTA_APROB_COMITE,
					rec_proyecto.ID_UNIDAD_POLICIAL,
					rec_proyecto.ESTADO_TEMPORAL_FINANCIA,
					rec_proyecto.VALOR_FINANCIAR,
					rec_proyecto.ID_PROPUESTA_NECESIDAD,
					rec_proyecto.ID_PROPUESTA_CONVOCATORIA,
					rec_proyecto.ID_ESTADO_IMPLEMENTACION,
					rec_proyecto.PRESUPUESTO_SOLICITADO
			);
      
      --SEMILLERO DE DICHO PROYECTO
        --COPIA DE SEMILLERO PROYECTO
        FOR rec_semillero_proyecto IN (SELECT * FROM SEMILLERO_PROYECTO WHERE ID_PROYECTO = P_ID_PROYECTO)
        LOOP
        
          DBMS_OUTPUT.PUT_LINE('  Encontro semillero proyecto ' || rec_semillero_proyecto.ID_SEMILLERO_PROYECTO);
          
       END LOOP;
       
      --INSTITUCIONES DE DICHO PROYECTO
        --COPIA DE INSTITUCIONES PROYECTO
        FOR rec_instituciones_proyecto IN (SELECT * FROM INSTITUCIONES_PROYECTO WHERE ID_PROYECTO = P_ID_PROYECTO)
        LOOP
        
          DBMS_OUTPUT.PUT_LINE('  Encontro instituciones proyecto ' || rec_instituciones_proyecto.ID_INSTITUCION_PROYECTO);
          INSERT INTO INSTITUCIONES_PROYECTO_VERSION 
                  (
                    ID_INSTITUCION_PROYECTO,
                    FECHA_REGISTRO,
                    ID_USUARIO_ROL,
                    ID_INSTITUCION,
                    APORTE_INVESTIGACION,
                    VALOR_OTRO_TIPO,
                    ID_PROYECTO
                  )
                  VALUES(
                    SEC_INSTITUCION_PROYECTO_VERS.NEXTVAL,
                    rec_instituciones_proyecto.FECHA_REGISTRO,
                    rec_instituciones_proyecto.ID_USUARIO_ROL,
                    rec_instituciones_proyecto.ID_INSTITUCION,
                    rec_instituciones_proyecto.APORTE_INVESTIGACION,
                    rec_instituciones_proyecto.VALOR_OTRO_TIPO,
                    ID_SEC_INSERT_PROYECTO_VERSION);
          
       END LOOP;
       
      --GRUPO INVESTIGACION DE DICHO PROYECTO
        --COPIA DE GRUPOS INVESTIGACION PROYECTO
        FOR rec_grupo_inv_proyecto IN (SELECT * FROM GRUPO_INVEST_PROYECTO WHERE ID_PROYECTO = P_ID_PROYECTO)
        LOOP
        
          DBMS_OUTPUT.PUT_LINE('  Encontro grupo investigacion proyecto ' || rec_grupo_inv_proyecto.ID_GRUPO_INVEST_PROYECTO);
          INSERT INTO GRUPO_INVEST_PROYECTO_VERSION 
            (
            ID_GRUPO_INVEST_PROYECTO,
            FECHA_VINCULACION,
            ID_GRUPO_INVESTIGACION,
            ID_PROYECTO,
            FECHA_REGISTRO,
            ID_USUARIO_ROL,
            USUARIO,
            MAQUINA
              )
              VALUES(
              SEC_GRUPO_INVEST_PROYECTO_VERS.NEXTVAL,									
            rec_grupo_inv_proyecto.FECHA_VINCULACION,
            rec_grupo_inv_proyecto.ID_GRUPO_INVESTIGACION,
            ID_SEC_INSERT_PROYECTO_VERSION,
            rec_grupo_inv_proyecto.FECHA_REGISTRO,
            rec_grupo_inv_proyecto.ID_USUARIO_ROL,
            rec_grupo_inv_proyecto.USUARIO,
            rec_grupo_inv_proyecto.MAQUINA);
          
        END LOOP;  
      
       --TEMAS PROYECTO DE DICHO PROYECTO
        --COPIA DE TEMAS PROYECTO
        FOR rec_tema_proyecto IN (SELECT * FROM TEMA_PROYECTO WHERE ID_PROYECTO = P_ID_PROYECTO)
        LOOP
        
          DBMS_OUTPUT.PUT_LINE('  Encontro tema proyecto ' || rec_tema_proyecto.ID_TEMA_PROYECTO);
          INSERT INTO TEMA_PROYECTO_VERSION 
                (
                ID_TEMA_PROYECTO,
                TEXTO,
                ARCHIVO_SOPORTE,
                ID_PROYECTO,
                ID_TEMA,
                FECHA_REGISTRO,
                USUARIO,
                NOMBRE_ARCHIVO_FISICO,
                TIPO_CONTENIDO_ARCHIVO,
                TIPO_TAB_INFORMACION_IMPL
                )
                VALUES(
                SEC_TEMA_PROYECTO_VERSION.NEXTVAL,				
                rec_tema_proyecto.TEXTO,
                rec_tema_proyecto.ARCHIVO_SOPORTE,
                ID_SEC_INSERT_PROYECTO_VERSION,
                rec_tema_proyecto.ID_TEMA,
                rec_tema_proyecto.FECHA_REGISTRO,
                rec_tema_proyecto.USUARIO,
                rec_tema_proyecto.NOMBRE_ARCHIVO_FISICO,
                rec_tema_proyecto.TIPO_CONTENIDO_ARCHIVO,
                rec_tema_proyecto.TIPO_TAB_INFORMACION_IMPL);
          
        END LOOP;
      
        --INDICADORES DE DICHO PROYECTO
        --COPIA DE INDICADORES PROYECTO
        FOR rec_indicador_proyecto IN (SELECT * FROM INDICADORES_PROYECTO WHERE ID_PROYECTO = P_ID_PROYECTO)
        LOOP
          DBMS_OUTPUT.PUT_LINE('  Encontro indicador proyecto ' || rec_indicador_proyecto.ID_INDICADOR_PROYECTO);
          
          INSERT INTO INDICADORES_PROYECTO_VERSION 
                  (
                    ID_INDICADOR_PROYECTO,
					NOMBRE_INDICADOR,
					NOMBRE_NUMERADOR,
					NOMBRE_DENOMINADOR,
					FECHA_REGISTRO,
					ID_USUARIO_ROL,
					ID_PROYECTO,
					INDICADOR_BASE,
					CASO_USO,
					VALOR_NUMERADOR,
					VALOR_DENOMINADOR
          )
          VALUES(
          SEC_INDICADORES_PROYECTO_VERSI.NEXTVAL,
					rec_indicador_proyecto.NOMBRE_INDICADOR,
					rec_indicador_proyecto.NOMBRE_NUMERADOR,
					rec_indicador_proyecto.NOMBRE_DENOMINADOR,
					rec_indicador_proyecto.FECHA_REGISTRO,
					rec_indicador_proyecto.ID_USUARIO_ROL,
					ID_SEC_INSERT_PROYECTO_VERSION,
					rec_indicador_proyecto.INDICADOR_BASE,
					rec_indicador_proyecto.CASO_USO,
					rec_indicador_proyecto.VALOR_NUMERADOR,
					rec_indicador_proyecto.VALOR_DENOMINADOR);
          
        END LOOP;
        
        --INVESTIGADORES DE DICHO PROYECTO
        --COPIA DE INVESTIGADOR PROYECTO
        FOR rec_investiga_proyecto IN (SELECT * FROM INVESTIGADORES_PROYECTO WHERE ID_PROYECTO = P_ID_PROYECTO)
        LOOP
          DBMS_OUTPUT.PUT_LINE('  Encontro investigador ' || rec_investiga_proyecto.ID_INVESTIGADOR_PROYECTO);
          INSERT INTO INVESTIGADORES_PROY_VERSION(
          ID_INVESTIGADOR_PROYECTO,
          ID_PROYECTO,
          VALOR_ESPECIE,
          ID_TIPO_VINCULACION,
          IDENTIFICACION,
          FUNCION_PROYECTO,
          HORAS_DEDICACION,
          INVESTIGADO_3ANIOS,
          INVESTIGADO_ANUAL,
          VALOR_HORA,
          ACTIVO,
          VALOR_EFECTIVO,
          ID_FUENTE_PROYECTO,
          ID_USUARIO_ROL,
          FECHA_REGISTRO,
          TELEFONO,
          INSTITUCION_EXTERNA,
          NOMBRE_COMPLETO,
          GRADO,
          CORREO,
          CARGO,
          CALCULO_HORA_TOTAL,
          ID_UNIDAD_POLICIAL,
          ID_TIPO_INVESTIGADOR,
          ORIGEN_SIAF_O_INVESTI,
          ID_PLAN_TRABAJO,
          HORAS_TOTALES_IMPL,
          HORAS_DEDICADA_AVANCE_IMPL,
          HORAS_DEDICADA_AVANC_FIN_IMPL) 
        VALUES(
          SEC_INVESTIGADORES_PROY_VERSIO.NEXTVAL,
          ID_SEC_INSERT_PROYECTO_VERSION,
          rec_investiga_proyecto.VALOR_ESPECIE,
          rec_investiga_proyecto.ID_TIPO_VINCULACION,
          rec_investiga_proyecto.IDENTIFICACION,
          rec_investiga_proyecto.FUNCION_PROYECTO,
          rec_investiga_proyecto.HORAS_DEDICACION,
          rec_investiga_proyecto.INVESTIGADO_3ANIOS,
          rec_investiga_proyecto.INVESTIGADO_ANUAL,
          rec_investiga_proyecto.VALOR_HORA,
          rec_investiga_proyecto.ACTIVO,
          rec_investiga_proyecto.VALOR_EFECTIVO,
          rec_investiga_proyecto.ID_FUENTE_PROYECTO,
          rec_investiga_proyecto.ID_USUARIO_ROL,
          rec_investiga_proyecto.FECHA_REGISTRO,
          rec_investiga_proyecto.TELEFONO,
          rec_investiga_proyecto.INSTITUCION_EXTERNA,
          rec_investiga_proyecto.NOMBRE_COMPLETO,
          rec_investiga_proyecto.GRADO,
          rec_investiga_proyecto.CORREO,
          rec_investiga_proyecto.CARGO,
          rec_investiga_proyecto.CALCULO_HORA_TOTAL,
          rec_investiga_proyecto.ID_UNIDAD_POLICIAL,
          rec_investiga_proyecto.ID_TIPO_INVESTIGADOR,
          rec_investiga_proyecto.ORIGEN_SIAF_O_INVESTI,
          rec_investiga_proyecto.ID_PLAN_TRABAJO,
          rec_investiga_proyecto.HORAS_TOTALES_IMPL,
          rec_investiga_proyecto.HORAS_DEDICADA_AVANCE_IMPL,
          rec_investiga_proyecto.HORAS_DEDICADA_AVANC_FIN_IMPL
          );
        END LOOP;
        
        --FUENTES DE DICHO PROYECTO
        --COPIA DE FUENTE PROYECTO
        FOR rec_fuente_proyecto IN (SELECT * FROM FUENTE_PROYECTO WHERE ID_PROYECTO = P_ID_PROYECTO)
        LOOP
          DBMS_OUTPUT.PUT_LINE('  Encontro fuente proyecto ' || rec_fuente_proyecto.ID_FUENTE_PROYECTO);
          
            ID_SEC_INSERT_FUENTE_PROYECTO := SEC_FUENTE_PROYECTO_VERSION.NEXTVAL;
            INSERT INTO FUENTE_PROYECTO_VERSION 
            (
              ID_FUENTE_PROYECTO,
              ID_TIPO_FUENTE,
              ID_PROYECTO,
              ID_USUARIO_ROL,
              FECHA_REGISTRO,
              NOMBRE_FUENTE,
              FUENTE_BASE,
              USUARIO_REGISTRA,
              MAQUINA
              )
              VALUES(
              ID_SEC_INSERT_FUENTE_PROYECTO,
              rec_fuente_proyecto.ID_TIPO_FUENTE,
              ID_SEC_INSERT_PROYECTO_VERSION,
              rec_fuente_proyecto.ID_USUARIO_ROL,
              rec_fuente_proyecto.FECHA_REGISTRO,
              rec_fuente_proyecto.NOMBRE_FUENTE,
              rec_fuente_proyecto.FUENTE_BASE,
              rec_fuente_proyecto.USUARIO_REGISTRA,
              rec_fuente_proyecto.MAQUINA);
              
              --POR CADA FUENTE - COPIA EQUIPOS INVESTIGACION
              --COPIA DE SEMILLERO PROYECTO
              FOR rec_equipo_inv_proyecto IN (SELECT * FROM EQUIPOS_INVESTIGACION WHERE ID_FUENTE_PROYECTO = rec_fuente_proyecto.ID_FUENTE_PROYECTO)
              LOOP
              
                DBMS_OUTPUT.PUT_LINE('    Encontro equipo investigacion ' || rec_equipo_inv_proyecto.ID_EQUIPO_INVESTIGACION);
                INSERT INTO EQUIPOS_INVESTIGACION_VERSION 
                  (
                    ID_EQUIPO_INVESTIGACION,
                    VALOR,
                    ESPECIFICACIONES,
                    ID_FUENTE_PROYECTO,
                    ID_ORIGEN,
                    NOMBRE_EQUIPO
                    )
                    VALUES(
                    SEC_EQUIPOS_INVESTIGACION_VERS.NEXTVAL,																			
                    rec_equipo_inv_proyecto.VALOR,
                    rec_equipo_inv_proyecto.ESPECIFICACIONES,
                    ID_SEC_INSERT_FUENTE_PROYECTO,
                    rec_equipo_inv_proyecto.ID_ORIGEN,
                    rec_equipo_inv_proyecto.NOMBRE_EQUIPO);
              END LOOP;
              
              --POR CADA FUENTE PROYECTO - COPIA DE EVENTO PROYECTO
              FOR rec_evento_proyecto IN (SELECT * FROM EVENTO_PROYECTO WHERE ID_PROYECTO = P_ID_PROYECTO AND ID_FUENTE_PROYECTO = rec_fuente_proyecto.ID_FUENTE_PROYECTO)
              LOOP
                  
                  DBMS_OUTPUT.PUT_LINE('    Encontro evento proyecto ' || rec_evento_proyecto.ID_EVENTO_PROYECTO);
                  INSERT INTO EVENTO_PROYECTO_VERSION 
                  (
                    ID_EVENTO_PROYECTO,
                    ID_FUENTE_PROYECTO,
                    COSTO,
                    ID_PROYECTO,
                    TITULO_EVENTO,
                    OBJETIVO_EVENTO,
                    FECHA_REGISTRO,
                    ID_USUARIO_ROL,
                    CODIGO_CIUDAD,
                    NOMBRE_CIUDAD
                    )
                    VALUES(
                    SEC_EVENTO_PROYECTO_VERSION.NEXTVAL,		
                    ID_SEC_INSERT_FUENTE_PROYECTO,
                    rec_evento_proyecto.COSTO,
                    ID_SEC_INSERT_PROYECTO_VERSION,
                    rec_evento_proyecto.TITULO_EVENTO,
                    rec_evento_proyecto.OBJETIVO_EVENTO,
                    rec_evento_proyecto.FECHA_REGISTRO,
                    rec_evento_proyecto.ID_USUARIO_ROL,
                    rec_evento_proyecto.CODIGO_CIUDAD,
                    rec_evento_proyecto.NOMBRE_CIUDAD);
              END LOOP;
              
              --POR CADA FUENTE PROYECTO - COPIA DE EVENTO PROYECTO
              FOR rec_otros_gasto_proyecto IN (SELECT * FROM OTROS_GASTOS_PROYECTO WHERE ID_FUENTE_PROYECTO = rec_fuente_proyecto.ID_FUENTE_PROYECTO)          
              LOOP
                  
                  DBMS_OUTPUT.PUT_LINE('    Encontro otros gastos proyecto ' || rec_otros_gasto_proyecto.ID_OTROS_GASTOS_PROYECTO);                  
                  INSERT INTO OTROS_GASTOS_PROYECTO_VERSION 
                  (
                    ID_OTROS_GASTOS_PROYECTO,
                    VALOR,
                    ID_FUENTE_PROYECTO_VERSION,
                    ID_TIPO_RUBRO,
                    ID_TIPO_ESPECIE_EFECTIVO,
                    FECHA_REGISTRO,
                    ID_USUARIO_ROL
                    )
                    VALUES(
                    SEC_OTROS_GASTOS_PROYECTO_VERS.NEXTVAL,		                    
                    rec_otros_gasto_proyecto.VALOR,
                    ID_SEC_INSERT_FUENTE_PROYECTO,
                    rec_otros_gasto_proyecto.ID_TIPO_RUBRO,
                    rec_otros_gasto_proyecto.ID_TIPO_ESPECIE_EFECTIVO,
                    rec_otros_gasto_proyecto.FECHA_REGISTRO,
                    rec_otros_gasto_proyecto.ID_USUARIO_ROL);
              END LOOP;    
              
        END LOOP;          
    END LOOP;--FIN LOOP PROYECTOS
    
    --HACEMOS EL LLAMADO PAQUETE DE PRESUPUESTO PARA EL PROYECTO RECIBIDO COMO PARAMETRO
      PKG_CALCULO_PRESUPUESTO.PRC_CREAR_ACTUALIZA_PRES( P_ID_PROYECTO );
      UPDATE RESUMEN_PRESUPUESTO_PROYECTO set ESTADO = CONCAT( 'P_VERSION_', TO_CHAR(ID_SEC_INSERT_PROYECTO_VERSION) ) WHERE ID_PROYECTO = P_ID_PROYECTO AND ESTADO = 'TEMPORAL';  
              
END PRC_VERSION_PROYECTO;


--USUARIOS_ADMIN_UNIDAD
create or replace
PROCEDURE "USUARIOS_ADMIN_UNIDAD" (P_ID_UNIDAD IN NUMBER, P_ID_OTRO_JEFE IN VARCHAR2, P_ID_JEFE_UNIDAD IN VARCHAR2) AS

ID_TIPO_UNIDAD NUMBER;

BEGIN



  SELECT U.ID_TIPO_UNIDAD
  INTO ID_TIPO_UNIDAD
  FROM UNIDAD_POLICIAL U
  WHERE ID_UNIDAD_POLICIAL = P_ID_UNIDAD;

  IF (ID_TIPO_UNIDAD IS NOT NULL) THEN

    IF (ID_TIPO_UNIDAD = 1) THEN

      DELETE USUARIO_ROL WHERE IDENTIFICADOR_USUARIO IN (P_ID_OTRO_JEFE, P_ID_JEFE_UNIDAD) ;

      INSERT INTO USUARIO_ROL (ID_USUARIO_ROL, IDENTIFICADOR_USUARIO, ID_ROL, FECHA_INICIO, ACTIVO) VALUES (SEC_USUARIO_ROL.NEXTVAL, P_ID_OTRO_JEFE, 25, SYSDATE, 'S');

      INSERT INTO USUARIO_ROL (ID_USUARIO_ROL, IDENTIFICADOR_USUARIO, ID_ROL, FECHA_INICIO, ACTIVO) VALUES (SEC_USUARIO_ROL.NEXTVAL, P_ID_OTRO_JEFE, 4, SYSDATE, 'S');
      INSERT INTO USUARIO_ROL (ID_USUARIO_ROL, IDENTIFICADOR_USUARIO, ID_ROL, FECHA_INICIO, ACTIVO) VALUES (SEC_USUARIO_ROL.NEXTVAL, P_ID_OTRO_JEFE, 5, SYSDATE, 'S');
      INSERT INTO USUARIO_ROL (ID_USUARIO_ROL, IDENTIFICADOR_USUARIO, ID_ROL, FECHA_INICIO, ACTIVO) VALUES (SEC_USUARIO_ROL.NEXTVAL, P_ID_OTRO_JEFE, 6, SYSDATE, 'S');
      INSERT INTO USUARIO_ROL (ID_USUARIO_ROL, IDENTIFICADOR_USUARIO, ID_ROL, FECHA_INICIO, ACTIVO) VALUES (SEC_USUARIO_ROL.NEXTVAL, P_ID_OTRO_JEFE, 8, SYSDATE, 'S');
      INSERT INTO USUARIO_ROL (ID_USUARIO_ROL, IDENTIFICADOR_USUARIO, ID_ROL, FECHA_INICIO, ACTIVO) VALUES (SEC_USUARIO_ROL.NEXTVAL, P_ID_OTRO_JEFE, 17, SYSDATE, 'S');
      INSERT INTO USUARIO_ROL (ID_USUARIO_ROL, IDENTIFICADOR_USUARIO, ID_ROL, FECHA_INICIO, ACTIVO) VALUES (SEC_USUARIO_ROL.NEXTVAL, P_ID_OTRO_JEFE, 26, SYSDATE, 'S');
      INSERT INTO USUARIO_ROL (ID_USUARIO_ROL, IDENTIFICADOR_USUARIO, ID_ROL, FECHA_INICIO, ACTIVO) VALUES (SEC_USUARIO_ROL.NEXTVAL, P_ID_OTRO_JEFE, 27, SYSDATE, 'S');
      INSERT INTO USUARIO_ROL (ID_USUARIO_ROL, IDENTIFICADOR_USUARIO, ID_ROL, FECHA_INICIO, ACTIVO) VALUES (SEC_USUARIO_ROL.NEXTVAL, P_ID_OTRO_JEFE, 28, SYSDATE, 'S');

      INSERT INTO USUARIO_ROL (ID_USUARIO_ROL, IDENTIFICADOR_USUARIO, ID_ROL, FECHA_INICIO, ACTIVO) VALUES (SEC_USUARIO_ROL.NEXTVAL, P_ID_JEFE_UNIDAD, 24, SYSDATE, 'S');

    END IF;

    IF (ID_TIPO_UNIDAD = 2) THEN

      DELETE USUARIO_ROL WHERE IDENTIFICADOR_USUARIO IN (P_ID_OTRO_JEFE, P_ID_JEFE_UNIDAD) ;

      INSERT INTO USUARIO_ROL (ID_USUARIO_ROL, IDENTIFICADOR_USUARIO, ID_ROL, FECHA_INICIO, ACTIVO) VALUES (SEC_USUARIO_ROL.NEXTVAL, P_ID_OTRO_JEFE, 1, SYSDATE, 'S');

      INSERT INTO USUARIO_ROL (ID_USUARIO_ROL, IDENTIFICADOR_USUARIO, ID_ROL, FECHA_INICIO, ACTIVO) VALUES (SEC_USUARIO_ROL.NEXTVAL, P_ID_OTRO_JEFE, 4, SYSDATE, 'S');
      INSERT INTO USUARIO_ROL (ID_USUARIO_ROL, IDENTIFICADOR_USUARIO, ID_ROL, FECHA_INICIO, ACTIVO) VALUES (SEC_USUARIO_ROL.NEXTVAL, P_ID_OTRO_JEFE, 5, SYSDATE, 'S');
      INSERT INTO USUARIO_ROL (ID_USUARIO_ROL, IDENTIFICADOR_USUARIO, ID_ROL, FECHA_INICIO, ACTIVO) VALUES (SEC_USUARIO_ROL.NEXTVAL, P_ID_OTRO_JEFE, 6, SYSDATE, 'S');
      INSERT INTO USUARIO_ROL (ID_USUARIO_ROL, IDENTIFICADOR_USUARIO, ID_ROL, FECHA_INICIO, ACTIVO) VALUES (SEC_USUARIO_ROL.NEXTVAL, P_ID_OTRO_JEFE, 26, SYSDATE, 'S');
      INSERT INTO USUARIO_ROL (ID_USUARIO_ROL, IDENTIFICADOR_USUARIO, ID_ROL, FECHA_INICIO, ACTIVO) VALUES (SEC_USUARIO_ROL.NEXTVAL, P_ID_OTRO_JEFE, 27, SYSDATE, 'S');

      INSERT INTO USUARIO_ROL (ID_USUARIO_ROL, IDENTIFICADOR_USUARIO, ID_ROL, FECHA_INICIO, ACTIVO) VALUES (SEC_USUARIO_ROL.NEXTVAL, P_ID_JEFE_UNIDAD, 24, SYSDATE, 'S');

    END IF;

  END IF;

  COMMIT;

END USUARIOS_ADMIN_UNIDAD;



--------------------------------------------------------------
create or replace
PACKAGE "PKG_CALCULO_PRESUPUESTO" AS

  /* TODO enter package declarations (types, exceptions, methods etc) here */

CURSOR c_presupuesto_personal (p_id_proyecto NUMBER) is
 SELECT NVL(SUM(VALOR_EFECTIVO),0) VALOR_EFECTIVO,
    NVL(SUM(VALOR_ESPECIE),0) VALOR_ESPECIE,
    FUENTE_PROYECTO.NOMBRE_FUENTE,
    FUENTE_PROYECTO.ID_FUENTE_PROYECTO,
    FUENTE_PROYECTO.FUENTE_BASE,
    DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y') AS ES_FUENTE_INTERNA
    FROM INVESTIGADORES_PROYECTO,FUENTE_PROYECTO
    WHERE FUENTE_PROYECTO.ID_PROYECTO = P_ID_PROYECTO
    AND INVESTIGADORES_PROYECTO.ID_PROYECTO = FUENTE_PROYECTO.ID_PROYECTO
    AND INVESTIGADORES_PROYECTO.ID_FUENTE_PROYECTO = FUENTE_PROYECTO.ID_FUENTE_PROYECTO
    GROUP BY FUENTE_PROYECTO.NOMBRE_FUENTE,FUENTE_PROYECTO.ID_FUENTE_PROYECTO,FUENTE_PROYECTO.FUENTE_BASE, DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y')
    ORDER BY  FUENTE_PROYECTO.ID_FUENTE_PROYECTO;

CURSOR c_presupuesto_equipos (p_id_proyecto NUMBER) is
 SELECT NVL(SUM(VALOR),0) VALOR_EF,
    NVL(SUM(DECODE(ID_ORIGEN,120,VALOR,0)),0) VALOR_ESPECIE,
    NVL(SUM(DECODE(ID_ORIGEN,121,VALOR,122,VALOR,0)),0) VALOR_EFECTIVO,
    FUENTE_PROYECTO.NOMBRE_FUENTE,
    FUENTE_PROYECTO.ID_FUENTE_PROYECTO,
    FUENTE_PROYECTO.FUENTE_BASE,
    DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y') AS ES_FUENTE_INTERNA
    FROM
    EQUIPOS_INVESTIGACION,
    FUENTE_PROYECTO
    WHERE
    FUENTE_PROYECTO.ID_PROYECTO = P_ID_PROYECTO
    AND EQUIPOS_INVESTIGACION.ID_FUENTE_PROYECTO = FUENTE_PROYECTO.ID_FUENTE_PROYECTO
    GROUP BY FUENTE_PROYECTO.NOMBRE_FUENTE,FUENTE_PROYECTO.ID_FUENTE_PROYECTO,FUENTE_PROYECTO.FUENTE_BASE, DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y')
    ORDER BY  FUENTE_PROYECTO.ID_FUENTE_PROYECTO;

    CURSOR c_presupuesto_eventos (p_id_proyecto NUMBER) is
 SELECT NVL(SUM(COSTO),0) VALOR_EFECTIVO,
    FUENTE_PROYECTO.NOMBRE_FUENTE,
    FUENTE_PROYECTO.ID_FUENTE_PROYECTO,
    FUENTE_PROYECTO.FUENTE_BASE,
    DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y') AS ES_FUENTE_INTERNA
    FROM EVENTO_PROYECTO,FUENTE_PROYECTO
    WHERE FUENTE_PROYECTO.ID_PROYECTO = P_ID_PROYECTO
    AND FUENTE_PROYECTO.ID_FUENTE_PROYECTO = EVENTO_PROYECTO.ID_FUENTE_PROYECTO
    GROUP BY FUENTE_PROYECTO.NOMBRE_FUENTE,FUENTE_PROYECTO.ID_FUENTE_PROYECTO,FUENTE_PROYECTO.FUENTE_BASE, DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y')
    ORDER BY  FUENTE_PROYECTO.ID_FUENTE_PROYECTO;


    CURSOR c_presupuesto_viajes (p_id_proyecto NUMBER) is
 SELECT NVL(SUM(COSTOS_PASAJES),0)+ NVL(SUM(COSTOS_VIATICOS),0)  VALOR_EFECTIVO,
    FUENTE_PROYECTO.NOMBRE_FUENTE,
    FUENTE_PROYECTO.ID_FUENTE_PROYECTO,
    FUENTE_PROYECTO.FUENTE_BASE,
    DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y') AS ES_FUENTE_INTERNA
    FROM VIAJES_PROYECTO,FUENTE_PROYECTO
    WHERE FUENTE_PROYECTO.ID_PROYECTO = P_ID_PROYECTO
    AND FUENTE_PROYECTO.ID_FUENTE_PROYECTO = VIAJES_PROYECTO.ID_FUENTE_PROYECTO
    GROUP BY FUENTE_PROYECTO.NOMBRE_FUENTE,FUENTE_PROYECTO.ID_FUENTE_PROYECTO,FUENTE_PROYECTO.FUENTE_BASE, DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y')
    ORDER BY  FUENTE_PROYECTO.ID_FUENTE_PROYECTO;

        CURSOR c_otros_gastos (p_id_proyecto NUMBER) is
 SELECT NVL(SUM(DECODE(ESPECIE_EFECTIVO.codigo,'Especie',otros_gastos_proyecto.VALOR,0)),0) VALOR_ESPECIE,
        NVL(SUM(DECODE(ESPECIE_EFECTIVO.codigo,'Efectivo',otros_gastos_proyecto.VALOR,0)),0) VALOR_EFECTIVO,
    FUENTE_PROYECTO.NOMBRE_FUENTE,
    FUENTE_PROYECTO.ID_FUENTE_PROYECTO,
    FUENTE_PROYECTO.FUENTE_BASE,
    DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y') AS ES_FUENTE_INTERNA,
    TIPO_GASTO.codigo
    FROM otros_gastos_proyecto,
        FUENTE_PROYECTO,
        CONSTANTES TIPO_GASTO,
        CONSTANTES ESPECIE_EFECTIVO
    WHERE FUENTE_PROYECTO.ID_PROYECTO = P_ID_PROYECTO
    AND FUENTE_PROYECTO.ID_FUENTE_PROYECTO = otros_gastos_proyecto.ID_FUENTE_PROYECTO
   AND OTROS_GASTOS_PROYECTO.ID_TIPO_RUBRO = TIPO_GASTO.ID_CONSTANTES
    AND ESPECIE_EFECTIVO.ID_CONSTANTES = OTROS_GASTOS_PROYECTO.ID_TIPO_ESPECIE_EFECTIVO
    AND ESPECIE_EFECTIVO.TIPO = 'OTROS_GASTOS_TIPO'
    AND TIPO_GASTO.TIPO = 'OTROS_GASTOS_RUBROS'
    GROUP BY FUENTE_PROYECTO.NOMBRE_FUENTE,FUENTE_PROYECTO.ID_FUENTE_PROYECTO,FUENTE_PROYECTO.FUENTE_BASE,DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y'), TIPO_GASTO.codigo
    ORDER BY  FUENTE_PROYECTO.ID_FUENTE_PROYECTO;

    CURSOR c_tipo_otros_gastos (p_id_Proyecto NUMBER)
    IS
       SELECT distinct TIPO_GASTO.codigo, TIPO_GASTO.ID_CONSTANTES ID_TIPO_GASTO
    FROM otros_gastos_proyecto,
        FUENTE_PROYECTO,
        CONSTANTES TIPO_GASTO,
        CONSTANTES ESPECIE_EFECTIVO
    WHERE FUENTE_PROYECTO.ID_PROYECTO = P_ID_PROYECTO
    AND FUENTE_PROYECTO.ID_FUENTE_PROYECTO = otros_gastos_proyecto.ID_FUENTE_PROYECTO
   AND OTROS_GASTOS_PROYECTO.ID_TIPO_RUBRO = TIPO_GASTO.ID_CONSTANTES
    AND ESPECIE_EFECTIVO.ID_CONSTANTES = OTROS_GASTOS_PROYECTO.ID_TIPO_ESPECIE_EFECTIVO
    AND ESPECIE_EFECTIVO.TIPO = 'OTROS_GASTOS_TIPO'
    AND TIPO_GASTO.TIPO = 'OTROS_GASTOS_RUBROS';


    CURSOR c_otras_fuentes_proyecto (p_id_proyecto IN NUMBER)IS
    SELECT id_fuente_proyecto, nombre_fuente
    FROM fuente_proyecto
    WHERE id_proyecto = p_id_proyecto
    AND fuente_base = 'N'
    ORDER BY id_fuente_proyecto;

    CURSOR c_presupuesto_imp_personal (p_id_proyecto NUMBER) is
 SELECT NVL(SUM(VALOR_EFECTIVO),0) VALOR_EFECTIVO,
    NVL(SUM(VALOR_EFECTIVO),0) VALOR_ESPECIE,
    FUENTE_PROYECTO.NOMBRE_FUENTE,
    FUENTE_PROYECTO.ID_FUENTE_PROYECTO,
    FUENTE_PROYECTO.FUENTE_BASE,
    DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y') AS ES_FUENTE_INTERNA
    FROM INVESTIGADORES_PROYECTO,FUENTE_PROYECTO
    WHERE FUENTE_PROYECTO.ID_PROYECTO = P_ID_PROYECTO
    AND INVESTIGADORES_PROYECTO.ID_PROYECTO = FUENTE_PROYECTO.ID_PROYECTO
    GROUP BY FUENTE_PROYECTO.NOMBRE_FUENTE,FUENTE_PROYECTO.ID_FUENTE_PROYECTO,FUENTE_PROYECTO.FUENTE_BASE, DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y')
    ORDER BY  FUENTE_PROYECTO.ID_FUENTE_PROYECTO;

CURSOR c_presupuesto_imp_equipos (p_id_proyecto NUMBER) is
 SELECT NVL(SUM(VALOR),0) VALOR_EF,
    NVL(SUM(DECODE(ID_ORIGEN,120,VALOR,0)),0) VALOR_ESPECIE,
    NVL(SUM(DECODE(ID_ORIGEN,121,VALOR,122,VALOR,0)),0) VALOR_EFECTIVO,
    FUENTE_PROYECTO.NOMBRE_FUENTE,
    FUENTE_PROYECTO.ID_FUENTE_PROYECTO,
    FUENTE_PROYECTO.FUENTE_BASE,
    DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y') AS ES_FUENTE_INTERNA
    FROM EQUIPOS_INVESTIGACION,FUENTE_PROYECTO
    WHERE FUENTE_PROYECTO.ID_PROYECTO = P_ID_PROYECTO
    AND EQUIPOS_INVESTIGACION.ID_FUENTE_PROYECTO = FUENTE_PROYECTO.ID_FUENTE_PROYECTO
    GROUP BY FUENTE_PROYECTO.NOMBRE_FUENTE,FUENTE_PROYECTO.ID_FUENTE_PROYECTO,FUENTE_PROYECTO.FUENTE_BASE, DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y')
    ORDER BY  FUENTE_PROYECTO.ID_FUENTE_PROYECTO;

    CURSOR c_presupuesto_imp_eventos (p_id_proyecto NUMBER) is
 SELECT NVL(SUM(COSTO),0) VALOR_EFECTIVO,
    FUENTE_PROYECTO.NOMBRE_FUENTE,
    FUENTE_PROYECTO.ID_FUENTE_PROYECTO,
    FUENTE_PROYECTO.FUENTE_BASE,
    DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y') AS ES_FUENTE_INTERNA
    FROM EVENTO_PROYECTO,FUENTE_PROYECTO
    WHERE FUENTE_PROYECTO.ID_PROYECTO = P_ID_PROYECTO
    AND FUENTE_PROYECTO.ID_FUENTE_PROYECTO = EVENTO_PROYECTO.ID_FUENTE_PROYECTO
    GROUP BY FUENTE_PROYECTO.NOMBRE_FUENTE,FUENTE_PROYECTO.ID_FUENTE_PROYECTO,FUENTE_PROYECTO.FUENTE_BASE, DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y')
    ORDER BY  FUENTE_PROYECTO.ID_FUENTE_PROYECTO;


    CURSOR c_presupuesto_imp_viajes (p_id_proyecto NUMBER) is
 SELECT NVL(SUM(COSTOS_PASAJES),0)+ NVL(SUM(COSTOS_VIATICOS),0)  VALOR_EFECTIVO,
    FUENTE_PROYECTO.NOMBRE_FUENTE,
    FUENTE_PROYECTO.ID_FUENTE_PROYECTO,
    FUENTE_PROYECTO.FUENTE_BASE,
    DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y') AS ES_FUENTE_INTERNA
    FROM VIAJES_PROYECTO,FUENTE_PROYECTO
    WHERE FUENTE_PROYECTO.ID_PROYECTO = P_ID_PROYECTO
    AND FUENTE_PROYECTO.ID_FUENTE_PROYECTO = VIAJES_PROYECTO.ID_FUENTE_PROYECTO
    GROUP BY FUENTE_PROYECTO.NOMBRE_FUENTE,FUENTE_PROYECTO.ID_FUENTE_PROYECTO,FUENTE_PROYECTO.FUENTE_BASE, DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y')
    ORDER BY  FUENTE_PROYECTO.ID_FUENTE_PROYECTO;

        CURSOR c_otros_imp_gastos (p_id_proyecto NUMBER) is
 SELECT NVL(SUM(DECODE(ESPECIE_EFECTIVO.codigo,'Especie',otros_gastos_proyecto.VALOR,0)),0) VALOR_ESPECIE,
        NVL(SUM(DECODE(ESPECIE_EFECTIVO.codigo,'Efectivo',otros_gastos_proyecto.VALOR,0)),0) VALOR_EFECTIVO,
    FUENTE_PROYECTO.NOMBRE_FUENTE,
    FUENTE_PROYECTO.ID_FUENTE_PROYECTO,
    FUENTE_PROYECTO.FUENTE_BASE,
    DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y') AS ES_FUENTE_INTERNA,
    TIPO_GASTO.codigo
    FROM otros_gastos_proyecto,
        FUENTE_PROYECTO,
        CONSTANTES TIPO_GASTO,
        CONSTANTES ESPECIE_EFECTIVO
    WHERE FUENTE_PROYECTO.ID_PROYECTO = P_ID_PROYECTO
    AND FUENTE_PROYECTO.ID_FUENTE_PROYECTO = otros_gastos_proyecto.ID_FUENTE_PROYECTO
   AND OTROS_GASTOS_PROYECTO.ID_TIPO_RUBRO = TIPO_GASTO.ID_CONSTANTES
    AND ESPECIE_EFECTIVO.ID_CONSTANTES = OTROS_GASTOS_PROYECTO.ID_TIPO_ESPECIE_EFECTIVO
    AND ESPECIE_EFECTIVO.TIPO = 'OTROS_GASTOS_TIPO'
    AND TIPO_GASTO.TIPO = 'OTROS_GASTOS_RUBROS'
    GROUP BY FUENTE_PROYECTO.NOMBRE_FUENTE,FUENTE_PROYECTO.ID_FUENTE_PROYECTO,FUENTE_PROYECTO.FUENTE_BASE,DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y'), TIPO_GASTO.codigo
    ORDER BY  FUENTE_PROYECTO.ID_FUENTE_PROYECTO;

    CURSOR c_tipo_otros_imp_gastos (p_id_Proyecto NUMBER)
    IS
       SELECT distinct TIPO_GASTO.codigo, TIPO_GASTO.ID_CONSTANTES ID_TIPO_GASTO
    FROM otros_gastos_proyecto,
        FUENTE_PROYECTO,
        CONSTANTES TIPO_GASTO,
        CONSTANTES ESPECIE_EFECTIVO
    WHERE FUENTE_PROYECTO.ID_PROYECTO = P_ID_PROYECTO
    AND FUENTE_PROYECTO.ID_FUENTE_PROYECTO = otros_gastos_proyecto.ID_FUENTE_PROYECTO
   AND OTROS_GASTOS_PROYECTO.ID_TIPO_RUBRO = TIPO_GASTO.ID_CONSTANTES
    AND ESPECIE_EFECTIVO.ID_CONSTANTES = OTROS_GASTOS_PROYECTO.ID_TIPO_ESPECIE_EFECTIVO
    AND ESPECIE_EFECTIVO.TIPO = 'OTROS_GASTOS_TIPO'
    AND TIPO_GASTO.TIPO = 'OTROS_GASTOS_RUBROS';


   TYPE arreglo_fuentes_type IS VARRAY(4) OF number;
       v_arreglo_fuentes arreglo_fuentes_type := arreglo_fuentes_type();


    PROCEDURE PRC_CREAR_ACTUALIZA_PRES_PERS (p_id_proyecto NUMBER);
    PROCEDURE PRC_CREAR_ACTUALIZA_PRES_EQUIP (p_id_proyecto NUMBER);
    PROCEDURE PRC_CREAR_ACTUALIZA_PRES (p_id_proyecto NUMBER);

    CONST_FUENTE_POLICIA VARCHAR2(100);
    CONST_FUENTE_VICIN VARCHAR2(100);

/*
  =========================================== INICIO CALCULO PRESUPUESTO EJECUTADO ==================================================

 */

  CURSOR C_FUENTES_PROYECTO (P_ID_PROYECTO NUMBER) IS
  SELECT FP.ID_FUENTE_PROYECTO, FP.NOMBRE_FUENTE, FP.FUENTE_BASE
  FROM FUENTE_PROYECTO FP
  WHERE FP.ID_PROYECTO = P_ID_PROYECTO
  ORDER BY FP.ID_FUENTE_PROYECTO ASC;

  REGISTRO_PROYECTO_PERSONAL RESUMEN_PRESUPUESTO_EJECUTADO%ROWTYPE;
  REGISTRO_PROYECTO_EQUIPOS RESUMEN_PRESUPUESTO_EJECUTADO%ROWTYPE;
  REGISTRO_PROYECTO_EVENTOS RESUMEN_PRESUPUESTO_EJECUTADO%ROWTYPE;
  REGISTRO_PROYECTO_VIAJES RESUMEN_PRESUPUESTO_EJECUTADO%ROWTYPE;
  REGISTRO_PROY_OTROS_GASTOS RESUMEN_PRESUPUESTO_EJECUTADO%ROWTYPE;
  REGISTRO_PROY_OTROS_PUBLICA RESUMEN_PRESUPUESTO_EJECUTADO%ROWTYPE;
  REGISTRO_PROY_OTROS_BIBLIO RESUMEN_PRESUPUESTO_EJECUTADO%ROWTYPE;

  PROCEDURE PRC_CALCULAR_PRES_EJECUTA (P_ID_PROYECTO NUMBER, P_ID_INFORME_AVANCE NUMBER);
  PROCEDURE PRC_CREAR_REG_PRES_EJECUTA (P_REGISTRO  RESUMEN_PRESUPUESTO_EJECUTADO%ROWTYPE);
  FUNCTION FNC_TOMA_VALOR_PRESUPUESTADO (P_ID_PROYECTO NUMBER, P_ORDEN NUMBER, P_POS_FUENTE NUMBER) RETURN NUMBER;


/*
  =========================================== FIN CALCULO PRESUPUESTO EJECUTADO =====================================================

 */

/*
  =========================================== INICIO CALCULO PRESUPUESTO ACUMULADO ==================================================

 */

  CURSOR C_FUENTES_PROYECTO_ACUM (P_ID_PROYECTO NUMBER) IS
  SELECT FP.ID_FUENTE_PROYECTO, FP.NOMBRE_FUENTE, FP.FUENTE_BASE
  FROM FUENTE_PROYECTO FP
  WHERE FP.ID_PROYECTO = P_ID_PROYECTO
  ORDER BY FP.ID_FUENTE_PROYECTO ASC;

  REGISTRO_PROY_PERSONAL_ACUM RESUMEN_PRESUPUESTO_EJECUTADO%ROWTYPE;
  REGISTRO_PROY_EQUIPOS_ACUM RESUMEN_PRESUPUESTO_EJECUTADO%ROWTYPE;
  REGISTRO_PROY_EVENTOS_ACUM RESUMEN_PRESUPUESTO_EJECUTADO%ROWTYPE;
  REGISTRO_PROY_VIAJES_ACUM RESUMEN_PRESUPUESTO_EJECUTADO%ROWTYPE;
  REGISTRO_PROY_OTR_GASTOS_ACUM RESUMEN_PRESUPUESTO_EJECUTADO%ROWTYPE;
  REGISTRO_PROY_OTR_PUBLICA_ACUM RESUMEN_PRESUPUESTO_EJECUTADO%ROWTYPE;
  REGISTRO_PROY_OTR_BIBLIO_ACUM RESUMEN_PRESUPUESTO_EJECUTADO%ROWTYPE;

  PROCEDURE PRC_CALCULAR_PRES_ACUM (P_ID_PROYECTO NUMBER);
  PROCEDURE PRC_CREAR_REG_PRES_ACUM (P_REGISTRO  RESUMEN_PRESUPUESTO_EJECUTADO%ROWTYPE);

/*
  =========================================== FIN CALCULO PRESUPUESTO ACUMULADO =====================================================

 */



END PKG_CALCULO_PRESUPUESTO;
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
create or replace
PACKAGE BODY "PKG_CALCULO_PRESUPUESTO" 
AS
PROCEDURE PRC_CREAR_ACTUALIZA_PRES_PERS(
    p_id_proyecto NUMBER)
AS
  rec_registro_proyecto RESUMEN_PRESUPUESTO_PROYECTO%ROWTYPE;
  v_existe_registro   NUMBER;
  primera_otra_fuente BOOLEAN := FALSE;
BEGIN
  SELECT codigo
  INTO CONST_FUENTE_POLICIA
  FROM constantes
  WHERE id_constantes = 98;
  SELECT codigo
  INTO CONST_FUENTE_VICIN
  FROM constantes
  WHERE id_constantes = 99;
  FOR r_presupuesto_personal IN c_presupuesto_personal(p_id_proyecto)
  LOOP
    IF r_presupuesto_personal.nombre_fuente            = CONST_FUENTE_POLICIA THEN
      rec_registro_proyecto.policia_nacional_especie  := r_presupuesto_personal.valor_especie;
      rec_registro_proyecto.policia_nacional_efectivo := r_presupuesto_personal.valor_efectivo;
    ELSIF r_presupuesto_personal.nombre_fuente         = CONST_FUENTE_VICIN THEN
      rec_registro_proyecto.vicin_especie             := r_presupuesto_personal.valor_especie;
      rec_registro_proyecto.vicin_efectivo            := r_presupuesto_personal.valor_efectivo;
    ELSIF r_presupuesto_personal.fuente_base           = 'Y' THEN
      rec_registro_proyecto.unidad_especie            := r_presupuesto_personal.valor_especie;
      rec_registro_proyecto.unidad_efectivo           := r_presupuesto_personal.valor_efectivo;
    ELSIF r_presupuesto_personal.fuente_base           = 'N' THEN
      FOR i IN 1..v_arreglo_fuentes.count
      LOOP
        IF v_arreglo_fuentes(i)                     = r_presupuesto_personal.id_fuente_proyecto THEN
          IF i                                      =1 THEN
            rec_registro_proyecto.fuente1_especie  := r_presupuesto_personal.valor_especie;
            rec_registro_proyecto.fuente1_efectivo := r_presupuesto_personal.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE1_INTERNA := r_presupuesto_personal.ES_FUENTE_INTERNA;
          ELSIF i                                   =2 THEN
            rec_registro_proyecto.fuente2_especie  := r_presupuesto_personal.valor_especie;
            rec_registro_proyecto.fuente2_efectivo := r_presupuesto_personal.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE2_INTERNA := r_presupuesto_personal.ES_FUENTE_INTERNA;
          ELSIF i                                   =3 THEN
            rec_registro_proyecto.fuente3_especie  := r_presupuesto_personal.valor_especie;
            rec_registro_proyecto.fuente3_efectivo := r_presupuesto_personal.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE3_INTERNA := r_presupuesto_personal.ES_FUENTE_INTERNA;
          ELSIF i                                   =4 THEN
            rec_registro_proyecto.fuente4_especie  := r_presupuesto_personal.valor_especie;
            rec_registro_proyecto.fuente4_efectivo := r_presupuesto_personal.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE4_INTERNA := r_presupuesto_personal.ES_FUENTE_INTERNA;
          END IF;
        END IF;
      END LOOP;
    END IF;
  END LOOP;
  BEGIN
    SELECT 1
    INTO v_existe_registro
    FROM RESUMEN_PRESUPUESTO_PROYECTO
    WHERE ID_PROYECTO = p_id_proyecto
    AND NOMBRE_RUBRO  = 'PERSONAL' AND ESTADO = 'TEMPORAL';
    UPDATE RESUMEN_PRESUPUESTO_PROYECTO
    SET POLICIA_NACIONAL_ESPECIE = rec_registro_proyecto.POLICIA_NACIONAL_ESPECIE,
      POLICIA_NACIONAL_EFECTIVO  = rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO,
      VICIN_ESPECIE              = rec_registro_proyecto.VICIN_ESPECIE,
      VICIN_EFECTIVO             = rec_registro_proyecto.VICIN_EFECTIVO,
      UNIDAD_ESPECIE             = rec_registro_proyecto.UNIDAD_ESPECIE,
      UNIDAD_EFECTIVO            = rec_registro_proyecto.UNIDAD_EFECTIVO ,
      FUENTE1_ESPECIE            = rec_registro_proyecto.FUENTE1_ESPECIE,
      FUENTE1_EFECTIVO           = rec_registro_proyecto.FUENTE1_EFECTIVO,
      FUENTE2_ESPECIE            = rec_registro_proyecto.FUENTE2_ESPECIE,
      FUENTE2_EFECTIVO           = rec_registro_proyecto.FUENTE2_EFECTIVO,
      FUENTE3_ESPECIE            = rec_registro_proyecto.FUENTE3_ESPECIE,
      FUENTE3_EFECTIVO           = rec_registro_proyecto.FUENTE3_EFECTIVO,
      FUENTE4_ESPECIE            = rec_registro_proyecto.FUENTE4_ESPECIE,
      FUENTE4_EFECTIVO           = rec_registro_proyecto.FUENTE4_EFECTIVO,
      ES_FUENTE1_INTERNA         = rec_registro_proyecto.ES_FUENTE1_INTERNA,
      ES_FUENTE2_INTERNA         = rec_registro_proyecto.ES_FUENTE2_INTERNA,
      ES_FUENTE3_INTERNA         = rec_registro_proyecto.ES_FUENTE3_INTERNA,
      ES_FUENTE4_INTERNA         = rec_registro_proyecto.ES_FUENTE4_INTERNA,
      ORDEN                      = 1
    WHERE ID_PROYECTO            = p_id_proyecto
    AND NOMBRE_RUBRO             = 'PERSONAL';
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    INSERT
    INTO RESUMEN_PRESUPUESTO_PROYECTO
      (
        ID_RESUMEN_PRES_PROY ,
        ID_PROYECTO ,
        NOMBRE_RUBRO ,
        POLICIA_NACIONAL_ESPECIE ,
        POLICIA_NACIONAL_EFECTIVO ,
        VICIN_ESPECIE,
        VICIN_EFECTIVO,
        UNIDAD_ESPECIE ,
        UNIDAD_EFECTIVO ,
        FUENTE1_ESPECIE ,
        FUENTE1_EFECTIVO ,
        FUENTE2_ESPECIE ,
        FUENTE2_EFECTIVO ,
        FUENTE3_ESPECIE ,
        FUENTE3_EFECTIVO ,
        FUENTE4_ESPECIE ,
        FUENTE4_EFECTIVO,
        ES_FUENTE1_INTERNA,
        ES_FUENTE2_INTERNA,
        ES_FUENTE3_INTERNA,
        ES_FUENTE4_INTERNA,
        ORDEN

      )
      VALUES
      (
        SEC_PRESUPUESTO_PROYECTO.NEXTVAL,
        p_id_proyecto,
        'PERSONAL',
        rec_registro_proyecto.POLICIA_NACIONAL_ESPECIE ,
        rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO ,
        rec_registro_proyecto.VICIN_ESPECIE,
        rec_registro_proyecto.VICIN_EFECTIVO,
        rec_registro_proyecto.UNIDAD_ESPECIE ,
        rec_registro_proyecto.UNIDAD_EFECTIVO ,
        rec_registro_proyecto.FUENTE1_ESPECIE ,
        rec_registro_proyecto.FUENTE1_EFECTIVO ,
        rec_registro_proyecto.FUENTE2_ESPECIE ,
        rec_registro_proyecto.FUENTE2_EFECTIVO ,
        rec_registro_proyecto.FUENTE3_ESPECIE ,
        rec_registro_proyecto.FUENTE3_EFECTIVO ,
        rec_registro_proyecto.FUENTE4_ESPECIE ,
        rec_registro_proyecto.FUENTE4_EFECTIVO,
        rec_registro_proyecto.ES_FUENTE1_INTERNA,
        rec_registro_proyecto.ES_FUENTE2_INTERNA,
        rec_registro_proyecto.ES_FUENTE3_INTERNA,
        rec_registro_proyecto.ES_FUENTE4_INTERNA,
        1

      );
  END;
  --COMMIT;
END PRC_CREAR_ACTUALIZA_PRES_PERS;
PROCEDURE PRC_CREAR_ACTUALIZA_PRES_EQUIP
  (
    p_id_proyecto NUMBER
  )
AS
  num_fila NUMBER:=1;
  rec_registro_proyecto RESUMEN_PRESUPUESTO_PROYECTO%ROWTYPE;
  v_existe_registro NUMBER;
BEGIN
  SELECT codigo
  INTO CONST_FUENTE_POLICIA
  FROM constantes
  WHERE id_constantes = 98;
  SELECT codigo
  INTO CONST_FUENTE_VICIN
  FROM constantes
  WHERE id_constantes = 99;
  FOR r_presupuesto_equipos IN c_presupuesto_equipos(p_id_proyecto)
  LOOP
    IF r_presupuesto_equipos.nombre_fuente             = CONST_FUENTE_POLICIA THEN
      rec_registro_proyecto.policia_nacional_efectivo := r_presupuesto_equipos.valor_efectivo;
      rec_registro_proyecto.policia_nacional_especie  := r_presupuesto_equipos.valor_especie;
    ELSIF r_presupuesto_equipos.nombre_fuente          = CONST_FUENTE_VICIN THEN
      rec_registro_proyecto.vicin_efectivo            := r_presupuesto_equipos.valor_efectivo;
      rec_registro_proyecto.vicin_especie             := r_presupuesto_equipos.valor_especie;
    ELSIF r_presupuesto_equipos.fuente_base            = 'Y' THEN
      rec_registro_proyecto.unidad_efectivo           := r_presupuesto_equipos.valor_efectivo;
      rec_registro_proyecto.unidad_especie            := r_presupuesto_equipos.valor_especie;
    ELSIF r_presupuesto_equipos.fuente_base            = 'N' THEN
      FOR i IN 1..v_arreglo_fuentes.count
      LOOP
        IF v_arreglo_fuentes(i)                     = r_presupuesto_equipos.id_fuente_proyecto THEN
          IF i                                      =1 THEN
            rec_registro_proyecto.fuente1_especie  := r_presupuesto_equipos.valor_especie;
            rec_registro_proyecto.fuente1_efectivo := r_presupuesto_equipos.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE1_INTERNA := r_presupuesto_equipos.ES_FUENTE_INTERNA;
          ELSIF i                                   =2 THEN
            rec_registro_proyecto.fuente2_especie  := r_presupuesto_equipos.valor_especie;
            rec_registro_proyecto.fuente2_efectivo := r_presupuesto_equipos.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE2_INTERNA := r_presupuesto_equipos.ES_FUENTE_INTERNA;
          ELSIF i                                   =3 THEN
            rec_registro_proyecto.fuente3_especie  := r_presupuesto_equipos.valor_especie;
            rec_registro_proyecto.fuente3_efectivo := r_presupuesto_equipos.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE3_INTERNA := r_presupuesto_equipos.ES_FUENTE_INTERNA;
          ELSIF i                                   =4 THEN
            rec_registro_proyecto.fuente4_especie  := r_presupuesto_equipos.valor_especie;
            rec_registro_proyecto.fuente4_efectivo := r_presupuesto_equipos.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE4_INTERNA := r_presupuesto_equipos.ES_FUENTE_INTERNA;
          END IF;
        END IF;
      END LOOP;
    END IF;
  END LOOP;
  BEGIN
    SELECT 1
    INTO v_existe_registro
    FROM RESUMEN_PRESUPUESTO_PROYECTO
    WHERE ID_PROYECTO = p_id_proyecto
    AND NOMBRE_RUBRO  = 'EQUIPOS Y SOFTWARE' AND ESTADO = 'TEMPORAL';
    UPDATE RESUMEN_PRESUPUESTO_PROYECTO
    SET POLICIA_NACIONAL_ESPECIE = rec_registro_proyecto.POLICIA_NACIONAL_ESPECIE,
    POLICIA_NACIONAL_EFECTIVO = rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO,
      VICIN_ESPECIE              = rec_registro_proyecto.VICIN_ESPECIE,
      VICIN_EFECTIVO              = rec_registro_proyecto.VICIN_EFECTIVO,
      UNIDAD_ESPECIE             = rec_registro_proyecto.UNIDAD_ESPECIE ,
      UNIDAD_EFECTIVO             = rec_registro_proyecto.UNIDAD_EFECTIVO ,
      FUENTE1_ESPECIE            = rec_registro_proyecto.FUENTE1_ESPECIE,
      FUENTE1_EFECTIVO           = rec_registro_proyecto.FUENTE1_EFECTIVO,
      FUENTE2_ESPECIE            = rec_registro_proyecto.FUENTE2_ESPECIE,
      FUENTE2_EFECTIVO           = rec_registro_proyecto.FUENTE2_EFECTIVO,
      FUENTE3_ESPECIE            = rec_registro_proyecto.FUENTE3_ESPECIE,
      FUENTE3_EFECTIVO           = rec_registro_proyecto.FUENTE3_EFECTIVO,
      FUENTE4_ESPECIE            = rec_registro_proyecto.FUENTE4_ESPECIE,
      FUENTE4_EFECTIVO           = rec_registro_proyecto.FUENTE4_EFECTIVO,
      ES_FUENTE1_INTERNA         = rec_registro_proyecto.ES_FUENTE1_INTERNA,
      ES_FUENTE2_INTERNA         = rec_registro_proyecto.ES_FUENTE2_INTERNA,
      ES_FUENTE3_INTERNA         = rec_registro_proyecto.ES_FUENTE3_INTERNA,
      ES_FUENTE4_INTERNA         = rec_registro_proyecto.ES_FUENTE4_INTERNA,
      ORDEN                      = 2
    WHERE ID_PROYECTO             = p_id_proyecto
    AND NOMBRE_RUBRO              = 'EQUIPOS Y SOFTWARE';
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    INSERT
    INTO RESUMEN_PRESUPUESTO_PROYECTO
      (
        ID_RESUMEN_PRES_PROY ,
        ID_PROYECTO ,
        NOMBRE_RUBRO ,
        POLICIA_NACIONAL_ESPECIE,
        POLICIA_NACIONAL_EFECTIVO ,
        VICIN_ESPECIE,
        VICIN_EFECTIVO,
        UNIDAD_ESPECIE,
        UNIDAD_EFECTIVO ,
        FUENTE1_ESPECIE ,
        FUENTE1_EFECTIVO ,
        FUENTE2_ESPECIE ,
        FUENTE2_EFECTIVO ,
        FUENTE3_ESPECIE ,
        FUENTE3_EFECTIVO ,
        FUENTE4_ESPECIE ,
        FUENTE4_EFECTIVO,
        ES_FUENTE1_INTERNA,
        ES_FUENTE2_INTERNA,
        ES_FUENTE3_INTERNA,
        ES_FUENTE4_INTERNA,
        ORDEN
      )
      VALUES
      (
        SEC_PRESUPUESTO_PROYECTO.NEXTVAL,
        p_id_proyecto,
        'EQUIPOS y SOFTWARE',
        rec_registro_proyecto.POLICIA_NACIONAL_ESPECIE ,
        rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO ,
        rec_registro_proyecto.VICIN_ESPECIE,
        rec_registro_proyecto.VICIN_EFECTIVO,
        rec_registro_proyecto.UNIDAD_ESPECIE ,
        rec_registro_proyecto.UNIDAD_EFECTIVO ,
        rec_registro_proyecto.FUENTE1_ESPECIE ,
        rec_registro_proyecto.FUENTE1_EFECTIVO ,
        rec_registro_proyecto.FUENTE2_ESPECIE ,
        rec_registro_proyecto.FUENTE2_EFECTIVO ,
        rec_registro_proyecto.FUENTE3_ESPECIE ,
        rec_registro_proyecto.FUENTE3_EFECTIVO ,
        rec_registro_proyecto.FUENTE4_ESPECIE ,
        rec_registro_proyecto.FUENTE4_EFECTIVO,
        rec_registro_proyecto.ES_FUENTE1_INTERNA,
        rec_registro_proyecto.ES_FUENTE2_INTERNA,
        rec_registro_proyecto.ES_FUENTE3_INTERNA,
        rec_registro_proyecto.ES_FUENTE4_INTERNA,
        2
      );
  END;
  --COMMIT;
END PRC_CREAR_ACTUALIZA_PRES_EQUIP;
PROCEDURE PRC_CREAR_ACTUALIZA_PRES_EVENT
  (
    p_id_proyecto NUMBER
  )
AS
  rec_registro_proyecto RESUMEN_PRESUPUESTO_PROYECTO%ROWTYPE;
  v_existe_registro NUMBER;
BEGIN
  SELECT codigo
  INTO CONST_FUENTE_POLICIA
  FROM constantes
  WHERE id_constantes = 98;
  SELECT codigo
  INTO CONST_FUENTE_VICIN
  FROM constantes
  WHERE id_constantes = 99;
  FOR r_presupuesto_eventos IN c_presupuesto_eventos(p_id_proyecto)
  LOOP
    IF r_presupuesto_eventos.nombre_fuente             = CONST_FUENTE_POLICIA THEN
      rec_registro_proyecto.policia_nacional_efectivo := r_presupuesto_eventos.valor_efectivo;
    ELSIF r_presupuesto_eventos.nombre_fuente          = CONST_FUENTE_VICIN THEN
      rec_registro_proyecto.vicin_efectivo            := r_presupuesto_eventos.valor_efectivo;
    ELSIF r_presupuesto_eventos.fuente_base            = 'Y' THEN
      rec_registro_proyecto.unidad_efectivo           := r_presupuesto_eventos.valor_efectivo;
    ELSIF r_presupuesto_eventos.fuente_base            = 'N' THEN
    FOR i IN 1..v_arreglo_fuentes.count
      LOOP
        IF v_arreglo_fuentes(i)                     = r_presupuesto_eventos.id_fuente_proyecto THEN
          IF i                                      =1 THEN
            rec_registro_proyecto.fuente1_efectivo := r_presupuesto_eventos.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE1_INTERNA := r_presupuesto_eventos.ES_FUENTE_INTERNA;
          ELSIF i                                   =2 THEN
            rec_registro_proyecto.fuente2_efectivo := r_presupuesto_eventos.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE2_INTERNA := r_presupuesto_eventos.ES_FUENTE_INTERNA;
          ELSIF i                                   =3 THEN
            rec_registro_proyecto.fuente3_efectivo := r_presupuesto_eventos.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE3_INTERNA := r_presupuesto_eventos.ES_FUENTE_INTERNA;
          ELSIF i                                   =4 THEN
            rec_registro_proyecto.fuente4_efectivo := r_presupuesto_eventos.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE4_INTERNA := r_presupuesto_eventos.ES_FUENTE_INTERNA;
          END IF;
        END IF;
      END LOOP;
    END IF;

  END LOOP;
  BEGIN
    SELECT 1
    INTO v_existe_registro
    FROM RESUMEN_PRESUPUESTO_PROYECTO
    WHERE ID_PROYECTO = p_id_proyecto
    AND NOMBRE_RUBRO  = 'EVENTOS' AND ESTADO = 'TEMPORAL';
    UPDATE RESUMEN_PRESUPUESTO_PROYECTO
    SET POLICIA_NACIONAL_EFECTIVO = rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO,
      VICIN_EFECTIVO              = rec_registro_proyecto.VICIN_EFECTIVO,
      UNIDAD_EFECTIVO             = rec_registro_proyecto.UNIDAD_EFECTIVO ,
      FUENTE1_EFECTIVO            = rec_registro_proyecto.FUENTE1_EFECTIVO,
      FUENTE2_EFECTIVO            = rec_registro_proyecto.FUENTE2_EFECTIVO,
      FUENTE3_EFECTIVO            = rec_registro_proyecto.FUENTE3_EFECTIVO,
      FUENTE4_EFECTIVO            = rec_registro_proyecto.FUENTE4_EFECTIVO,
      ES_FUENTE1_INTERNA         = rec_registro_proyecto.ES_FUENTE1_INTERNA,
      ES_FUENTE2_INTERNA         = rec_registro_proyecto.ES_FUENTE2_INTERNA,
      ES_FUENTE3_INTERNA         = rec_registro_proyecto.ES_FUENTE3_INTERNA,
      ES_FUENTE4_INTERNA         = rec_registro_proyecto.ES_FUENTE4_INTERNA,
      ORDEN                      = 3
    WHERE ID_PROYECTO             = p_id_proyecto
    AND NOMBRE_RUBRO              = 'EVENTOS';
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    INSERT
    INTO RESUMEN_PRESUPUESTO_PROYECTO
      (
        ID_RESUMEN_PRES_PROY ,
        ID_PROYECTO ,
        NOMBRE_RUBRO ,
        POLICIA_NACIONAL_EFECTIVO ,
        VICIN_EFECTIVO,
        UNIDAD_EFECTIVO ,
        FUENTE1_EFECTIVO ,
        FUENTE2_EFECTIVO ,
        FUENTE3_EFECTIVO ,
        FUENTE4_EFECTIVO,
        ES_FUENTE1_INTERNA,
        ES_FUENTE2_INTERNA,
        ES_FUENTE3_INTERNA,
        ES_FUENTE4_INTERNA,
        ORDEN
      )
      VALUES
      (
        SEC_PRESUPUESTO_PROYECTO.NEXTVAL,
        p_id_proyecto,
        'EVENTOS',
        rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO ,
        rec_registro_proyecto.VICIN_EFECTIVO,
        rec_registro_proyecto.UNIDAD_EFECTIVO ,
        rec_registro_proyecto.FUENTE1_EFECTIVO ,
        rec_registro_proyecto.FUENTE2_EFECTIVO ,
        rec_registro_proyecto.FUENTE3_EFECTIVO ,
        rec_registro_proyecto.FUENTE4_EFECTIVO ,
         rec_registro_proyecto.ES_FUENTE1_INTERNA,
        rec_registro_proyecto.ES_FUENTE2_INTERNA,
        rec_registro_proyecto.ES_FUENTE3_INTERNA,
        rec_registro_proyecto.ES_FUENTE4_INTERNA,
        3
      );
  END;
  --COMMIT;
END PRC_CREAR_ACTUALIZA_PRES_EVENT;
PROCEDURE PRC_CREAR_ACTUALIZA_PRES_VIAJ
  (
    p_id_proyecto NUMBER
  )
AS
  rec_registro_proyecto RESUMEN_PRESUPUESTO_PROYECTO%ROWTYPE;
  v_existe_registro NUMBER;
BEGIN
  SELECT codigo
  INTO CONST_FUENTE_POLICIA
  FROM constantes
  WHERE id_constantes = 98;
  SELECT codigo
  INTO CONST_FUENTE_VICIN
  FROM constantes
  WHERE id_constantes = 99;

  FOR r_presupuesto_viajes IN c_presupuesto_viajes(p_id_proyecto)
  LOOP
    IF r_presupuesto_viajes.nombre_fuente              = CONST_FUENTE_POLICIA THEN
      rec_registro_proyecto.policia_nacional_efectivo := r_presupuesto_viajes.valor_efectivo;
    ELSIF r_presupuesto_viajes.nombre_fuente           = CONST_FUENTE_VICIN THEN
      rec_registro_proyecto.vicin_efectivo            := r_presupuesto_viajes.valor_efectivo;
    ELSIF r_presupuesto_viajes.fuente_base             = 'Y' THEN
      rec_registro_proyecto.unidad_efectivo           := r_presupuesto_viajes.valor_efectivo;
    ELSIF r_presupuesto_viajes.fuente_base             = 'N' THEN
      FOR i IN 1..v_arreglo_fuentes.count
      LOOP
        IF v_arreglo_fuentes(i)                     = r_presupuesto_viajes.id_fuente_proyecto THEN
          IF i                                      =1 THEN
            rec_registro_proyecto.fuente1_efectivo := r_presupuesto_viajes.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE1_INTERNA := r_presupuesto_viajes.ES_FUENTE_INTERNA;
          ELSIF i                                   =2 THEN
            rec_registro_proyecto.fuente2_efectivo := r_presupuesto_viajes.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE2_INTERNA := r_presupuesto_viajes.ES_FUENTE_INTERNA;
          ELSIF i                                   =3 THEN
            rec_registro_proyecto.fuente3_efectivo := r_presupuesto_viajes.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE3_INTERNA := r_presupuesto_viajes.ES_FUENTE_INTERNA;
          ELSIF i                                   =4 THEN
            rec_registro_proyecto.fuente4_efectivo := r_presupuesto_viajes.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE4_INTERNA := r_presupuesto_viajes.ES_FUENTE_INTERNA;
          END IF;
        END IF;
      END LOOP;
    END IF;
  END LOOP;
  BEGIN
    SELECT 1
    INTO v_existe_registro
    FROM RESUMEN_PRESUPUESTO_PROYECTO
    WHERE ID_PROYECTO = p_id_proyecto
    AND NOMBRE_RUBRO  = 'VIAJES' AND ESTADO = 'TEMPORAL';
    UPDATE RESUMEN_PRESUPUESTO_PROYECTO
    SET POLICIA_NACIONAL_EFECTIVO = rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO,
      VICIN_EFECTIVO              = rec_registro_proyecto.VICIN_EFECTIVO,
      UNIDAD_EFECTIVO             = rec_registro_proyecto.UNIDAD_EFECTIVO ,
      FUENTE1_EFECTIVO            = rec_registro_proyecto.FUENTE1_EFECTIVO,
      FUENTE2_EFECTIVO            = rec_registro_proyecto.FUENTE2_EFECTIVO,
      FUENTE3_EFECTIVO            = rec_registro_proyecto.FUENTE3_EFECTIVO,
      FUENTE4_EFECTIVO            = rec_registro_proyecto.FUENTE4_EFECTIVO,
      ES_FUENTE1_INTERNA         = rec_registro_proyecto.ES_FUENTE1_INTERNA,
      ES_FUENTE2_INTERNA         = rec_registro_proyecto.ES_FUENTE2_INTERNA,
      ES_FUENTE3_INTERNA         = rec_registro_proyecto.ES_FUENTE3_INTERNA,
      ES_FUENTE4_INTERNA         = rec_registro_proyecto.ES_FUENTE4_INTERNA,
      ORDEN                      = 4
    WHERE ID_PROYECTO             = p_id_proyecto
    AND NOMBRE_RUBRO              = 'VIAJES';
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    INSERT
    INTO RESUMEN_PRESUPUESTO_PROYECTO
      (
        ID_RESUMEN_PRES_PROY ,
        ID_PROYECTO ,
        NOMBRE_RUBRO ,
        POLICIA_NACIONAL_EFECTIVO ,
        VICIN_EFECTIVO,
        UNIDAD_EFECTIVO ,
        FUENTE1_EFECTIVO ,
        FUENTE2_EFECTIVO ,
        FUENTE3_EFECTIVO ,
        FUENTE4_EFECTIVO ,
        ES_FUENTE1_INTERNA,
        ES_FUENTE2_INTERNA,
        ES_FUENTE3_INTERNA,
        ES_FUENTE4_INTERNA,
        ORDEN
      )
      VALUES
      (
        SEC_PRESUPUESTO_PROYECTO.NEXTVAL,
        p_id_proyecto,
        'VIAJES',
        rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO ,
        rec_registro_proyecto.VICIN_EFECTIVO,
        rec_registro_proyecto.UNIDAD_EFECTIVO ,
        rec_registro_proyecto.FUENTE1_EFECTIVO ,
        rec_registro_proyecto.FUENTE2_EFECTIVO ,
        rec_registro_proyecto.FUENTE3_EFECTIVO ,
        rec_registro_proyecto.FUENTE4_EFECTIVO ,
        rec_registro_proyecto.ES_FUENTE1_INTERNA,
        rec_registro_proyecto.ES_FUENTE2_INTERNA,
        rec_registro_proyecto.ES_FUENTE3_INTERNA,
        rec_registro_proyecto.ES_FUENTE4_INTERNA,
        4
      );
  END;
  --COMMIT;
END PRC_CREAR_ACTUALIZA_PRES_VIAJ;
PROCEDURE PRC_CREAR_ACTUALIZA_PRES_OTROS
  (
    p_id_proyecto NUMBER
  )
AS
  num_fila NUMBER:=1;
  rec_registro_proyecto RESUMEN_PRESUPUESTO_PROYECTO%ROWTYPE;
  v_existe_registro NUMBER;
  v_id_gastos_admon NUMBER;
  v_id_publicaciones NUMBER;
  v_id_bibliografia NUMBER;
  v_orden NUMBER;
  v_gasto_admon NUMBER := 0;
  v_publica NUMBER := 0;
  v_biblio NUMBER := 0;
BEGIN
  SELECT codigo
  INTO CONST_FUENTE_POLICIA
  FROM constantes
  WHERE id_constantes = 98;

  SELECT codigo
  INTO CONST_FUENTE_VICIN
  FROM constantes
  WHERE id_constantes = 99;

  SELECT ID_CONSTANTES
  INTO v_id_gastos_admon
  FROM constantes
  WHERE id_constantes = 182;

  SELECT ID_CONSTANTES
  INTO v_id_publicaciones
  FROM constantes
  WHERE id_constantes = 183;

  SELECT ID_CONSTANTES
  INTO v_id_bibliografia
  FROM constantes
  WHERE id_constantes = 229;

  FOR r_tipo_otros_gastos IN c_tipo_otros_gastos(p_id_proyecto) LOOP
  FOR r_otros_gastos IN c_otros_gastos(p_id_proyecto)
  LOOP

  IF r_tipo_otros_gastos.ID_TIPO_GASTO = v_id_gastos_admon THEN
    v_orden := 5;
    v_gasto_admon := 1;
  ELSIF r_tipo_otros_gastos.ID_TIPO_GASTO = v_id_publicaciones THEN
    v_orden := 6;
    v_publica := 1;
  ELSIF r_tipo_otros_gastos.ID_TIPO_GASTO = v_id_bibliografia THEN
    v_orden := 7;
    v_biblio := 1;
  END IF;

  IF r_tipo_otros_gastos.codigo = r_otros_gastos.codigo THEN
    IF r_otros_gastos.nombre_fuente                    = CONST_FUENTE_POLICIA THEN
      rec_registro_proyecto.policia_nacional_especie  := r_otros_gastos.valor_especie;
      rec_registro_proyecto.policia_nacional_efectivo := r_otros_gastos.valor_efectivo;
      rec_registro_proyecto.nombre_rubro              := r_otros_gastos.codigo;
    ELSIF r_otros_gastos.nombre_fuente                 = CONST_FUENTE_VICIN THEN
      rec_registro_proyecto.vicin_especie             := r_otros_gastos.valor_especie;
      rec_registro_proyecto.vicin_efectivo            := r_otros_gastos.valor_efectivo;
      rec_registro_proyecto.nombre_rubro              := r_otros_gastos.codigo;
    ELSIF r_otros_gastos.fuente_base                   = 'Y' THEN
      rec_registro_proyecto.unidad_especie            := r_otros_gastos.valor_especie;
      rec_registro_proyecto.unidad_efectivo           := r_otros_gastos.valor_efectivo;
      rec_registro_proyecto.nombre_rubro              := r_otros_gastos.codigo;
    ELSIF r_otros_gastos.fuente_base                   = 'N' THEN
      FOR i IN 1..v_arreglo_fuentes.count
      LOOP
        IF v_arreglo_fuentes(i)                     = r_otros_gastos.id_fuente_proyecto THEN
          IF i                                      =1 THEN
            rec_registro_proyecto.fuente1_especie  := r_otros_gastos.valor_especie;
            rec_registro_proyecto.fuente1_efectivo := r_otros_gastos.valor_efectivo;
            rec_registro_proyecto.nombre_rubro     := r_otros_gastos.codigo;
            rec_registro_proyecto.ES_FUENTE1_INTERNA := r_otros_gastos.ES_FUENTE_INTERNA;
          ELSIF i                                   =2 THEN
            rec_registro_proyecto.fuente2_especie  := r_otros_gastos.valor_especie;
            rec_registro_proyecto.fuente2_efectivo := r_otros_gastos.valor_efectivo;
            rec_registro_proyecto.nombre_rubro              := r_otros_gastos.codigo;
            rec_registro_proyecto.ES_FUENTE2_INTERNA := r_otros_gastos.ES_FUENTE_INTERNA;
          ELSIF i                                   =3 THEN
            rec_registro_proyecto.fuente3_especie  := r_otros_gastos.valor_especie;
            rec_registro_proyecto.fuente3_efectivo := r_otros_gastos.valor_efectivo;
            rec_registro_proyecto.nombre_rubro              := r_otros_gastos.codigo;
            rec_registro_proyecto.ES_FUENTE3_INTERNA := r_otros_gastos.ES_FUENTE_INTERNA;
          ELSIF i                                   =4 THEN
            rec_registro_proyecto.fuente4_especie  := r_otros_gastos.valor_especie;
            rec_registro_proyecto.fuente4_efectivo := r_otros_gastos.valor_efectivo;
            rec_registro_proyecto.nombre_rubro     := r_otros_gastos.codigo;
            rec_registro_proyecto.ES_FUENTE4_INTERNA := r_otros_gastos.ES_FUENTE_INTERNA;
          END IF;
        END IF;
      END LOOP;

      END IF;

    BEGIN
      SELECT 1
      INTO v_existe_registro
      FROM RESUMEN_PRESUPUESTO_PROYECTO
      WHERE ID_PROYECTO = p_id_proyecto AND ESTADO = 'TEMPORAL'
      AND NOMBRE_RUBRO  = r_tipo_otros_gastos.codigo;
      UPDATE RESUMEN_PRESUPUESTO_PROYECTO
      SET POLICIA_NACIONAL_ESPECIE = rec_registro_proyecto.POLICIA_NACIONAL_ESPECIE,
        POLICIA_NACIONAL_EFECTIVO  = rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO,
        VICIN_ESPECIE              = rec_registro_proyecto.VICIN_ESPECIE,
        VICIN_EFECTIVO             = rec_registro_proyecto.VICIN_EFECTIVO,
        UNIDAD_ESPECIE             = rec_registro_proyecto.UNIDAD_ESPECIE,
        UNIDAD_EFECTIVO            = rec_registro_proyecto.UNIDAD_EFECTIVO ,
        FUENTE1_ESPECIE            = rec_registro_proyecto.FUENTE1_ESPECIE,
        FUENTE1_EFECTIVO           = rec_registro_proyecto.FUENTE1_EFECTIVO,
        FUENTE2_ESPECIE            = rec_registro_proyecto.FUENTE2_ESPECIE,
        FUENTE2_EFECTIVO           = rec_registro_proyecto.FUENTE2_EFECTIVO,
        FUENTE3_ESPECIE            = rec_registro_proyecto.FUENTE3_ESPECIE,
        FUENTE3_EFECTIVO           = rec_registro_proyecto.FUENTE3_EFECTIVO,
        FUENTE4_ESPECIE            = rec_registro_proyecto.FUENTE4_ESPECIE,
        FUENTE4_EFECTIVO           = rec_registro_proyecto.FUENTE4_EFECTIVO,
        ES_FUENTE1_INTERNA         = rec_registro_proyecto.ES_FUENTE1_INTERNA,
        ES_FUENTE2_INTERNA         = rec_registro_proyecto.ES_FUENTE2_INTERNA,
        ES_FUENTE3_INTERNA         = rec_registro_proyecto.ES_FUENTE3_INTERNA,
        ES_FUENTE4_INTERNA         = rec_registro_proyecto.ES_FUENTE4_INTERNA,
        ORDEN                      = v_orden
      WHERE ID_PROYECTO            = p_id_proyecto
      AND NOMBRE_RUBRO             = r_tipo_otros_gastos.codigo;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
      INSERT
      INTO RESUMEN_PRESUPUESTO_PROYECTO
        (
          ID_RESUMEN_PRES_PROY ,
          ID_PROYECTO ,
          NOMBRE_RUBRO ,
          POLICIA_NACIONAL_ESPECIE ,
          POLICIA_NACIONAL_EFECTIVO ,
          VICIN_ESPECIE,
          VICIN_EFECTIVO,
          UNIDAD_ESPECIE ,
          UNIDAD_EFECTIVO ,
          FUENTE1_ESPECIE ,
          FUENTE1_EFECTIVO ,
          FUENTE2_ESPECIE ,
          FUENTE2_EFECTIVO ,
          FUENTE3_ESPECIE ,
          FUENTE3_EFECTIVO ,
          FUENTE4_ESPECIE ,
          FUENTE4_EFECTIVO,
          ES_FUENTE1_INTERNA,
          ES_FUENTE2_INTERNA,
          ES_FUENTE3_INTERNA,
          ES_FUENTE4_INTERNA,
          ORDEN
        )
        VALUES
        (
          SEC_PRESUPUESTO_PROYECTO.NEXTVAL,
          p_id_proyecto,
          rec_registro_proyecto.NOMBRE_RUBRO,
          rec_registro_proyecto.POLICIA_NACIONAL_ESPECIE ,
          rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO ,
          rec_registro_proyecto.VICIN_ESPECIE,
          rec_registro_proyecto.VICIN_EFECTIVO,
          rec_registro_proyecto.UNIDAD_ESPECIE ,
          rec_registro_proyecto.UNIDAD_EFECTIVO ,
          rec_registro_proyecto.FUENTE1_ESPECIE ,
          rec_registro_proyecto.FUENTE1_EFECTIVO ,
          rec_registro_proyecto.FUENTE2_ESPECIE ,
          rec_registro_proyecto.FUENTE2_EFECTIVO ,
          rec_registro_proyecto.FUENTE3_ESPECIE ,
          rec_registro_proyecto.FUENTE3_EFECTIVO ,
          rec_registro_proyecto.FUENTE4_ESPECIE ,
          rec_registro_proyecto.FUENTE4_EFECTIVO ,
          rec_registro_proyecto.ES_FUENTE1_INTERNA,
          rec_registro_proyecto.ES_FUENTE2_INTERNA,
          rec_registro_proyecto.ES_FUENTE3_INTERNA,
          rec_registro_proyecto.ES_FUENTE4_INTERNA,
          v_orden
        );
    END;
    --COMMIT;
    END IF;
    END LOOP;
    rec_registro_proyecto.NOMBRE_RUBRO := null;
    rec_registro_proyecto.POLICIA_NACIONAL_ESPECIE := 0;
    rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO := 0;
    rec_registro_proyecto.VICIN_ESPECIE:= 0;
    rec_registro_proyecto.VICIN_EFECTIVO := 0;
    rec_registro_proyecto.UNIDAD_ESPECIE := 0;
    rec_registro_proyecto.UNIDAD_EFECTIVO := 0;
    rec_registro_proyecto.FUENTE1_ESPECIE := 0;
    rec_registro_proyecto.FUENTE1_EFECTIVO := 0;
    rec_registro_proyecto.FUENTE2_ESPECIE := 0;
    rec_registro_proyecto.FUENTE2_EFECTIVO := 0;
    rec_registro_proyecto.FUENTE3_ESPECIE := 0;
    rec_registro_proyecto.FUENTE3_EFECTIVO := 0;
    rec_registro_proyecto.FUENTE4_ESPECIE := 0;
    rec_registro_proyecto.FUENTE4_EFECTIVO := 0;
    rec_registro_proyecto.ES_FUENTE1_INTERNA := null;
    rec_registro_proyecto.ES_FUENTE2_INTERNA := null;
    rec_registro_proyecto.ES_FUENTE3_INTERNA := null;
    rec_registro_proyecto.ES_FUENTE4_INTERNA := null;
  END LOOP;

IF v_gasto_admon = 0 THEN
  INSERT
      INTO RESUMEN_PRESUPUESTO_PROYECTO
        (
          ID_RESUMEN_PRES_PROY ,
          ID_PROYECTO ,
          NOMBRE_RUBRO ,
          POLICIA_NACIONAL_ESPECIE ,
          POLICIA_NACIONAL_EFECTIVO ,
          VICIN_ESPECIE,
          VICIN_EFECTIVO,
          UNIDAD_ESPECIE ,
          UNIDAD_EFECTIVO ,
          FUENTE1_ESPECIE ,
          FUENTE1_EFECTIVO ,
          FUENTE2_ESPECIE ,
          FUENTE2_EFECTIVO ,
          FUENTE3_ESPECIE ,
          FUENTE3_EFECTIVO ,
          FUENTE4_ESPECIE ,
          FUENTE4_EFECTIVO,
          ES_FUENTE1_INTERNA,
          ES_FUENTE2_INTERNA,
          ES_FUENTE3_INTERNA,
          ES_FUENTE4_INTERNA,
          ORDEN
        )
        VALUES
        (
          SEC_PRESUPUESTO_PROYECTO.NEXTVAL,
          p_id_proyecto,
          'GASTOS ADMINISTRATIVOS',
          rec_registro_proyecto.POLICIA_NACIONAL_ESPECIE ,
          rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO ,
          rec_registro_proyecto.VICIN_ESPECIE,
          rec_registro_proyecto.VICIN_EFECTIVO,
          rec_registro_proyecto.UNIDAD_ESPECIE ,
          rec_registro_proyecto.UNIDAD_EFECTIVO ,
          rec_registro_proyecto.FUENTE1_ESPECIE ,
          rec_registro_proyecto.FUENTE1_EFECTIVO ,
          rec_registro_proyecto.FUENTE2_ESPECIE ,
          rec_registro_proyecto.FUENTE2_EFECTIVO ,
          rec_registro_proyecto.FUENTE3_ESPECIE ,
          rec_registro_proyecto.FUENTE3_EFECTIVO ,
          rec_registro_proyecto.FUENTE4_ESPECIE ,
          rec_registro_proyecto.FUENTE4_EFECTIVO ,
          rec_registro_proyecto.ES_FUENTE1_INTERNA,
          rec_registro_proyecto.ES_FUENTE2_INTERNA,
          rec_registro_proyecto.ES_FUENTE3_INTERNA,
          rec_registro_proyecto.ES_FUENTE4_INTERNA,
          5
        );
END IF;

IF v_publica = 0 THEN
  INSERT
      INTO RESUMEN_PRESUPUESTO_PROYECTO
        (
          ID_RESUMEN_PRES_PROY ,
          ID_PROYECTO ,
          NOMBRE_RUBRO ,
          POLICIA_NACIONAL_ESPECIE ,
          POLICIA_NACIONAL_EFECTIVO ,
          VICIN_ESPECIE,
          VICIN_EFECTIVO,
          UNIDAD_ESPECIE ,
          UNIDAD_EFECTIVO ,
          FUENTE1_ESPECIE ,
          FUENTE1_EFECTIVO ,
          FUENTE2_ESPECIE ,
          FUENTE2_EFECTIVO ,
          FUENTE3_ESPECIE ,
          FUENTE3_EFECTIVO ,
          FUENTE4_ESPECIE ,
          FUENTE4_EFECTIVO,
          ES_FUENTE1_INTERNA,
          ES_FUENTE2_INTERNA,
          ES_FUENTE3_INTERNA,
          ES_FUENTE4_INTERNA,
          ORDEN
        )
        VALUES
        (
          SEC_PRESUPUESTO_PROYECTO.NEXTVAL,
          p_id_proyecto,
          'PUBLICACIONES',
          rec_registro_proyecto.POLICIA_NACIONAL_ESPECIE ,
          rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO ,
          rec_registro_proyecto.VICIN_ESPECIE,
          rec_registro_proyecto.VICIN_EFECTIVO,
          rec_registro_proyecto.UNIDAD_ESPECIE ,
          rec_registro_proyecto.UNIDAD_EFECTIVO ,
          rec_registro_proyecto.FUENTE1_ESPECIE ,
          rec_registro_proyecto.FUENTE1_EFECTIVO ,
          rec_registro_proyecto.FUENTE2_ESPECIE ,
          rec_registro_proyecto.FUENTE2_EFECTIVO ,
          rec_registro_proyecto.FUENTE3_ESPECIE ,
          rec_registro_proyecto.FUENTE3_EFECTIVO ,
          rec_registro_proyecto.FUENTE4_ESPECIE ,
          rec_registro_proyecto.FUENTE4_EFECTIVO ,
          rec_registro_proyecto.ES_FUENTE1_INTERNA,
          rec_registro_proyecto.ES_FUENTE2_INTERNA,
          rec_registro_proyecto.ES_FUENTE3_INTERNA,
          rec_registro_proyecto.ES_FUENTE4_INTERNA,
          6
        );
 END IF;

 IF v_biblio = 0 THEN

  INSERT
      INTO RESUMEN_PRESUPUESTO_PROYECTO
        (
          ID_RESUMEN_PRES_PROY ,
          ID_PROYECTO ,
          NOMBRE_RUBRO ,
          POLICIA_NACIONAL_ESPECIE ,
          POLICIA_NACIONAL_EFECTIVO ,
          VICIN_ESPECIE,
          VICIN_EFECTIVO,
          UNIDAD_ESPECIE ,
          UNIDAD_EFECTIVO ,
          FUENTE1_ESPECIE ,
          FUENTE1_EFECTIVO ,
          FUENTE2_ESPECIE ,
          FUENTE2_EFECTIVO ,
          FUENTE3_ESPECIE ,
          FUENTE3_EFECTIVO ,
          FUENTE4_ESPECIE ,
          FUENTE4_EFECTIVO,
          ES_FUENTE1_INTERNA,
          ES_FUENTE2_INTERNA,
          ES_FUENTE3_INTERNA,
          ES_FUENTE4_INTERNA,
          ORDEN
        )
        VALUES
        (
          SEC_PRESUPUESTO_PROYECTO.NEXTVAL,
          p_id_proyecto,
          'BIBLIOGRAFIA Y DOCUMENTACION',
          rec_registro_proyecto.POLICIA_NACIONAL_ESPECIE ,
          rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO ,
          rec_registro_proyecto.VICIN_ESPECIE,
          rec_registro_proyecto.VICIN_EFECTIVO,
          rec_registro_proyecto.UNIDAD_ESPECIE ,
          rec_registro_proyecto.UNIDAD_EFECTIVO ,
          rec_registro_proyecto.FUENTE1_ESPECIE ,
          rec_registro_proyecto.FUENTE1_EFECTIVO ,
          rec_registro_proyecto.FUENTE2_ESPECIE ,
          rec_registro_proyecto.FUENTE2_EFECTIVO ,
          rec_registro_proyecto.FUENTE3_ESPECIE ,
          rec_registro_proyecto.FUENTE3_EFECTIVO ,
          rec_registro_proyecto.FUENTE4_ESPECIE ,
          rec_registro_proyecto.FUENTE4_EFECTIVO ,
          rec_registro_proyecto.ES_FUENTE1_INTERNA,
          rec_registro_proyecto.ES_FUENTE2_INTERNA,
          rec_registro_proyecto.ES_FUENTE3_INTERNA,
          rec_registro_proyecto.ES_FUENTE4_INTERNA,
          7
        );
END IF;

END PRC_CREAR_ACTUALIZA_PRES_OTROS;
PROCEDURE PRC_CREAR_ACTUALIZA_PRES
  (
    p_id_proyecto NUMBER
  )
AS
  i NUMBER :=1;
BEGIN

    DELETE RESUMEN_PRESUPUESTO_PROYECTO WHERE ID_PROYECTO = p_id_proyecto AND ESTADO = 'TEMPORAL';
    --COMMIT;

    FOR r_otras_fuentes_proyecto IN c_otras_fuentes_proyecto(p_id_proyecto) LOOP
      v_arreglo_fuentes.extend;
      v_arreglo_fuentes(i) := r_otras_fuentes_proyecto.id_fuente_proyecto;
      i := i+1;
    END LOOP;



  PRC_CREAR_ACTUALIZA_PRES_PERS(p_id_proyecto);
  PRC_CREAR_ACTUALIZA_PRES_EQUIP(p_id_proyecto);
  PRC_CREAR_ACTUALIZA_PRES_EVENT(p_id_proyecto);
  PRC_CREAR_ACTUALIZA_PRES_VIAJ(p_id_proyecto);
  PRC_CREAR_ACTUALIZA_PRES_OTROS(p_id_proyecto);
  --COMMIT;
  v_arreglo_fuentes := arreglo_fuentes_type();
END;


/*
  =========================================== INICIO CALCULO PRESUPUESTO EJECUTADO ==================================================

 */

PROCEDURE PRC_CALCULAR_PRES_EJECUTA (P_ID_PROYECTO NUMBER, P_ID_INFORME_AVANCE NUMBER) AS

V_VALOR_PERSONAL_FUENTE NUMBER;
V_VALOR_EQUIPOS_FUENTE NUMBER;
V_VALOR_EVENTOS_FUENTE NUMBER;
V_VALOR_VIAJES_FUENTE NUMBER;
V_VALOR_OTROS_GASTOS_FUENTE NUMBER;
V_VALOR_OTROS_PUBLICA_FUENTE NUMBER;
V_VALOR_OTROS_BIBLIO_FUENTE NUMBER;
I NUMBER;
V_TEXTO_GASTOS VARCHAR2(50);
V_TEXTO_PUBLICA VARCHAR2(50);
V_TEXTO_BIBLIO VARCHAR2(50);

V_POLICIA_PRESUPUESTADO NUMBER;
V_VICIN_PRESUPUESTADO NUMBER;
V_UNIDAD_PRESUPUESTADO NUMBER;
V_FUENTE1_PRESUPUESTADO NUMBER;
V_FUENTE2_PRESUPUESTADO NUMBER;
V_FUENTE3_PRESUPUESTADO NUMBER;
V_FUENTE4_PRESUPUESTADO NUMBER;

BEGIN

  I := 1;

  DELETE RESUMEN_PRESUPUESTO_EJECUTADO WHERE ID_PROYECTO = P_ID_PROYECTO AND ID_INFORME_AVANCE = P_ID_INFORME_AVANCE AND TIPO = 'I';
  --COMMIT;

  SELECT VALOR
  INTO V_TEXTO_GASTOS
  FROM CONSTANTES
  WHERE ID_CONSTANTES = 182;

  SELECT VALOR
  INTO V_TEXTO_PUBLICA
  FROM CONSTANTES
  WHERE ID_CONSTANTES = 183;

  SELECT VALOR
  INTO V_TEXTO_BIBLIO
  FROM CONSTANTES
  WHERE ID_CONSTANTES = 229;

  REGISTRO_PROYECTO_PERSONAL.ID_PROYECTO := P_ID_PROYECTO;
  REGISTRO_PROYECTO_PERSONAL.ID_INFORME_AVANCE := P_ID_INFORME_AVANCE;
  REGISTRO_PROYECTO_PERSONAL.NOMBRE_RUBRO := 'PERSONAL';
  REGISTRO_PROYECTO_PERSONAL.ORDEN := 1;

  REGISTRO_PROYECTO_EQUIPOS.ID_PROYECTO := P_ID_PROYECTO;
  REGISTRO_PROYECTO_EQUIPOS.ID_INFORME_AVANCE := P_ID_INFORME_AVANCE;
  REGISTRO_PROYECTO_EQUIPOS.NOMBRE_RUBRO := 'EQUIPOS Y SOFTWARE';
  REGISTRO_PROYECTO_EQUIPOS.ORDEN := 2;

  REGISTRO_PROYECTO_EVENTOS.ID_PROYECTO := P_ID_PROYECTO;
  REGISTRO_PROYECTO_EVENTOS.ID_INFORME_AVANCE := P_ID_INFORME_AVANCE;
  REGISTRO_PROYECTO_EVENTOS.NOMBRE_RUBRO := 'EVENTOS';
  REGISTRO_PROYECTO_EVENTOS.ORDEN := 3;

  REGISTRO_PROYECTO_VIAJES.ID_PROYECTO := P_ID_PROYECTO;
  REGISTRO_PROYECTO_VIAJES.ID_INFORME_AVANCE := P_ID_INFORME_AVANCE;
  REGISTRO_PROYECTO_VIAJES.NOMBRE_RUBRO := 'VIAJES';
  REGISTRO_PROYECTO_VIAJES.ORDEN := 4;

  REGISTRO_PROY_OTROS_GASTOS.ID_PROYECTO := P_ID_PROYECTO;
  REGISTRO_PROY_OTROS_GASTOS.ID_INFORME_AVANCE := P_ID_INFORME_AVANCE;
  REGISTRO_PROY_OTROS_GASTOS.NOMBRE_RUBRO := V_TEXTO_GASTOS;
  REGISTRO_PROY_OTROS_GASTOS.ORDEN := 5;

  REGISTRO_PROY_OTROS_PUBLICA.ID_PROYECTO := P_ID_PROYECTO;
  REGISTRO_PROY_OTROS_PUBLICA.ID_INFORME_AVANCE := P_ID_INFORME_AVANCE;
  REGISTRO_PROY_OTROS_PUBLICA.NOMBRE_RUBRO := V_TEXTO_PUBLICA;
  REGISTRO_PROY_OTROS_PUBLICA.ORDEN := 6;

  REGISTRO_PROY_OTROS_BIBLIO.ID_PROYECTO := P_ID_PROYECTO;
  REGISTRO_PROY_OTROS_BIBLIO.ID_INFORME_AVANCE := P_ID_INFORME_AVANCE;
  REGISTRO_PROY_OTROS_BIBLIO.NOMBRE_RUBRO := V_TEXTO_BIBLIO;
  REGISTRO_PROY_OTROS_BIBLIO.ORDEN := 7;


  FOR J IN C_FUENTES_PROYECTO(P_ID_PROYECTO) LOOP

    V_VALOR_PERSONAL_FUENTE := NULL;
    V_VALOR_EQUIPOS_FUENTE := NULL;
    V_VALOR_EVENTOS_FUENTE := NULL;
    V_VALOR_VIAJES_FUENTE := NULL;
    V_VALOR_OTROS_GASTOS_FUENTE := NULL;
    V_VALOR_OTROS_PUBLICA_FUENTE := NULL;
    V_VALOR_OTROS_BIBLIO_FUENTE := NULL;

    DBMS_OUTPUT.PUT_LINE('FUENTE --> ' || J.NOMBRE_FUENTE);

    SELECT SUM(NVL(IP.VALOR_HORA, 0) * NVL(HI.HORAS_INVESTIGA_TRAB_PERI, 0)) VALOR
    INTO V_VALOR_PERSONAL_FUENTE
    FROM INVESTIGADORES_PROYECTO IP JOIN HORAS_INVESTIGADOR HI
    ON (IP.ID_INVESTIGADOR_PROYECTO = HI.ID_INVESTIGADOR_PROYECTO) JOIN INFORME_AVANCE IA
    ON (IA.ID_COMPROMISO_PROYECTO = HI.ID_COMPROMISO_PROYECTO) JOIN FUENTE_PROYECTO FP
    ON (IP.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE IP.ID_PROYECTO = P_ID_PROYECTO AND
          IA.ID_INFORME_AVANCE = P_ID_INFORME_AVANCE AND
          FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO;

    DBMS_OUTPUT.PUT_LINE('V_VALOR_PERSONAL_FUENTE --> ' || V_VALOR_PERSONAL_FUENTE);

    SELECT SUM(NVL(EI.VALOR, 0)) VALOR
    INTO V_VALOR_EQUIPOS_FUENTE
    FROM EJECUCION_EQUIPOS_PROYECTO EE JOIN EQUIPOS_INVESTIGACION EI
    ON (EE.ID_EQUIPO_INVESTIGACION = EI.ID_EQUIPO_INVESTIGACION) JOIN FUENTE_PROYECTO FP
    ON (EI.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE EE.ID_INFORME_AVANCE = P_ID_INFORME_AVANCE AND
          FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND
          FP.ID_PROYECTO = P_ID_PROYECTO;

    DBMS_OUTPUT.PUT_LINE('V_VALOR_EQUIPOS_FUENTE --> ' || V_VALOR_EQUIPOS_FUENTE);

    SELECT SUM(NVL(EP.COSTO, 0)) VALOR
    INTO V_VALOR_EVENTOS_FUENTE
    FROM EJECUCION_EVENTOS_PROYECTO EE JOIN EVENTO_PROYECTO EP
    ON (EE.ID_EVENTO_PROYECTO = EP.ID_EVENTO_PROYECTO) JOIN FUENTE_PROYECTO FP
    ON (EP.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE EE.ID_INFORME_AVANCE = P_ID_INFORME_AVANCE AND
          FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND
          FP.ID_PROYECTO = P_ID_PROYECTO;

    DBMS_OUTPUT.PUT_LINE('V_VALOR_EVENTOS_FUENTE --> ' || V_VALOR_EVENTOS_FUENTE);

    SELECT SUM(NVL(VP.COSTOS_PASAJES, 0) + NVL(VP.COSTOS_VIATICOS, 0)) VALOR
    INTO V_VALOR_VIAJES_FUENTE
    FROM EJECUCION_VIAJES_PROYECTO EV JOIN VIAJES_PROYECTO VP
    ON (EV.ID_VIAJE_PROYECTO = VP.ID_VIAJE_PROYECTO ) JOIN FUENTE_PROYECTO FP
    ON (VP.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE EV.ID_INFORME_AVANCE = P_ID_INFORME_AVANCE AND
          FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND
          FP.ID_PROYECTO = P_ID_PROYECTO;

    DBMS_OUTPUT.PUT_LINE('V_VALOR_VIAJES_FUENTE --> ' || V_VALOR_VIAJES_FUENTE);

    SELECT SUM(NVL(EO.VALOR_GASTADO_PERIODO, 0)) VALOR
    INTO V_VALOR_OTROS_GASTOS_FUENTE
    FROM EJECUCION_OTROS_GASTOS_PROY EO JOIN OTROS_GASTOS_PROYECTO OG
    ON (EO.ID_OTROS_GASTOS_PROYECTO = OG.ID_OTROS_GASTOS_PROYECTO ) JOIN FUENTE_PROYECTO FP
    ON (OG.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE EO.ID_INFORME_AVANCE = P_ID_INFORME_AVANCE AND
          FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND
          FP.ID_PROYECTO = P_ID_PROYECTO AND
          OG.ID_TIPO_RUBRO = 182; -- GASTOS ADMINISTRATIVOS

    DBMS_OUTPUT.PUT_LINE('V_VALOR_OTROS_GASTOS_FUENTE --> ' || V_VALOR_OTROS_GASTOS_FUENTE);

    SELECT SUM(NVL(EO.VALOR_GASTADO_PERIODO, 0)) VALOR
    INTO V_VALOR_OTROS_PUBLICA_FUENTE
    FROM EJECUCION_OTROS_GASTOS_PROY EO JOIN OTROS_GASTOS_PROYECTO OG
    ON (EO.ID_OTROS_GASTOS_PROYECTO = OG.ID_OTROS_GASTOS_PROYECTO ) JOIN FUENTE_PROYECTO FP
    ON (OG.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE EO.ID_INFORME_AVANCE = P_ID_INFORME_AVANCE AND
          FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND
          FP.ID_PROYECTO = P_ID_PROYECTO AND
          OG.ID_TIPO_RUBRO = 183; -- PUBLICACIONES

    DBMS_OUTPUT.PUT_LINE('V_VALOR_OTROS_PUBLICA_FUENTE --> ' || V_VALOR_OTROS_PUBLICA_FUENTE);

    SELECT SUM(NVL(EO.VALOR_GASTADO_PERIODO, 0)) VALOR
    INTO V_VALOR_OTROS_BIBLIO_FUENTE
    FROM EJECUCION_OTROS_GASTOS_PROY EO JOIN OTROS_GASTOS_PROYECTO OG
    ON (EO.ID_OTROS_GASTOS_PROYECTO = OG.ID_OTROS_GASTOS_PROYECTO ) JOIN FUENTE_PROYECTO FP
    ON (OG.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE EO.ID_INFORME_AVANCE = P_ID_INFORME_AVANCE AND
          FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND
          FP.ID_PROYECTO = P_ID_PROYECTO AND
          OG.ID_TIPO_RUBRO = 229; -- BIBLIOGRAFIA Y DOCUMENTACION

    DBMS_OUTPUT.PUT_LINE('V_VALOR_OTROS_BIBLIO_FUENTE --> ' || V_VALOR_OTROS_BIBLIO_FUENTE);


    IF I = 1 THEN

      REGISTRO_PROYECTO_PERSONAL.POLICIA_NAL_EJECUTA := V_VALOR_PERSONAL_FUENTE;
      REGISTRO_PROYECTO_EQUIPOS.POLICIA_NAL_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROYECTO_EVENTOS.POLICIA_NAL_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROYECTO_VIAJES.POLICIA_NAL_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTROS_GASTOS.POLICIA_NAL_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTROS_PUBLICA.POLICIA_NAL_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTROS_BIBLIO.POLICIA_NAL_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;

      REGISTRO_PROYECTO_PERSONAL.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 1, I);
      REGISTRO_PROYECTO_EQUIPOS.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 2, I);
      REGISTRO_PROYECTO_EVENTOS.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 3, I);
      REGISTRO_PROYECTO_VIAJES.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 4, I);
      REGISTRO_PROY_OTROS_GASTOS.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 5, I);
      REGISTRO_PROY_OTROS_PUBLICA.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 6, I);
      REGISTRO_PROY_OTROS_BIBLIO.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 7, I);

    ELSIF I = 2 THEN

      REGISTRO_PROYECTO_PERSONAL.VICIN_EJECUTA := V_VALOR_PERSONAL_FUENTE;
      REGISTRO_PROYECTO_EQUIPOS.VICIN_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROYECTO_EVENTOS.VICIN_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROYECTO_VIAJES.VICIN_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTROS_GASTOS.VICIN_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTROS_PUBLICA.VICIN_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTROS_BIBLIO.VICIN_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;

      REGISTRO_PROYECTO_PERSONAL.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 1, I);
      REGISTRO_PROYECTO_EQUIPOS.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 2, I);
      REGISTRO_PROYECTO_EVENTOS.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 3, I);
      REGISTRO_PROYECTO_VIAJES.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 4, I);
      REGISTRO_PROY_OTROS_GASTOS.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 5, I);
      REGISTRO_PROY_OTROS_PUBLICA.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 6, I);
      REGISTRO_PROY_OTROS_BIBLIO.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 7, I);


    ELSIF I = 3 THEN

      REGISTRO_PROYECTO_PERSONAL.UNIDAD_EJECUTA := V_VALOR_PERSONAL_FUENTE;
      REGISTRO_PROYECTO_EQUIPOS.UNIDAD_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROYECTO_EVENTOS.UNIDAD_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROYECTO_VIAJES.UNIDAD_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTROS_GASTOS.UNIDAD_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTROS_PUBLICA.UNIDAD_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTROS_BIBLIO.UNIDAD_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;

      REGISTRO_PROYECTO_PERSONAL.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 1, I);
      REGISTRO_PROYECTO_EQUIPOS.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 2, I);
      REGISTRO_PROYECTO_EVENTOS.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 3, I);
      REGISTRO_PROYECTO_VIAJES.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 4, I);
      REGISTRO_PROY_OTROS_GASTOS.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 5, I);
      REGISTRO_PROY_OTROS_PUBLICA.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 6, I);
      REGISTRO_PROY_OTROS_BIBLIO.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 7, I);

    ELSIF I = 4 THEN

      REGISTRO_PROYECTO_PERSONAL.FUENTE1_EJECUTA := V_VALOR_PERSONAL_FUENTE;
      REGISTRO_PROYECTO_EQUIPOS.FUENTE1_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROYECTO_EVENTOS.FUENTE1_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROYECTO_VIAJES.FUENTE1_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTROS_GASTOS.FUENTE1_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTROS_PUBLICA.FUENTE1_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTROS_BIBLIO.FUENTE1_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;

      REGISTRO_PROYECTO_PERSONAL.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 1, I);
      REGISTRO_PROYECTO_EQUIPOS.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 2, I);
      REGISTRO_PROYECTO_EVENTOS.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 3, I);
      REGISTRO_PROYECTO_VIAJES.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 4, I);
      REGISTRO_PROY_OTROS_GASTOS.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 5, I);
      REGISTRO_PROY_OTROS_PUBLICA.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 6, I);
      REGISTRO_PROY_OTROS_BIBLIO.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 7, I);

    ELSIF I = 5 THEN

      REGISTRO_PROYECTO_PERSONAL.FUENTE2_EJECUTA := V_VALOR_PERSONAL_FUENTE;
      REGISTRO_PROYECTO_EQUIPOS.FUENTE2_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROYECTO_EVENTOS.FUENTE2_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROYECTO_VIAJES.FUENTE2_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTROS_GASTOS.FUENTE2_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTROS_PUBLICA.FUENTE2_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTROS_BIBLIO.FUENTE2_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;

      REGISTRO_PROYECTO_PERSONAL.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 1, I);
      REGISTRO_PROYECTO_EQUIPOS.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 2, I);
      REGISTRO_PROYECTO_EVENTOS.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 3, I);
      REGISTRO_PROYECTO_VIAJES.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 4, I);
      REGISTRO_PROY_OTROS_GASTOS.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 5, I);
      REGISTRO_PROY_OTROS_PUBLICA.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 6, I);
      REGISTRO_PROY_OTROS_BIBLIO.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 7, I);

    ELSIF I = 6 THEN

      REGISTRO_PROYECTO_PERSONAL.FUENTE3_EJECUTA := V_VALOR_PERSONAL_FUENTE;
      REGISTRO_PROYECTO_EQUIPOS.FUENTE3_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROYECTO_EVENTOS.FUENTE3_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROYECTO_VIAJES.FUENTE3_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTROS_GASTOS.FUENTE3_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTROS_PUBLICA.FUENTE3_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTROS_BIBLIO.FUENTE3_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;

      REGISTRO_PROYECTO_PERSONAL.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 1, I);
      REGISTRO_PROYECTO_EQUIPOS.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 2, I);
      REGISTRO_PROYECTO_EVENTOS.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 3, I);
      REGISTRO_PROYECTO_VIAJES.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 4, I);
      REGISTRO_PROY_OTROS_GASTOS.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 5, I);
      REGISTRO_PROY_OTROS_PUBLICA.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 6, I);
      REGISTRO_PROY_OTROS_BIBLIO.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 7, I);

    ELSIF I = 7 THEN

      REGISTRO_PROYECTO_PERSONAL.FUENTE4_EJECUTA := V_VALOR_PERSONAL_FUENTE;
      REGISTRO_PROYECTO_EQUIPOS.FUENTE4_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROYECTO_EVENTOS.FUENTE4_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROYECTO_VIAJES.FUENTE4_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTROS_GASTOS.FUENTE4_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTROS_PUBLICA.FUENTE4_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTROS_BIBLIO.FUENTE4_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;

      REGISTRO_PROYECTO_PERSONAL.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 1, I);
      REGISTRO_PROYECTO_EQUIPOS.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 2, I);
      REGISTRO_PROYECTO_EVENTOS.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 3, I);
      REGISTRO_PROYECTO_VIAJES.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 4, I);
      REGISTRO_PROY_OTROS_GASTOS.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 5, I);
      REGISTRO_PROY_OTROS_PUBLICA.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 6, I);
      REGISTRO_PROY_OTROS_BIBLIO.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 7, I);

    END IF;

    I := I + 1;
  END LOOP;

  PRC_CREAR_REG_PRES_EJECUTA(REGISTRO_PROYECTO_PERSONAL);
  PRC_CREAR_REG_PRES_EJECUTA(REGISTRO_PROYECTO_EQUIPOS);
  PRC_CREAR_REG_PRES_EJECUTA(REGISTRO_PROYECTO_EVENTOS);
  PRC_CREAR_REG_PRES_EJECUTA(REGISTRO_PROYECTO_VIAJES);
  PRC_CREAR_REG_PRES_EJECUTA(REGISTRO_PROY_OTROS_GASTOS);
  PRC_CREAR_REG_PRES_EJECUTA(REGISTRO_PROY_OTROS_PUBLICA);
  PRC_CREAR_REG_PRES_EJECUTA(REGISTRO_PROY_OTROS_BIBLIO);
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    ROLLBACK;
END;

PROCEDURE PRC_CREAR_REG_PRES_EJECUTA (P_REGISTRO  RESUMEN_PRESUPUESTO_EJECUTADO%ROWTYPE) AS

BEGIN

  INSERT
  INTO RESUMEN_PRESUPUESTO_EJECUTADO
    (
      ID_RESUMEN_PRES_EJECUTA,
      ID_PROYECTO,
      ID_INFORME_AVANCE,
      NOMBRE_RUBRO,
      POLICIA_NAL_PPTO,
      POLICIA_NAL_EJECUTA,
      VICIN_PPTO,
      VICIN_EJECUTA,
      UNIDAD_PPTO,
      UNIDAD_EJECUTA,
      FUENTE1_PPTO,
      FUENTE1_EJECUTA,
      FUENTE2_PPTO,
      FUENTE2_EJECUTA,
      FUENTE3_PPTO,
      FUENTE3_EJECUTA,
      FUENTE4_PPTO,
      FUENTE4_EJECUTA,
      ORDEN,
      TIPO
    )
    VALUES
    (
      SEC_RESUMEN_PRESU_EJECUTA.NEXTVAL,
      P_REGISTRO.ID_PROYECTO,
      P_REGISTRO.ID_INFORME_AVANCE,
      P_REGISTRO.NOMBRE_RUBRO,
      NVL(P_REGISTRO.POLICIA_NAL_PPTO, 0),
      NVL(P_REGISTRO.POLICIA_NAL_EJECUTA, 0),
      NVL(P_REGISTRO.VICIN_PPTO, 0),
      NVL(P_REGISTRO.VICIN_EJECUTA, 0),
      NVL(P_REGISTRO.UNIDAD_PPTO, 0),
      NVL(P_REGISTRO.UNIDAD_EJECUTA, 0),
      NVL(P_REGISTRO.FUENTE1_PPTO, 0),
      NVL(P_REGISTRO.FUENTE1_EJECUTA, 0),
      NVL(P_REGISTRO.FUENTE2_PPTO, 0),
      NVL(P_REGISTRO.FUENTE2_EJECUTA, 0),
      NVL(P_REGISTRO.FUENTE3_PPTO, 0),
      NVL(P_REGISTRO.FUENTE3_EJECUTA, 0),
      NVL(P_REGISTRO.FUENTE4_PPTO, 0),
      NVL(P_REGISTRO.FUENTE4_EJECUTA, 0),
      P_REGISTRO.ORDEN,
      'I'
    );

    --COMMIT;

END;

FUNCTION FNC_TOMA_VALOR_PRESUPUESTADO (P_ID_PROYECTO NUMBER, P_ORDEN NUMBER, P_POS_FUENTE NUMBER) RETURN NUMBER AS

V_RETURN NUMBER;

BEGIN

  V_RETURN := 0;

  IF P_POS_FUENTE = 1 THEN -- POLICIA NACIONAL
      SELECT VALOR_PONAL
      INTO V_RETURN
      FROM (
        SELECT ORDEN, NOMBRE_RUBRO, SUM(NVL(POLICIA_NACIONAL_ESPECIE, 0) + NVL(POLICIA_NACIONAL_EFECTIVO, 0)) VALOR_PONAL,
        SUM(NVL(VICIN_ESPECIE, 0) + NVL(VICIN_EFECTIVO, 0)) VALOR_VICIN,
        SUM(NVL(UNIDAD_ESPECIE, 0) + NVL(UNIDAD_EFECTIVO, 0)) VALOR_UNIDAD,
        SUM(NVL(FUENTE1_ESPECIE, 0) + NVL(FUENTE1_EFECTIVO, 0)) VALOR_FUENTE1,
        SUM(NVL(FUENTE2_ESPECIE, 0) + NVL(FUENTE2_EFECTIVO, 0)) VALOR_FUENTE2,
        SUM(NVL(FUENTE3_ESPECIE, 0) + NVL(FUENTE3_EFECTIVO, 0)) VALOR_FUENTE3,
        SUM(NVL(FUENTE4_ESPECIE, 0) + NVL(FUENTE4_EFECTIVO, 0)) VALOR_FUENTE4
        FROM RESUMEN_PRESUPUESTO_PROYECTO
        WHERE ID_PROYECTO = P_ID_PROYECTO AND ESTADO = 'TEMPORAL'
        GROUP BY ORDEN, NOMBRE_RUBRO
        ORDER BY ORDEN
      )
      WHERE ORDEN = P_ORDEN;
  ELSIF P_POS_FUENTE = 2 THEN -- VICIN
      SELECT VALOR_VICIN
      INTO V_RETURN
      FROM (
        SELECT ORDEN, NOMBRE_RUBRO, SUM(NVL(POLICIA_NACIONAL_ESPECIE, 0) + NVL(POLICIA_NACIONAL_EFECTIVO, 0)) VALOR_PONAL,
        SUM(NVL(VICIN_ESPECIE, 0) + NVL(VICIN_EFECTIVO, 0)) VALOR_VICIN,
        SUM(NVL(UNIDAD_ESPECIE, 0) + NVL(UNIDAD_EFECTIVO, 0)) VALOR_UNIDAD,
        SUM(NVL(FUENTE1_ESPECIE, 0) + NVL(FUENTE1_EFECTIVO, 0)) VALOR_FUENTE1,
        SUM(NVL(FUENTE2_ESPECIE, 0) + NVL(FUENTE2_EFECTIVO, 0)) VALOR_FUENTE2,
        SUM(NVL(FUENTE3_ESPECIE, 0) + NVL(FUENTE3_EFECTIVO, 0)) VALOR_FUENTE3,
        SUM(NVL(FUENTE4_ESPECIE, 0) + NVL(FUENTE4_EFECTIVO, 0)) VALOR_FUENTE4
        FROM RESUMEN_PRESUPUESTO_PROYECTO
        WHERE ID_PROYECTO = P_ID_PROYECTO AND ESTADO = 'TEMPORAL'
        GROUP BY ORDEN, NOMBRE_RUBRO
        ORDER BY ORDEN
      )
      WHERE ORDEN = P_ORDEN;
  ELSIF P_POS_FUENTE = 3 THEN -- UNIDAD POLICIAL
      SELECT VALOR_UNIDAD
      INTO V_RETURN
      FROM (
        SELECT ORDEN, NOMBRE_RUBRO, SUM(NVL(POLICIA_NACIONAL_ESPECIE, 0) + NVL(POLICIA_NACIONAL_EFECTIVO, 0)) VALOR_PONAL,
        SUM(NVL(VICIN_ESPECIE, 0) + NVL(VICIN_EFECTIVO, 0)) VALOR_VICIN,
        SUM(NVL(UNIDAD_ESPECIE, 0) + NVL(UNIDAD_EFECTIVO, 0)) VALOR_UNIDAD,
        SUM(NVL(FUENTE1_ESPECIE, 0) + NVL(FUENTE1_EFECTIVO, 0)) VALOR_FUENTE1,
        SUM(NVL(FUENTE2_ESPECIE, 0) + NVL(FUENTE2_EFECTIVO, 0)) VALOR_FUENTE2,
        SUM(NVL(FUENTE3_ESPECIE, 0) + NVL(FUENTE3_EFECTIVO, 0)) VALOR_FUENTE3,
        SUM(NVL(FUENTE4_ESPECIE, 0) + NVL(FUENTE4_EFECTIVO, 0)) VALOR_FUENTE4
        FROM RESUMEN_PRESUPUESTO_PROYECTO
        WHERE ID_PROYECTO = P_ID_PROYECTO AND ESTADO = 'TEMPORAL'
        GROUP BY ORDEN, NOMBRE_RUBRO
        ORDER BY ORDEN
      )
      WHERE ORDEN = P_ORDEN;
  ELSIF P_POS_FUENTE = 4 THEN --FUENTE1
      SELECT VALOR_FUENTE1
      INTO V_RETURN
      FROM (
        SELECT ORDEN, NOMBRE_RUBRO, SUM(NVL(POLICIA_NACIONAL_ESPECIE, 0) + NVL(POLICIA_NACIONAL_EFECTIVO, 0)) VALOR_PONAL,
        SUM(NVL(VICIN_ESPECIE, 0) + NVL(VICIN_EFECTIVO, 0)) VALOR_VICIN,
        SUM(NVL(UNIDAD_ESPECIE, 0) + NVL(UNIDAD_EFECTIVO, 0)) VALOR_UNIDAD,
        SUM(NVL(FUENTE1_ESPECIE, 0) + NVL(FUENTE1_EFECTIVO, 0)) VALOR_FUENTE1,
        SUM(NVL(FUENTE2_ESPECIE, 0) + NVL(FUENTE2_EFECTIVO, 0)) VALOR_FUENTE2,
        SUM(NVL(FUENTE3_ESPECIE, 0) + NVL(FUENTE3_EFECTIVO, 0)) VALOR_FUENTE3,
        SUM(NVL(FUENTE4_ESPECIE, 0) + NVL(FUENTE4_EFECTIVO, 0)) VALOR_FUENTE4
        FROM RESUMEN_PRESUPUESTO_PROYECTO
        WHERE ID_PROYECTO = P_ID_PROYECTO AND ESTADO = 'TEMPORAL'
        GROUP BY ORDEN, NOMBRE_RUBRO
        ORDER BY ORDEN
      )
      WHERE ORDEN = P_ORDEN;
  ELSIF P_POS_FUENTE = 5 THEN -- FUENTE 2
      SELECT VALOR_FUENTE2
      INTO V_RETURN
      FROM (
        SELECT ORDEN, NOMBRE_RUBRO, SUM(NVL(POLICIA_NACIONAL_ESPECIE, 0) + NVL(POLICIA_NACIONAL_EFECTIVO, 0)) VALOR_PONAL,
        SUM(NVL(VICIN_ESPECIE, 0) + NVL(VICIN_EFECTIVO, 0)) VALOR_VICIN,
        SUM(NVL(UNIDAD_ESPECIE, 0) + NVL(UNIDAD_EFECTIVO, 0)) VALOR_UNIDAD,
        SUM(NVL(FUENTE1_ESPECIE, 0) + NVL(FUENTE1_EFECTIVO, 0)) VALOR_FUENTE1,
        SUM(NVL(FUENTE2_ESPECIE, 0) + NVL(FUENTE2_EFECTIVO, 0)) VALOR_FUENTE2,
        SUM(NVL(FUENTE3_ESPECIE, 0) + NVL(FUENTE3_EFECTIVO, 0)) VALOR_FUENTE3,
        SUM(NVL(FUENTE4_ESPECIE, 0) + NVL(FUENTE4_EFECTIVO, 0)) VALOR_FUENTE4
        FROM RESUMEN_PRESUPUESTO_PROYECTO
        WHERE ID_PROYECTO = P_ID_PROYECTO AND ESTADO = 'TEMPORAL'
        GROUP BY ORDEN, NOMBRE_RUBRO
        ORDER BY ORDEN
      )
      WHERE ORDEN = P_ORDEN;
  ELSIF P_POS_FUENTE = 6 THEN -- FUENTE 3
        SELECT VALOR_FUENTE3
      INTO V_RETURN
      FROM (
        SELECT ORDEN, NOMBRE_RUBRO, SUM(NVL(POLICIA_NACIONAL_ESPECIE, 0) + NVL(POLICIA_NACIONAL_EFECTIVO, 0)) VALOR_PONAL,
        SUM(NVL(VICIN_ESPECIE, 0) + NVL(VICIN_EFECTIVO, 0)) VALOR_VICIN,
        SUM(NVL(UNIDAD_ESPECIE, 0) + NVL(UNIDAD_EFECTIVO, 0)) VALOR_UNIDAD,
        SUM(NVL(FUENTE1_ESPECIE, 0) + NVL(FUENTE1_EFECTIVO, 0)) VALOR_FUENTE1,
        SUM(NVL(FUENTE2_ESPECIE, 0) + NVL(FUENTE2_EFECTIVO, 0)) VALOR_FUENTE2,
        SUM(NVL(FUENTE3_ESPECIE, 0) + NVL(FUENTE3_EFECTIVO, 0)) VALOR_FUENTE3,
        SUM(NVL(FUENTE4_ESPECIE, 0) + NVL(FUENTE4_EFECTIVO, 0)) VALOR_FUENTE4
        FROM RESUMEN_PRESUPUESTO_PROYECTO
        WHERE ID_PROYECTO = P_ID_PROYECTO AND ESTADO = 'TEMPORAL'
        GROUP BY ORDEN, NOMBRE_RUBRO
        ORDER BY ORDEN
      )
      WHERE ORDEN = P_ORDEN;
  ELSIF P_POS_FUENTE = 7 THEN -- FUENTE 4
      SELECT VALOR_FUENTE4
      INTO V_RETURN
      FROM (
        SELECT ORDEN, NOMBRE_RUBRO, SUM(NVL(POLICIA_NACIONAL_ESPECIE, 0) + NVL(POLICIA_NACIONAL_EFECTIVO, 0)) VALOR_PONAL,
        SUM(NVL(VICIN_ESPECIE, 0) + NVL(VICIN_EFECTIVO, 0)) VALOR_VICIN,
        SUM(NVL(UNIDAD_ESPECIE, 0) + NVL(UNIDAD_EFECTIVO, 0)) VALOR_UNIDAD,
        SUM(NVL(FUENTE1_ESPECIE, 0) + NVL(FUENTE1_EFECTIVO, 0)) VALOR_FUENTE1,
        SUM(NVL(FUENTE2_ESPECIE, 0) + NVL(FUENTE2_EFECTIVO, 0)) VALOR_FUENTE2,
        SUM(NVL(FUENTE3_ESPECIE, 0) + NVL(FUENTE3_EFECTIVO, 0)) VALOR_FUENTE3,
        SUM(NVL(FUENTE4_ESPECIE, 0) + NVL(FUENTE4_EFECTIVO, 0)) VALOR_FUENTE4
        FROM RESUMEN_PRESUPUESTO_PROYECTO
        WHERE ID_PROYECTO = P_ID_PROYECTO AND ESTADO = 'TEMPORAL'
        GROUP BY ORDEN, NOMBRE_RUBRO
        ORDER BY ORDEN
      )
      WHERE ORDEN = P_ORDEN;
  END IF;
RETURN V_RETURN;
END;


/*
  =========================================== FIN CALCULO PRESUPUESTO EJECUTADO =====================================================

 */
/*
  =========================================== INICIO CALCULO PRESUPUESTO ACUMULADO ==================================================

 */

PROCEDURE PRC_CALCULAR_PRES_ACUM (P_ID_PROYECTO NUMBER) AS

V_VALOR_PERSONAL_FUENTE NUMBER;
V_VALOR_EQUIPOS_FUENTE NUMBER;
V_VALOR_EVENTOS_FUENTE NUMBER;
V_VALOR_VIAJES_FUENTE NUMBER;
V_VALOR_OTROS_GASTOS_FUENTE NUMBER;
V_VALOR_OTROS_PUBLICA_FUENTE NUMBER;
V_VALOR_OTROS_BIBLIO_FUENTE NUMBER;
I NUMBER;
V_TEXTO_GASTOS VARCHAR2(50);
V_TEXTO_PUBLICA VARCHAR2(50);
V_TEXTO_BIBLIO VARCHAR2(50);

V_POLICIA_PRESUPUESTADO NUMBER;
V_VICIN_PRESUPUESTADO NUMBER;
V_UNIDAD_PRESUPUESTADO NUMBER;
V_FUENTE1_PRESUPUESTADO NUMBER;
V_FUENTE2_PRESUPUESTADO NUMBER;
V_FUENTE3_PRESUPUESTADO NUMBER;
V_FUENTE4_PRESUPUESTADO NUMBER;

BEGIN

  I := 1;

  DELETE RESUMEN_PRESUPUESTO_EJECUTADO WHERE ID_PROYECTO = P_ID_PROYECTO AND TIPO = 'A' AND ID_INFORME_AVANCE IS NULL;
  --COMMIT;

  SELECT VALOR
  INTO V_TEXTO_GASTOS
  FROM CONSTANTES
  WHERE ID_CONSTANTES = 182;

  SELECT VALOR
  INTO V_TEXTO_PUBLICA
  FROM CONSTANTES
  WHERE ID_CONSTANTES = 183;

  SELECT VALOR
  INTO V_TEXTO_BIBLIO
  FROM CONSTANTES
  WHERE ID_CONSTANTES = 229;

  REGISTRO_PROY_PERSONAL_ACUM.ID_PROYECTO := P_ID_PROYECTO;
  REGISTRO_PROY_PERSONAL_ACUM.NOMBRE_RUBRO := 'PERSONAL';
  REGISTRO_PROY_PERSONAL_ACUM.ORDEN := 1;

  REGISTRO_PROY_EQUIPOS_ACUM.ID_PROYECTO := P_ID_PROYECTO;
  REGISTRO_PROY_EQUIPOS_ACUM.NOMBRE_RUBRO := 'EQUIPOS Y SOFTWARE';
  REGISTRO_PROY_EQUIPOS_ACUM.ORDEN := 2;

  REGISTRO_PROY_EVENTOS_ACUM.ID_PROYECTO := P_ID_PROYECTO;
  REGISTRO_PROY_EVENTOS_ACUM.NOMBRE_RUBRO := 'EVENTOS';
  REGISTRO_PROY_EVENTOS_ACUM.ORDEN := 3;

  REGISTRO_PROY_VIAJES_ACUM.ID_PROYECTO := P_ID_PROYECTO;
  REGISTRO_PROY_VIAJES_ACUM.NOMBRE_RUBRO := 'VIAJES';
  REGISTRO_PROY_VIAJES_ACUM.ORDEN := 4;

  REGISTRO_PROY_OTR_GASTOS_ACUM.ID_PROYECTO := P_ID_PROYECTO;
  REGISTRO_PROY_OTR_GASTOS_ACUM.NOMBRE_RUBRO := V_TEXTO_GASTOS;
  REGISTRO_PROY_OTR_GASTOS_ACUM.ORDEN := 5;

  REGISTRO_PROY_OTR_PUBLICA_ACUM.ID_PROYECTO := P_ID_PROYECTO;
  REGISTRO_PROY_OTR_PUBLICA_ACUM.NOMBRE_RUBRO := V_TEXTO_PUBLICA;
  REGISTRO_PROY_OTR_PUBLICA_ACUM.ORDEN := 6;

  REGISTRO_PROY_OTR_BIBLIO_ACUM.ID_PROYECTO := P_ID_PROYECTO;
  REGISTRO_PROY_OTR_BIBLIO_ACUM.NOMBRE_RUBRO := V_TEXTO_BIBLIO;
  REGISTRO_PROY_OTR_BIBLIO_ACUM.ORDEN := 7;


  FOR J IN C_FUENTES_PROYECTO_ACUM(P_ID_PROYECTO) LOOP

    V_VALOR_PERSONAL_FUENTE := NULL;
    V_VALOR_EQUIPOS_FUENTE := NULL;
    V_VALOR_EVENTOS_FUENTE := NULL;
    V_VALOR_VIAJES_FUENTE := NULL;
    V_VALOR_OTROS_GASTOS_FUENTE := NULL;
    V_VALOR_OTROS_PUBLICA_FUENTE := NULL;
    V_VALOR_OTROS_BIBLIO_FUENTE := NULL;

    DBMS_OUTPUT.PUT_LINE('FUENTE --> ' || J.NOMBRE_FUENTE);

    SELECT SUM(NVL(IP.VALOR_HORA, 0) * NVL(HI.HORAS_INVESTIGA_TRAB_PERI, 0)) VALOR
    INTO V_VALOR_PERSONAL_FUENTE
    FROM INVESTIGADORES_PROYECTO IP JOIN HORAS_INVESTIGADOR HI
    ON (IP.ID_INVESTIGADOR_PROYECTO = HI.ID_INVESTIGADOR_PROYECTO) JOIN INFORME_AVANCE IA
    ON (IA.ID_COMPROMISO_PROYECTO = HI.ID_COMPROMISO_PROYECTO) JOIN FUENTE_PROYECTO FP
    ON (IP.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE IP.ID_PROYECTO = P_ID_PROYECTO AND
          FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND HI.CORRECION = 'N';

    DBMS_OUTPUT.PUT_LINE('V_VALOR_PERSONAL_FUENTE --> ' || V_VALOR_PERSONAL_FUENTE);

    SELECT SUM(NVL(EI.VALOR, 0)) VALOR
    INTO V_VALOR_EQUIPOS_FUENTE
    FROM EJECUCION_EQUIPOS_PROYECTO EE JOIN EQUIPOS_INVESTIGACION EI
    ON (EE.ID_EQUIPO_INVESTIGACION = EI.ID_EQUIPO_INVESTIGACION) JOIN FUENTE_PROYECTO FP
    ON (EI.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND
          FP.ID_PROYECTO = P_ID_PROYECTO AND EE.CORRECION = 'N';

    DBMS_OUTPUT.PUT_LINE('V_VALOR_EQUIPOS_FUENTE --> ' || V_VALOR_EQUIPOS_FUENTE);

    SELECT SUM(NVL(EP.COSTO, 0)) VALOR
    INTO V_VALOR_EVENTOS_FUENTE
    FROM EJECUCION_EVENTOS_PROYECTO EE JOIN EVENTO_PROYECTO EP
    ON (EE.ID_EVENTO_PROYECTO = EP.ID_EVENTO_PROYECTO) JOIN FUENTE_PROYECTO FP
    ON (EP.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND
          FP.ID_PROYECTO = P_ID_PROYECTO AND EE.CORRECION = 'N';

    DBMS_OUTPUT.PUT_LINE('V_VALOR_EVENTOS_FUENTE --> ' || V_VALOR_EVENTOS_FUENTE);

    SELECT SUM(NVL(VP.COSTOS_PASAJES, 0) + NVL(VP.COSTOS_VIATICOS, 0)) VALOR
    INTO V_VALOR_VIAJES_FUENTE
    FROM EJECUCION_VIAJES_PROYECTO EV JOIN VIAJES_PROYECTO VP
    ON (EV.ID_VIAJE_PROYECTO = VP.ID_VIAJE_PROYECTO ) JOIN FUENTE_PROYECTO FP
    ON (VP.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND
          FP.ID_PROYECTO = P_ID_PROYECTO AND EV.CORRECION = 'N';

    DBMS_OUTPUT.PUT_LINE('V_VALOR_VIAJES_FUENTE --> ' || V_VALOR_VIAJES_FUENTE);

    SELECT SUM(NVL(EO.VALOR_GASTADO_PERIODO, 0)) VALOR
    INTO V_VALOR_OTROS_GASTOS_FUENTE
    FROM EJECUCION_OTROS_GASTOS_PROY EO JOIN OTROS_GASTOS_PROYECTO OG
    ON (EO.ID_OTROS_GASTOS_PROYECTO = OG.ID_OTROS_GASTOS_PROYECTO ) JOIN FUENTE_PROYECTO FP
    ON (OG.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND
          FP.ID_PROYECTO = P_ID_PROYECTO AND
          OG.ID_TIPO_RUBRO = 182 AND EO.CORRECION = 'N'; -- GASTOS ADMINISTRATIVOS

    DBMS_OUTPUT.PUT_LINE('V_VALOR_OTROS_GASTOS_FUENTE --> ' || V_VALOR_OTROS_GASTOS_FUENTE);

    SELECT SUM(NVL(EO.VALOR_GASTADO_PERIODO, 0)) VALOR
    INTO V_VALOR_OTROS_PUBLICA_FUENTE
    FROM EJECUCION_OTROS_GASTOS_PROY EO JOIN OTROS_GASTOS_PROYECTO OG
    ON (EO.ID_OTROS_GASTOS_PROYECTO = OG.ID_OTROS_GASTOS_PROYECTO ) JOIN FUENTE_PROYECTO FP
    ON (OG.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND
          FP.ID_PROYECTO = P_ID_PROYECTO AND
          OG.ID_TIPO_RUBRO = 183 AND EO.CORRECION = 'N'; -- PUBLICACIONES

    DBMS_OUTPUT.PUT_LINE('V_VALOR_OTROS_PUBLICA_FUENTE --> ' || V_VALOR_OTROS_PUBLICA_FUENTE);

    SELECT SUM(NVL(EO.VALOR_GASTADO_PERIODO, 0)) VALOR
    INTO V_VALOR_OTROS_BIBLIO_FUENTE
    FROM EJECUCION_OTROS_GASTOS_PROY EO JOIN OTROS_GASTOS_PROYECTO OG
    ON (EO.ID_OTROS_GASTOS_PROYECTO = OG.ID_OTROS_GASTOS_PROYECTO ) JOIN FUENTE_PROYECTO FP
    ON (OG.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND
          FP.ID_PROYECTO = P_ID_PROYECTO AND
          OG.ID_TIPO_RUBRO = 229 AND EO.CORRECION = 'N'; -- BIBLIOGRAFIA Y DOCUMENTACION

    DBMS_OUTPUT.PUT_LINE('V_VALOR_OTROS_BIBLIO_FUENTE --> ' || V_VALOR_OTROS_BIBLIO_FUENTE);


    IF I = 1 THEN

      REGISTRO_PROY_PERSONAL_ACUM.POLICIA_NAL_EJECUTA := V_VALOR_PERSONAL_FUENTE;
      REGISTRO_PROY_EQUIPOS_ACUM.POLICIA_NAL_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROY_EVENTOS_ACUM.POLICIA_NAL_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROY_VIAJES_ACUM.POLICIA_NAL_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTR_GASTOS_ACUM.POLICIA_NAL_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTR_PUBLICA_ACUM.POLICIA_NAL_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTR_BIBLIO_ACUM.POLICIA_NAL_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;

      REGISTRO_PROY_PERSONAL_ACUM.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 1, I);
      REGISTRO_PROY_EQUIPOS_ACUM.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 2, I);
      REGISTRO_PROY_EVENTOS_ACUM.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 3, I);
      REGISTRO_PROY_VIAJES_ACUM.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 4, I);
      REGISTRO_PROY_OTR_GASTOS_ACUM.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 5, I);
      REGISTRO_PROY_OTR_PUBLICA_ACUM.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 6, I);
      REGISTRO_PROY_OTR_BIBLIO_ACUM.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 7, I);

    ELSIF I = 2 THEN

      REGISTRO_PROY_PERSONAL_ACUM.VICIN_EJECUTA := V_VALOR_PERSONAL_FUENTE;
      REGISTRO_PROY_EQUIPOS_ACUM.VICIN_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROY_EVENTOS_ACUM.VICIN_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROY_VIAJES_ACUM.VICIN_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTR_GASTOS_ACUM.VICIN_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTR_PUBLICA_ACUM.VICIN_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTR_BIBLIO_ACUM.VICIN_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;

      REGISTRO_PROY_PERSONAL_ACUM.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 1, I);
      REGISTRO_PROY_EQUIPOS_ACUM.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 2, I);
      REGISTRO_PROY_EVENTOS_ACUM.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 3, I);
      REGISTRO_PROY_VIAJES_ACUM.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 4, I);
      REGISTRO_PROY_OTR_GASTOS_ACUM.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 5, I);
      REGISTRO_PROY_OTR_PUBLICA_ACUM.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 6, I);
      REGISTRO_PROY_OTR_BIBLIO_ACUM.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 7, I);


    ELSIF I = 3 THEN

      REGISTRO_PROY_PERSONAL_ACUM.UNIDAD_EJECUTA := V_VALOR_PERSONAL_FUENTE;
      REGISTRO_PROY_EQUIPOS_ACUM.UNIDAD_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROY_EVENTOS_ACUM.UNIDAD_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROY_VIAJES_ACUM.UNIDAD_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTR_GASTOS_ACUM.UNIDAD_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTR_PUBLICA_ACUM.UNIDAD_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTR_BIBLIO_ACUM.UNIDAD_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;

      REGISTRO_PROY_PERSONAL_ACUM.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 1, I);
      REGISTRO_PROY_EQUIPOS_ACUM.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 2, I);
      REGISTRO_PROY_EVENTOS_ACUM.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 3, I);
      REGISTRO_PROY_VIAJES_ACUM.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 4, I);
      REGISTRO_PROY_OTR_GASTOS_ACUM.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 5, I);
      REGISTRO_PROY_OTR_PUBLICA_ACUM.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 6, I);
      REGISTRO_PROY_OTR_BIBLIO_ACUM.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 7, I);

    ELSIF I = 4 THEN

      REGISTRO_PROY_PERSONAL_ACUM.FUENTE1_EJECUTA := V_VALOR_PERSONAL_FUENTE;
      REGISTRO_PROY_EQUIPOS_ACUM.FUENTE1_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROY_EVENTOS_ACUM.FUENTE1_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROY_VIAJES_ACUM.FUENTE1_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTR_GASTOS_ACUM.FUENTE1_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTR_PUBLICA_ACUM.FUENTE1_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTR_BIBLIO_ACUM.FUENTE1_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;

      REGISTRO_PROY_PERSONAL_ACUM.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 1, I);
      REGISTRO_PROY_EQUIPOS_ACUM.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 2, I);
      REGISTRO_PROY_EVENTOS_ACUM.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 3, I);
      REGISTRO_PROY_VIAJES_ACUM.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 4, I);
      REGISTRO_PROY_OTR_GASTOS_ACUM.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 5, I);
      REGISTRO_PROY_OTR_PUBLICA_ACUM.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 6, I);
      REGISTRO_PROY_OTR_BIBLIO_ACUM.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 7, I);

    ELSIF I = 5 THEN

      REGISTRO_PROY_PERSONAL_ACUM.FUENTE2_EJECUTA := V_VALOR_PERSONAL_FUENTE;
      REGISTRO_PROY_EQUIPOS_ACUM.FUENTE2_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROY_EVENTOS_ACUM.FUENTE2_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROY_VIAJES_ACUM.FUENTE2_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTR_GASTOS_ACUM.FUENTE2_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTR_PUBLICA_ACUM.FUENTE2_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTR_BIBLIO_ACUM.FUENTE2_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;

      REGISTRO_PROY_PERSONAL_ACUM.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 1, I);
      REGISTRO_PROY_EQUIPOS_ACUM.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 2, I);
      REGISTRO_PROY_EVENTOS_ACUM.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 3, I);
      REGISTRO_PROY_VIAJES_ACUM.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 4, I);
      REGISTRO_PROY_OTR_GASTOS_ACUM.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 5, I);
      REGISTRO_PROY_OTR_PUBLICA_ACUM.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 6, I);
      REGISTRO_PROY_OTR_BIBLIO_ACUM.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 7, I);

    ELSIF I = 6 THEN

      REGISTRO_PROY_PERSONAL_ACUM.FUENTE3_EJECUTA := V_VALOR_PERSONAL_FUENTE;
      REGISTRO_PROY_EQUIPOS_ACUM.FUENTE3_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROY_EVENTOS_ACUM.FUENTE3_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROY_VIAJES_ACUM.FUENTE3_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTR_GASTOS_ACUM.FUENTE3_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTR_PUBLICA_ACUM.FUENTE3_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTR_BIBLIO_ACUM.FUENTE3_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;

      REGISTRO_PROY_PERSONAL_ACUM.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 1, I);
      REGISTRO_PROY_EQUIPOS_ACUM.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 2, I);
      REGISTRO_PROY_EVENTOS_ACUM.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 3, I);
      REGISTRO_PROY_VIAJES_ACUM.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 4, I);
      REGISTRO_PROY_OTR_GASTOS_ACUM.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 5, I);
      REGISTRO_PROY_OTR_PUBLICA_ACUM.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 6, I);
      REGISTRO_PROY_OTR_BIBLIO_ACUM.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 7, I);

    ELSIF I = 7 THEN

      REGISTRO_PROY_PERSONAL_ACUM.FUENTE4_EJECUTA := V_VALOR_PERSONAL_FUENTE;
      REGISTRO_PROY_EQUIPOS_ACUM.FUENTE4_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROY_EVENTOS_ACUM.FUENTE4_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROY_VIAJES_ACUM.FUENTE4_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTR_GASTOS_ACUM.FUENTE4_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTR_PUBLICA_ACUM.FUENTE4_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTR_BIBLIO_ACUM.FUENTE4_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;

      REGISTRO_PROY_PERSONAL_ACUM.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 1, I);
      REGISTRO_PROY_EQUIPOS_ACUM.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 2, I);
      REGISTRO_PROY_EVENTOS_ACUM.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 3, I);
      REGISTRO_PROY_VIAJES_ACUM.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 4, I);
      REGISTRO_PROY_OTR_GASTOS_ACUM.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 5, I);
      REGISTRO_PROY_OTR_PUBLICA_ACUM.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 6, I);
      REGISTRO_PROY_OTR_BIBLIO_ACUM.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_PROYECTO, 7, I);

    END IF;

    I := I + 1;
  END LOOP;

  PRC_CREAR_REG_PRES_ACUM(REGISTRO_PROY_PERSONAL_ACUM);
  PRC_CREAR_REG_PRES_ACUM(REGISTRO_PROY_EQUIPOS_ACUM);
  PRC_CREAR_REG_PRES_ACUM(REGISTRO_PROY_EVENTOS_ACUM);
  PRC_CREAR_REG_PRES_ACUM(REGISTRO_PROY_VIAJES_ACUM);
  PRC_CREAR_REG_PRES_ACUM(REGISTRO_PROY_OTR_GASTOS_ACUM);
  PRC_CREAR_REG_PRES_ACUM(REGISTRO_PROY_OTR_PUBLICA_ACUM);
  PRC_CREAR_REG_PRES_ACUM(REGISTRO_PROY_OTR_BIBLIO_ACUM);

EXCEPTION WHEN NO_DATA_FOUND THEN
  ROLLBACK;
END;

PROCEDURE PRC_CREAR_REG_PRES_ACUM (P_REGISTRO  RESUMEN_PRESUPUESTO_EJECUTADO%ROWTYPE) AS

BEGIN

  INSERT
  INTO RESUMEN_PRESUPUESTO_EJECUTADO
    (
      ID_RESUMEN_PRES_EJECUTA,
      ID_PROYECTO,
      NOMBRE_RUBRO,
      POLICIA_NAL_PPTO,
      POLICIA_NAL_EJECUTA,
      VICIN_PPTO,
      VICIN_EJECUTA,
      UNIDAD_PPTO,
      UNIDAD_EJECUTA,
      FUENTE1_PPTO,
      FUENTE1_EJECUTA,
      FUENTE2_PPTO,
      FUENTE2_EJECUTA,
      FUENTE3_PPTO,
      FUENTE3_EJECUTA,
      FUENTE4_PPTO,
      FUENTE4_EJECUTA,
      ORDEN,
      TIPO
    )
    VALUES
    (
      SEC_RESUMEN_PRESU_EJECUTA.NEXTVAL,
      P_REGISTRO.ID_PROYECTO,
      P_REGISTRO.NOMBRE_RUBRO,
      NVL(P_REGISTRO.POLICIA_NAL_PPTO, 0),
      NVL(P_REGISTRO.POLICIA_NAL_EJECUTA, 0),
      NVL(P_REGISTRO.VICIN_PPTO, 0),
      NVL(P_REGISTRO.VICIN_EJECUTA, 0),
      NVL(P_REGISTRO.UNIDAD_PPTO, 0),
      NVL(P_REGISTRO.UNIDAD_EJECUTA, 0),
      NVL(P_REGISTRO.FUENTE1_PPTO, 0),
      NVL(P_REGISTRO.FUENTE1_EJECUTA, 0),
      NVL(P_REGISTRO.FUENTE2_PPTO, 0),
      NVL(P_REGISTRO.FUENTE2_EJECUTA, 0),
      NVL(P_REGISTRO.FUENTE3_PPTO, 0),
      NVL(P_REGISTRO.FUENTE3_EJECUTA, 0),
      NVL(P_REGISTRO.FUENTE4_PPTO, 0),
      NVL(P_REGISTRO.FUENTE4_EJECUTA, 0),
      P_REGISTRO.ORDEN,
      'A'
    );

    --COMMIT;

END;

/*
  =========================================== FIN CALCULO PRESUPUESTO ACUMULADO =====================================================

 */

END PKG_CALCULO_PRESUPUESTO;
-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------

create or replace
PACKAGE "PKG_CALCULO_PRESUPUESTO_IMPL" AS   
  
CURSOR c_presupuesto_personal (P_ID_PLAN_TRABAJO NUMBER) is
 SELECT NVL(SUM(VALOR_EFECTIVO),0) VALOR_EFECTIVO,
    NVL(SUM(VALOR_ESPECIE),0) VALOR_ESPECIE,
    FUENTE_PROYECTO.NOMBRE_FUENTE, 
    FUENTE_PROYECTO.ID_FUENTE_PROYECTO,
    FUENTE_PROYECTO.FUENTE_BASE, 
    DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y') AS ES_FUENTE_INTERNA
    FROM INVESTIGADORES_PROYECTO,FUENTE_PROYECTO, PLAN_TRABAJO_IMPLEMENTACION 
    WHERE FUENTE_PROYECTO.ID_PLAN_TRABAJO = PLAN_TRABAJO_IMPLEMENTACION.ID_PLAN_TRABAJO
    AND INVESTIGADORES_PROYECTO.ID_FUENTE_PROYECTO = FUENTE_PROYECTO.ID_FUENTE_PROYECTO
    AND PLAN_TRABAJO_IMPLEMENTACION.ID_PLAN_TRABAJO = P_ID_PLAN_TRABAJO
    GROUP BY FUENTE_PROYECTO.NOMBRE_FUENTE,FUENTE_PROYECTO.ID_FUENTE_PROYECTO,FUENTE_PROYECTO.FUENTE_BASE, DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y')
    ORDER BY  FUENTE_PROYECTO.ID_FUENTE_PROYECTO;
    
CURSOR c_presupuesto_equipos (P_ID_PLAN_TRABAJO NUMBER) is
 SELECT NVL(SUM(VALOR),0) VALOR_EF,
    NVL(SUM(DECODE(ID_ORIGEN,120,VALOR,0)),0) VALOR_ESPECIE,
    NVL(SUM(DECODE(ID_ORIGEN,121,VALOR,122,VALOR,0)),0) VALOR_EFECTIVO,
    FUENTE_PROYECTO.NOMBRE_FUENTE, 
    FUENTE_PROYECTO.ID_FUENTE_PROYECTO,
    FUENTE_PROYECTO.FUENTE_BASE,
    DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y') AS ES_FUENTE_INTERNA
    FROM 
    EQUIPOS_INVESTIGACION,
    FUENTE_PROYECTO
    WHERE 
    FUENTE_PROYECTO.ID_PLAN_TRABAJO = P_ID_PLAN_TRABAJO
    AND EQUIPOS_INVESTIGACION.ID_FUENTE_PROYECTO = FUENTE_PROYECTO.ID_FUENTE_PROYECTO
    GROUP BY FUENTE_PROYECTO.NOMBRE_FUENTE,FUENTE_PROYECTO.ID_FUENTE_PROYECTO,FUENTE_PROYECTO.FUENTE_BASE, DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y')
    ORDER BY  FUENTE_PROYECTO.ID_FUENTE_PROYECTO;   
    
CURSOR c_presupuesto_eventos (P_ID_PLAN_TRABAJO NUMBER) is
 SELECT NVL(SUM(COSTO),0) VALOR_EFECTIVO,
    FUENTE_PROYECTO.NOMBRE_FUENTE, 
    FUENTE_PROYECTO.ID_FUENTE_PROYECTO,
    FUENTE_PROYECTO.FUENTE_BASE,
    DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y') AS ES_FUENTE_INTERNA
    FROM EVENTO_PROYECTO,FUENTE_PROYECTO
    WHERE FUENTE_PROYECTO.ID_PLAN_TRABAJO = P_ID_PLAN_TRABAJO
    AND FUENTE_PROYECTO.ID_FUENTE_PROYECTO = EVENTO_PROYECTO.ID_FUENTE_PROYECTO
    GROUP BY FUENTE_PROYECTO.NOMBRE_FUENTE,FUENTE_PROYECTO.ID_FUENTE_PROYECTO,FUENTE_PROYECTO.FUENTE_BASE, DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y')
    ORDER BY  FUENTE_PROYECTO.ID_FUENTE_PROYECTO; 
    
    
    CURSOR c_presupuesto_viajes (P_ID_PLAN_TRABAJO NUMBER) is
 SELECT NVL(SUM(COSTOS_PASAJES),0)+ NVL(SUM(COSTOS_VIATICOS),0)  VALOR_EFECTIVO,
    FUENTE_PROYECTO.NOMBRE_FUENTE, 
    FUENTE_PROYECTO.ID_FUENTE_PROYECTO,
    FUENTE_PROYECTO.FUENTE_BASE,
    DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y') AS ES_FUENTE_INTERNA
    FROM VIAJES_PROYECTO,FUENTE_PROYECTO
    WHERE FUENTE_PROYECTO.ID_PLAN_TRABAJO = P_ID_PLAN_TRABAJO
    AND FUENTE_PROYECTO.ID_FUENTE_PROYECTO = VIAJES_PROYECTO.ID_FUENTE_PROYECTO
    GROUP BY FUENTE_PROYECTO.NOMBRE_FUENTE,FUENTE_PROYECTO.ID_FUENTE_PROYECTO,FUENTE_PROYECTO.FUENTE_BASE, DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y')
    ORDER BY  FUENTE_PROYECTO.ID_FUENTE_PROYECTO; 
    
        CURSOR c_otros_gastos (P_ID_PLAN_TRABAJO NUMBER) is
 SELECT NVL(SUM(DECODE(ESPECIE_EFECTIVO.codigo,'Especie',otros_gastos_proyecto.VALOR,0)),0) VALOR_ESPECIE,
        NVL(SUM(DECODE(ESPECIE_EFECTIVO.codigo,'Efectivo',otros_gastos_proyecto.VALOR,0)),0) VALOR_EFECTIVO,
    FUENTE_PROYECTO.NOMBRE_FUENTE, 
    FUENTE_PROYECTO.ID_FUENTE_PROYECTO,
    FUENTE_PROYECTO.FUENTE_BASE,
    DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y') AS ES_FUENTE_INTERNA,
    TIPO_GASTO.codigo
    FROM otros_gastos_proyecto,
        FUENTE_PROYECTO,
        CONSTANTES TIPO_GASTO,
        CONSTANTES ESPECIE_EFECTIVO
    WHERE FUENTE_PROYECTO.ID_PLAN_TRABAJO = P_ID_PLAN_TRABAJO
    AND FUENTE_PROYECTO.ID_FUENTE_PROYECTO = otros_gastos_proyecto.ID_FUENTE_PROYECTO
   AND OTROS_GASTOS_PROYECTO.ID_TIPO_RUBRO = TIPO_GASTO.ID_CONSTANTES
    AND ESPECIE_EFECTIVO.ID_CONSTANTES = OTROS_GASTOS_PROYECTO.ID_TIPO_ESPECIE_EFECTIVO
    AND ESPECIE_EFECTIVO.TIPO = 'OTROS_GASTOS_TIPO'
    AND TIPO_GASTO.TIPO = 'OTROS_GASTOS_RUBROS'
    GROUP BY FUENTE_PROYECTO.NOMBRE_FUENTE,FUENTE_PROYECTO.ID_FUENTE_PROYECTO,FUENTE_PROYECTO.FUENTE_BASE,DECODE(FUENTE_PROYECTO.ID_TIPO_FUENTE, 115, 'N', 'Y'), TIPO_GASTO.codigo
    ORDER BY  FUENTE_PROYECTO.ID_FUENTE_PROYECTO; 
    
    CURSOR c_tipo_otros_gastos (P_ID_PLAN_TRABAJO NUMBER)
    IS
       SELECT distinct TIPO_GASTO.codigo, TIPO_GASTO.ID_CONSTANTES ID_TIPO_GASTO
    FROM otros_gastos_proyecto,
        FUENTE_PROYECTO,
        CONSTANTES TIPO_GASTO,
        CONSTANTES ESPECIE_EFECTIVO
    WHERE FUENTE_PROYECTO.ID_PLAN_TRABAJO = P_ID_PLAN_TRABAJO
    AND FUENTE_PROYECTO.ID_FUENTE_PROYECTO = otros_gastos_proyecto.ID_FUENTE_PROYECTO
   AND OTROS_GASTOS_PROYECTO.ID_TIPO_RUBRO = TIPO_GASTO.ID_CONSTANTES
    AND ESPECIE_EFECTIVO.ID_CONSTANTES = OTROS_GASTOS_PROYECTO.ID_TIPO_ESPECIE_EFECTIVO
    AND ESPECIE_EFECTIVO.TIPO = 'OTROS_GASTOS_TIPO'
    AND TIPO_GASTO.TIPO = 'OTROS_GASTOS_RUBROS';
 
    
    CURSOR c_otras_fuentes_proyecto (P_ID_PLAN_TRABAJO NUMBER)IS
    SELECT id_fuente_proyecto, nombre_fuente
    FROM fuente_proyecto
    WHERE ID_PLAN_TRABAJO = P_ID_PLAN_TRABAJO
    AND fuente_base = 'N'
    ORDER BY id_fuente_proyecto;
    
   TYPE arreglo_fuentes_type IS VARRAY(4) OF number;
       v_arreglo_fuentes arreglo_fuentes_type := arreglo_fuentes_type();
       
       
    PROCEDURE PRC_CREAR_ACTUALIZA_PRES_PERS (p_id_plan_trabajo NUMBER, p_id_implementacion_proy NUMBER);
    PROCEDURE PRC_CREAR_ACTUALIZA_PRES_EQUIP (p_id_plan_trabajo NUMBER, p_id_implementacion_proy NUMBER);
    PROCEDURE PRC_CREAR_ACTUALIZA_PRES (p_id_plan_trabajo NUMBER, p_id_implementacion_proy NUMBER);
    
    CONST_FUENTE_POLICIA VARCHAR2(100);
    CONST_FUENTE_VICIN VARCHAR2(100);
    
 
  CURSOR C_FUENTES_PROYECTO (P_ID_PLAN_TRABAJO NUMBER) IS
  SELECT FP.ID_FUENTE_PROYECTO, FP.NOMBRE_FUENTE, FP.FUENTE_BASE
  FROM FUENTE_PROYECTO FP
  WHERE FP.ID_PLAN_TRABAJO = P_ID_PLAN_TRABAJO
  ORDER BY FP.ID_FUENTE_PROYECTO ASC;
  
  REGISTRO_PROYECTO_PERSONAL RESUMEN_PRES_EJECUTA_IMPL%ROWTYPE;
  REGISTRO_PROYECTO_EQUIPOS RESUMEN_PRES_EJECUTA_IMPL%ROWTYPE;
  REGISTRO_PROYECTO_EVENTOS RESUMEN_PRES_EJECUTA_IMPL%ROWTYPE;
  REGISTRO_PROYECTO_VIAJES RESUMEN_PRES_EJECUTA_IMPL%ROWTYPE;
  REGISTRO_PROY_OTROS_GASTOS RESUMEN_PRES_EJECUTA_IMPL%ROWTYPE;
  REGISTRO_PROY_OTROS_PUBLICA RESUMEN_PRES_EJECUTA_IMPL%ROWTYPE;
  REGISTRO_PROY_OTROS_BIBLIO RESUMEN_PRES_EJECUTA_IMPL%ROWTYPE;
  
  PROCEDURE PRC_CALCULAR_PRES_EJECUTA (P_ID_IMPLEMENTACION_PROY NUMBER, P_ID_INFORME_AVANCE_IMPL NUMBER);
  PROCEDURE PRC_CREAR_REG_PRES_EJECUTA (P_REGISTRO  RESUMEN_PRES_EJECUTA_IMPL%ROWTYPE);
  FUNCTION FNC_TOMA_VALOR_PRESUPUESTADO (P_ID_IMPLEMENTACION_PROY NUMBER, P_ORDEN NUMBER, P_POS_FUENTE NUMBER) RETURN NUMBER;
 
 
  CURSOR C_FUENTES_PROYECTO_ACUM (P_ID_PLAN_TRABAJO NUMBER) IS
  SELECT FP.ID_FUENTE_PROYECTO, FP.NOMBRE_FUENTE, FP.FUENTE_BASE
  FROM FUENTE_PROYECTO FP
  WHERE FP.ID_PLAN_TRABAJO = P_ID_PLAN_TRABAJO
  ORDER BY FP.ID_FUENTE_PROYECTO ASC;
  
  REGISTRO_PROY_PERSONAL_ACUM RESUMEN_PRES_EJECUTA_IMPL%ROWTYPE;
  REGISTRO_PROY_EQUIPOS_ACUM RESUMEN_PRES_EJECUTA_IMPL%ROWTYPE;
  REGISTRO_PROY_EVENTOS_ACUM RESUMEN_PRES_EJECUTA_IMPL%ROWTYPE;
  REGISTRO_PROY_VIAJES_ACUM RESUMEN_PRES_EJECUTA_IMPL%ROWTYPE;
  REGISTRO_PROY_OTR_GASTOS_ACUM RESUMEN_PRES_EJECUTA_IMPL%ROWTYPE;
  REGISTRO_PROY_OTR_PUBLICA_ACUM RESUMEN_PRES_EJECUTA_IMPL%ROWTYPE;
  REGISTRO_PROY_OTR_BIBLIO_ACUM RESUMEN_PRES_EJECUTA_IMPL%ROWTYPE;
  
  PROCEDURE PRC_CALCULAR_PRES_ACUM (P_ID_IMPLEMENTACION_PROY NUMBER);
  PROCEDURE PRC_CREAR_REG_PRES_ACUM (P_REGISTRO  RESUMEN_PRES_EJECUTA_IMPL%ROWTYPE);


END PKG_CALCULO_PRESUPUESTO_IMPL;
-------------------------------------------------------------------------
-------------------------------------------------------------------------

create or replace
PACKAGE BODY "PKG_CALCULO_PRESUPUESTO_IMPL" 
AS
PROCEDURE PRC_CREAR_ACTUALIZA_PRES_PERS(
    p_id_plan_trabajo NUMBER, p_id_implementacion_proy NUMBER)
AS
  rec_registro_proyecto RESUMEN_PRESUPUESTO_IMPL%ROWTYPE;
  v_existe_registro   NUMBER;
  primera_otra_fuente BOOLEAN := FALSE;
BEGIN
  SELECT codigo
  INTO CONST_FUENTE_POLICIA
  FROM constantes
  WHERE id_constantes = 98;
  SELECT codigo
  INTO CONST_FUENTE_VICIN
  FROM constantes
  WHERE id_constantes = 99;
  FOR r_presupuesto_personal IN c_presupuesto_personal(p_id_plan_trabajo)
  LOOP
    IF r_presupuesto_personal.nombre_fuente            = CONST_FUENTE_POLICIA THEN
      rec_registro_proyecto.policia_nacional_especie  := r_presupuesto_personal.valor_especie;
      rec_registro_proyecto.policia_nacional_efectivo := r_presupuesto_personal.valor_efectivo;
    ELSIF r_presupuesto_personal.nombre_fuente         = CONST_FUENTE_VICIN THEN
      rec_registro_proyecto.vicin_especie             := r_presupuesto_personal.valor_especie;
      rec_registro_proyecto.vicin_efectivo            := r_presupuesto_personal.valor_efectivo;
    ELSIF r_presupuesto_personal.fuente_base           = 'Y' THEN
      rec_registro_proyecto.unidad_especie            := r_presupuesto_personal.valor_especie;
      rec_registro_proyecto.unidad_efectivo           := r_presupuesto_personal.valor_efectivo;
    ELSIF r_presupuesto_personal.fuente_base           = 'N' THEN
      FOR i IN 1..v_arreglo_fuentes.count
      LOOP
        IF v_arreglo_fuentes(i)                     = r_presupuesto_personal.id_fuente_proyecto THEN
          IF i                                      =1 THEN
            rec_registro_proyecto.fuente1_especie  := r_presupuesto_personal.valor_especie;
            rec_registro_proyecto.fuente1_efectivo := r_presupuesto_personal.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE1_INTERNA := r_presupuesto_personal.ES_FUENTE_INTERNA;
          ELSIF i                                   =2 THEN
            rec_registro_proyecto.fuente2_especie  := r_presupuesto_personal.valor_especie;
            rec_registro_proyecto.fuente2_efectivo := r_presupuesto_personal.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE2_INTERNA := r_presupuesto_personal.ES_FUENTE_INTERNA;
          ELSIF i                                   =3 THEN
            rec_registro_proyecto.fuente3_especie  := r_presupuesto_personal.valor_especie;
            rec_registro_proyecto.fuente3_efectivo := r_presupuesto_personal.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE3_INTERNA := r_presupuesto_personal.ES_FUENTE_INTERNA;
          ELSIF i                                   =4 THEN
            rec_registro_proyecto.fuente4_especie  := r_presupuesto_personal.valor_especie;
            rec_registro_proyecto.fuente4_efectivo := r_presupuesto_personal.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE4_INTERNA := r_presupuesto_personal.ES_FUENTE_INTERNA;
          END IF;
        END IF;
      END LOOP;
    END IF;
  END LOOP;
  BEGIN
    SELECT 1
    INTO v_existe_registro
    FROM RESUMEN_PRESUPUESTO_IMPL
    WHERE ID_IMPLEMENTACION_PROY = p_id_implementacion_proy AND ID_PLAN_TRABAJO = p_id_plan_trabajo
    AND NOMBRE_RUBRO  = 'PERSONAL' AND ESTADO = 'TEMPORAL';
    UPDATE RESUMEN_PRESUPUESTO_IMPL
    SET POLICIA_NACIONAL_ESPECIE = rec_registro_proyecto.POLICIA_NACIONAL_ESPECIE,
      POLICIA_NACIONAL_EFECTIVO  = rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO,
      VICIN_ESPECIE              = rec_registro_proyecto.VICIN_ESPECIE,
      VICIN_EFECTIVO             = rec_registro_proyecto.VICIN_EFECTIVO,
      UNIDAD_ESPECIE             = rec_registro_proyecto.UNIDAD_ESPECIE,
      UNIDAD_EFECTIVO            = rec_registro_proyecto.UNIDAD_EFECTIVO ,
      FUENTE1_ESPECIE            = rec_registro_proyecto.FUENTE1_ESPECIE,
      FUENTE1_EFECTIVO           = rec_registro_proyecto.FUENTE1_EFECTIVO,
      FUENTE2_ESPECIE            = rec_registro_proyecto.FUENTE2_ESPECIE,
      FUENTE2_EFECTIVO           = rec_registro_proyecto.FUENTE2_EFECTIVO,
      FUENTE3_ESPECIE            = rec_registro_proyecto.FUENTE3_ESPECIE,
      FUENTE3_EFECTIVO           = rec_registro_proyecto.FUENTE3_EFECTIVO,
      FUENTE4_ESPECIE            = rec_registro_proyecto.FUENTE4_ESPECIE,
      FUENTE4_EFECTIVO           = rec_registro_proyecto.FUENTE4_EFECTIVO,
      ES_FUENTE1_INTERNA         = rec_registro_proyecto.ES_FUENTE1_INTERNA,
      ES_FUENTE2_INTERNA         = rec_registro_proyecto.ES_FUENTE2_INTERNA,
      ES_FUENTE3_INTERNA         = rec_registro_proyecto.ES_FUENTE3_INTERNA,
      ES_FUENTE4_INTERNA         = rec_registro_proyecto.ES_FUENTE4_INTERNA,
      ORDEN                      = 1
    WHERE ID_IMPLEMENTACION_PROY = p_id_implementacion_proy AND ID_PLAN_TRABAJO = p_id_plan_trabajo
    AND NOMBRE_RUBRO             = 'PERSONAL';
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    INSERT
    INTO RESUMEN_PRESUPUESTO_IMPL
      (
        ID_RESUMEN_PRESUPUESTO_IMPL ,
        ID_IMPLEMENTACION_PROY ,
        ID_PLAN_TRABAJO,
        NOMBRE_RUBRO ,
        POLICIA_NACIONAL_ESPECIE ,
        POLICIA_NACIONAL_EFECTIVO ,
        VICIN_ESPECIE,
        VICIN_EFECTIVO,
        UNIDAD_ESPECIE ,
        UNIDAD_EFECTIVO ,
        FUENTE1_ESPECIE ,
        FUENTE1_EFECTIVO ,
        FUENTE2_ESPECIE ,
        FUENTE2_EFECTIVO ,
        FUENTE3_ESPECIE ,
        FUENTE3_EFECTIVO ,
        FUENTE4_ESPECIE ,
        FUENTE4_EFECTIVO,
        ES_FUENTE1_INTERNA,
        ES_FUENTE2_INTERNA,
        ES_FUENTE3_INTERNA,
        ES_FUENTE4_INTERNA,
        ORDEN
        
      )
      VALUES
      (
        SEC_PRESUPUESTO_PROYECTO.NEXTVAL,
        p_id_implementacion_proy,
        p_id_plan_trabajo,
        'PERSONAL',
        rec_registro_proyecto.POLICIA_NACIONAL_ESPECIE ,
        rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO ,
        rec_registro_proyecto.VICIN_ESPECIE,
        rec_registro_proyecto.VICIN_EFECTIVO,
        rec_registro_proyecto.UNIDAD_ESPECIE ,
        rec_registro_proyecto.UNIDAD_EFECTIVO ,
        rec_registro_proyecto.FUENTE1_ESPECIE ,
        rec_registro_proyecto.FUENTE1_EFECTIVO ,
        rec_registro_proyecto.FUENTE2_ESPECIE ,
        rec_registro_proyecto.FUENTE2_EFECTIVO ,
        rec_registro_proyecto.FUENTE3_ESPECIE ,
        rec_registro_proyecto.FUENTE3_EFECTIVO ,
        rec_registro_proyecto.FUENTE4_ESPECIE ,
        rec_registro_proyecto.FUENTE4_EFECTIVO,
        rec_registro_proyecto.ES_FUENTE1_INTERNA,
        rec_registro_proyecto.ES_FUENTE2_INTERNA,
        rec_registro_proyecto.ES_FUENTE3_INTERNA,
        rec_registro_proyecto.ES_FUENTE4_INTERNA,
        1
        
      );
  END;
  --COMMIT;
END PRC_CREAR_ACTUALIZA_PRES_PERS;
PROCEDURE PRC_CREAR_ACTUALIZA_PRES_EQUIP
  (
    p_id_plan_trabajo NUMBER, p_id_implementacion_proy NUMBER
  )
AS
  num_fila NUMBER:=1;
  rec_registro_proyecto RESUMEN_PRESUPUESTO_IMPL%ROWTYPE;
  v_existe_registro NUMBER;
BEGIN
  SELECT codigo
  INTO CONST_FUENTE_POLICIA
  FROM constantes
  WHERE id_constantes = 98;
  SELECT codigo
  INTO CONST_FUENTE_VICIN
  FROM constantes
  WHERE id_constantes = 99;
  FOR r_presupuesto_equipos IN c_presupuesto_equipos(p_id_plan_trabajo)
  LOOP
    IF r_presupuesto_equipos.nombre_fuente             = CONST_FUENTE_POLICIA THEN
      rec_registro_proyecto.policia_nacional_efectivo := r_presupuesto_equipos.valor_efectivo;
      rec_registro_proyecto.policia_nacional_especie  := r_presupuesto_equipos.valor_especie;
    ELSIF r_presupuesto_equipos.nombre_fuente          = CONST_FUENTE_VICIN THEN
      rec_registro_proyecto.vicin_efectivo            := r_presupuesto_equipos.valor_efectivo;
      rec_registro_proyecto.vicin_especie             := r_presupuesto_equipos.valor_especie;
    ELSIF r_presupuesto_equipos.fuente_base            = 'Y' THEN
      rec_registro_proyecto.unidad_efectivo           := r_presupuesto_equipos.valor_efectivo;
      rec_registro_proyecto.unidad_especie            := r_presupuesto_equipos.valor_especie;
    ELSIF r_presupuesto_equipos.fuente_base            = 'N' THEN
      FOR i IN 1..v_arreglo_fuentes.count
      LOOP
        IF v_arreglo_fuentes(i)                     = r_presupuesto_equipos.id_fuente_proyecto THEN
          IF i                                      =1 THEN
            rec_registro_proyecto.fuente1_especie  := r_presupuesto_equipos.valor_especie;
            rec_registro_proyecto.fuente1_efectivo := r_presupuesto_equipos.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE1_INTERNA := r_presupuesto_equipos.ES_FUENTE_INTERNA;
          ELSIF i                                   =2 THEN
            rec_registro_proyecto.fuente2_especie  := r_presupuesto_equipos.valor_especie;
            rec_registro_proyecto.fuente2_efectivo := r_presupuesto_equipos.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE2_INTERNA := r_presupuesto_equipos.ES_FUENTE_INTERNA;
          ELSIF i                                   =3 THEN
            rec_registro_proyecto.fuente3_especie  := r_presupuesto_equipos.valor_especie;
            rec_registro_proyecto.fuente3_efectivo := r_presupuesto_equipos.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE3_INTERNA := r_presupuesto_equipos.ES_FUENTE_INTERNA;
          ELSIF i                                   =4 THEN
            rec_registro_proyecto.fuente4_especie  := r_presupuesto_equipos.valor_especie;
            rec_registro_proyecto.fuente4_efectivo := r_presupuesto_equipos.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE4_INTERNA := r_presupuesto_equipos.ES_FUENTE_INTERNA;
          END IF;
        END IF;
      END LOOP;
    END IF;
  END LOOP;
  BEGIN
    SELECT 1
    INTO v_existe_registro
    FROM RESUMEN_PRESUPUESTO_IMPL
    WHERE ID_IMPLEMENTACION_PROY = p_id_implementacion_proy AND ID_PLAN_TRABAJO = p_id_plan_trabajo
    AND NOMBRE_RUBRO  = 'EQUIPOS Y SOFTWARE' AND ESTADO = 'TEMPORAL';
    UPDATE RESUMEN_PRESUPUESTO_IMPL
    SET POLICIA_NACIONAL_ESPECIE = rec_registro_proyecto.POLICIA_NACIONAL_ESPECIE,
    POLICIA_NACIONAL_EFECTIVO = rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO,
      VICIN_ESPECIE              = rec_registro_proyecto.VICIN_ESPECIE,
      VICIN_EFECTIVO              = rec_registro_proyecto.VICIN_EFECTIVO,
      UNIDAD_ESPECIE             = rec_registro_proyecto.UNIDAD_ESPECIE ,
      UNIDAD_EFECTIVO             = rec_registro_proyecto.UNIDAD_EFECTIVO ,
      FUENTE1_ESPECIE            = rec_registro_proyecto.FUENTE1_ESPECIE,
      FUENTE1_EFECTIVO           = rec_registro_proyecto.FUENTE1_EFECTIVO,
      FUENTE2_ESPECIE            = rec_registro_proyecto.FUENTE2_ESPECIE,
      FUENTE2_EFECTIVO           = rec_registro_proyecto.FUENTE2_EFECTIVO,
      FUENTE3_ESPECIE            = rec_registro_proyecto.FUENTE3_ESPECIE,
      FUENTE3_EFECTIVO           = rec_registro_proyecto.FUENTE3_EFECTIVO,
      FUENTE4_ESPECIE            = rec_registro_proyecto.FUENTE4_ESPECIE,
      FUENTE4_EFECTIVO           = rec_registro_proyecto.FUENTE4_EFECTIVO,
      ES_FUENTE1_INTERNA         = rec_registro_proyecto.ES_FUENTE1_INTERNA,
      ES_FUENTE2_INTERNA         = rec_registro_proyecto.ES_FUENTE2_INTERNA,
      ES_FUENTE3_INTERNA         = rec_registro_proyecto.ES_FUENTE3_INTERNA,
      ES_FUENTE4_INTERNA         = rec_registro_proyecto.ES_FUENTE4_INTERNA,
      ORDEN                      = 2
    WHERE ID_IMPLEMENTACION_PROY = p_id_implementacion_proy AND ID_PLAN_TRABAJO = p_id_plan_trabajo
    AND NOMBRE_RUBRO              = 'EQUIPOS Y SOFTWARE';
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    INSERT
    INTO RESUMEN_PRESUPUESTO_IMPL
      (
        ID_RESUMEN_PRESUPUESTO_IMPL ,
        ID_IMPLEMENTACION_PROY ,
        ID_PLAN_TRABAJO, 
        NOMBRE_RUBRO ,
        POLICIA_NACIONAL_ESPECIE, 
        POLICIA_NACIONAL_EFECTIVO ,
        VICIN_ESPECIE,
        VICIN_EFECTIVO,
        UNIDAD_ESPECIE,
        UNIDAD_EFECTIVO ,
        FUENTE1_ESPECIE ,
        FUENTE1_EFECTIVO ,
        FUENTE2_ESPECIE ,
        FUENTE2_EFECTIVO ,
        FUENTE3_ESPECIE ,
        FUENTE3_EFECTIVO ,
        FUENTE4_ESPECIE ,
        FUENTE4_EFECTIVO,
        ES_FUENTE1_INTERNA,
        ES_FUENTE2_INTERNA,
        ES_FUENTE3_INTERNA,
        ES_FUENTE4_INTERNA,
        ORDEN
      )
      VALUES
      (
        SEC_PRESUPUESTO_PROYECTO.NEXTVAL,
        p_id_implementacion_proy,
        p_id_plan_trabajo,
        'EQUIPOS y SOFTWARE',
        rec_registro_proyecto.POLICIA_NACIONAL_ESPECIE ,
        rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO ,
        rec_registro_proyecto.VICIN_ESPECIE,
        rec_registro_proyecto.VICIN_EFECTIVO,
        rec_registro_proyecto.UNIDAD_ESPECIE ,
        rec_registro_proyecto.UNIDAD_EFECTIVO ,
        rec_registro_proyecto.FUENTE1_ESPECIE ,
        rec_registro_proyecto.FUENTE1_EFECTIVO ,
        rec_registro_proyecto.FUENTE2_ESPECIE ,
        rec_registro_proyecto.FUENTE2_EFECTIVO ,
        rec_registro_proyecto.FUENTE3_ESPECIE ,
        rec_registro_proyecto.FUENTE3_EFECTIVO ,
        rec_registro_proyecto.FUENTE4_ESPECIE ,
        rec_registro_proyecto.FUENTE4_EFECTIVO,
        rec_registro_proyecto.ES_FUENTE1_INTERNA,
        rec_registro_proyecto.ES_FUENTE2_INTERNA,
        rec_registro_proyecto.ES_FUENTE3_INTERNA,
        rec_registro_proyecto.ES_FUENTE4_INTERNA,
        2
      );
  END;
  --COMMIT;
END PRC_CREAR_ACTUALIZA_PRES_EQUIP;
PROCEDURE PRC_CREAR_ACTUALIZA_PRES_EVENT
  (
    p_id_plan_trabajo NUMBER, p_id_implementacion_proy NUMBER
  )
AS
  rec_registro_proyecto RESUMEN_PRESUPUESTO_IMPL%ROWTYPE;
  v_existe_registro NUMBER;
BEGIN
  SELECT codigo
  INTO CONST_FUENTE_POLICIA
  FROM constantes
  WHERE id_constantes = 98;
  SELECT codigo
  INTO CONST_FUENTE_VICIN
  FROM constantes
  WHERE id_constantes = 99;
  FOR r_presupuesto_eventos IN c_presupuesto_eventos(p_id_plan_trabajo)
  LOOP
    IF r_presupuesto_eventos.nombre_fuente             = CONST_FUENTE_POLICIA THEN
      rec_registro_proyecto.policia_nacional_efectivo := r_presupuesto_eventos.valor_efectivo;
    ELSIF r_presupuesto_eventos.nombre_fuente          = CONST_FUENTE_VICIN THEN
      rec_registro_proyecto.vicin_efectivo            := r_presupuesto_eventos.valor_efectivo;
    ELSIF r_presupuesto_eventos.fuente_base            = 'Y' THEN
      rec_registro_proyecto.unidad_efectivo           := r_presupuesto_eventos.valor_efectivo;
    ELSIF r_presupuesto_eventos.fuente_base            = 'N' THEN
    FOR i IN 1..v_arreglo_fuentes.count
      LOOP
        IF v_arreglo_fuentes(i)                     = r_presupuesto_eventos.id_fuente_proyecto THEN
          IF i                                      =1 THEN
            rec_registro_proyecto.fuente1_efectivo := r_presupuesto_eventos.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE1_INTERNA := r_presupuesto_eventos.ES_FUENTE_INTERNA;
          ELSIF i                                   =2 THEN
            rec_registro_proyecto.fuente2_efectivo := r_presupuesto_eventos.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE2_INTERNA := r_presupuesto_eventos.ES_FUENTE_INTERNA;
          ELSIF i                                   =3 THEN
            rec_registro_proyecto.fuente3_efectivo := r_presupuesto_eventos.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE3_INTERNA := r_presupuesto_eventos.ES_FUENTE_INTERNA;
          ELSIF i                                   =4 THEN
            rec_registro_proyecto.fuente4_efectivo := r_presupuesto_eventos.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE4_INTERNA := r_presupuesto_eventos.ES_FUENTE_INTERNA;
          END IF;
        END IF;
      END LOOP;
    END IF;

  END LOOP;
  BEGIN
    SELECT 1
    INTO v_existe_registro
    FROM RESUMEN_PRESUPUESTO_IMPL
    WHERE ID_IMPLEMENTACION_PROY = p_id_implementacion_proy AND ID_PLAN_TRABAJO = p_id_plan_trabajo
    AND NOMBRE_RUBRO  = 'EVENTOS' AND ESTADO = 'TEMPORAL';
    UPDATE RESUMEN_PRESUPUESTO_IMPL
    SET POLICIA_NACIONAL_EFECTIVO = rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO,
      VICIN_EFECTIVO              = rec_registro_proyecto.VICIN_EFECTIVO,
      UNIDAD_EFECTIVO             = rec_registro_proyecto.UNIDAD_EFECTIVO ,
      FUENTE1_EFECTIVO            = rec_registro_proyecto.FUENTE1_EFECTIVO,
      FUENTE2_EFECTIVO            = rec_registro_proyecto.FUENTE2_EFECTIVO,
      FUENTE3_EFECTIVO            = rec_registro_proyecto.FUENTE3_EFECTIVO,
      FUENTE4_EFECTIVO            = rec_registro_proyecto.FUENTE4_EFECTIVO,
      ES_FUENTE1_INTERNA         = rec_registro_proyecto.ES_FUENTE1_INTERNA,
      ES_FUENTE2_INTERNA         = rec_registro_proyecto.ES_FUENTE2_INTERNA,
      ES_FUENTE3_INTERNA         = rec_registro_proyecto.ES_FUENTE3_INTERNA,
      ES_FUENTE4_INTERNA         = rec_registro_proyecto.ES_FUENTE4_INTERNA,
      ORDEN                      = 3
    WHERE ID_IMPLEMENTACION_PROY = p_id_implementacion_proy AND ID_PLAN_TRABAJO = p_id_plan_trabajo
    AND NOMBRE_RUBRO              = 'EVENTOS';
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    INSERT
    INTO RESUMEN_PRESUPUESTO_IMPL
      (
        ID_RESUMEN_PRESUPUESTO_IMPL ,
        ID_IMPLEMENTACION_PROY ,
        ID_PLAN_TRABAJO,
        NOMBRE_RUBRO ,
        POLICIA_NACIONAL_EFECTIVO ,
        VICIN_EFECTIVO,
        UNIDAD_EFECTIVO ,
        FUENTE1_EFECTIVO ,
        FUENTE2_EFECTIVO ,
        FUENTE3_EFECTIVO ,
        FUENTE4_EFECTIVO,
        ES_FUENTE1_INTERNA,
        ES_FUENTE2_INTERNA,
        ES_FUENTE3_INTERNA,
        ES_FUENTE4_INTERNA,
        ORDEN
      )
      VALUES
      (
        SEC_PRESUPUESTO_PROYECTO.NEXTVAL,
        p_id_implementacion_proy,
        p_id_plan_trabajo,
        'EVENTOS',
        rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO ,
        rec_registro_proyecto.VICIN_EFECTIVO,
        rec_registro_proyecto.UNIDAD_EFECTIVO ,
        rec_registro_proyecto.FUENTE1_EFECTIVO ,
        rec_registro_proyecto.FUENTE2_EFECTIVO ,
        rec_registro_proyecto.FUENTE3_EFECTIVO ,
        rec_registro_proyecto.FUENTE4_EFECTIVO ,
         rec_registro_proyecto.ES_FUENTE1_INTERNA,
        rec_registro_proyecto.ES_FUENTE2_INTERNA,
        rec_registro_proyecto.ES_FUENTE3_INTERNA,
        rec_registro_proyecto.ES_FUENTE4_INTERNA,
        3
      );
  END;
  --COMMIT;
END PRC_CREAR_ACTUALIZA_PRES_EVENT;
PROCEDURE PRC_CREAR_ACTUALIZA_PRES_VIAJ
  (
    p_id_plan_trabajo NUMBER, p_id_implementacion_proy NUMBER
  )
AS
  rec_registro_proyecto RESUMEN_PRESUPUESTO_IMPL%ROWTYPE;
  v_existe_registro NUMBER;
BEGIN
  SELECT codigo
  INTO CONST_FUENTE_POLICIA
  FROM constantes
  WHERE id_constantes = 98;
  SELECT codigo
  INTO CONST_FUENTE_VICIN
  FROM constantes
  WHERE id_constantes = 99;
 
  FOR r_presupuesto_viajes IN c_presupuesto_viajes(p_id_plan_trabajo)
  LOOP
    IF r_presupuesto_viajes.nombre_fuente              = CONST_FUENTE_POLICIA THEN
      rec_registro_proyecto.policia_nacional_efectivo := r_presupuesto_viajes.valor_efectivo;
    ELSIF r_presupuesto_viajes.nombre_fuente           = CONST_FUENTE_VICIN THEN
      rec_registro_proyecto.vicin_efectivo            := r_presupuesto_viajes.valor_efectivo;
    ELSIF r_presupuesto_viajes.fuente_base             = 'Y' THEN
      rec_registro_proyecto.unidad_efectivo           := r_presupuesto_viajes.valor_efectivo;
    ELSIF r_presupuesto_viajes.fuente_base             = 'N' THEN
      FOR i IN 1..v_arreglo_fuentes.count
      LOOP
        IF v_arreglo_fuentes(i)                     = r_presupuesto_viajes.id_fuente_proyecto THEN
          IF i                                      =1 THEN
            rec_registro_proyecto.fuente1_efectivo := r_presupuesto_viajes.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE1_INTERNA := r_presupuesto_viajes.ES_FUENTE_INTERNA;
          ELSIF i                                   =2 THEN
            rec_registro_proyecto.fuente2_efectivo := r_presupuesto_viajes.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE2_INTERNA := r_presupuesto_viajes.ES_FUENTE_INTERNA;
          ELSIF i                                   =3 THEN
            rec_registro_proyecto.fuente3_efectivo := r_presupuesto_viajes.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE3_INTERNA := r_presupuesto_viajes.ES_FUENTE_INTERNA;
          ELSIF i                                   =4 THEN
            rec_registro_proyecto.fuente4_efectivo := r_presupuesto_viajes.valor_efectivo;
            rec_registro_proyecto.ES_FUENTE4_INTERNA := r_presupuesto_viajes.ES_FUENTE_INTERNA;
          END IF;
        END IF;
      END LOOP;
    END IF;
  END LOOP;
  BEGIN
    SELECT 1
    INTO v_existe_registro
    FROM RESUMEN_PRESUPUESTO_IMPL
    WHERE ID_IMPLEMENTACION_PROY = p_id_implementacion_proy AND ID_PLAN_TRABAJO = p_id_plan_trabajo
    AND NOMBRE_RUBRO  = 'VIAJES' AND ESTADO = 'TEMPORAL';
    UPDATE RESUMEN_PRESUPUESTO_IMPL
    SET POLICIA_NACIONAL_EFECTIVO = rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO,
      VICIN_EFECTIVO              = rec_registro_proyecto.VICIN_EFECTIVO,
      UNIDAD_EFECTIVO             = rec_registro_proyecto.UNIDAD_EFECTIVO ,
      FUENTE1_EFECTIVO            = rec_registro_proyecto.FUENTE1_EFECTIVO,
      FUENTE2_EFECTIVO            = rec_registro_proyecto.FUENTE2_EFECTIVO,
      FUENTE3_EFECTIVO            = rec_registro_proyecto.FUENTE3_EFECTIVO,
      FUENTE4_EFECTIVO            = rec_registro_proyecto.FUENTE4_EFECTIVO,
      ES_FUENTE1_INTERNA         = rec_registro_proyecto.ES_FUENTE1_INTERNA,
      ES_FUENTE2_INTERNA         = rec_registro_proyecto.ES_FUENTE2_INTERNA,
      ES_FUENTE3_INTERNA         = rec_registro_proyecto.ES_FUENTE3_INTERNA,
      ES_FUENTE4_INTERNA         = rec_registro_proyecto.ES_FUENTE4_INTERNA,
      ORDEN                      = 4
    WHERE ID_IMPLEMENTACION_PROY = p_id_implementacion_proy AND ID_PLAN_TRABAJO = p_id_plan_trabajo
    AND NOMBRE_RUBRO              = 'VIAJES';
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    INSERT
    INTO RESUMEN_PRESUPUESTO_IMPL
      (
        ID_RESUMEN_PRESUPUESTO_IMPL ,
        ID_IMPLEMENTACION_PROY ,
        ID_PLAN_TRABAJO,
        NOMBRE_RUBRO ,
        POLICIA_NACIONAL_EFECTIVO ,
        VICIN_EFECTIVO,
        UNIDAD_EFECTIVO ,
        FUENTE1_EFECTIVO ,
        FUENTE2_EFECTIVO ,
        FUENTE3_EFECTIVO ,
        FUENTE4_EFECTIVO ,
        ES_FUENTE1_INTERNA,
        ES_FUENTE2_INTERNA,
        ES_FUENTE3_INTERNA,
        ES_FUENTE4_INTERNA,
        ORDEN
      )
      VALUES
      (
        SEC_PRESUPUESTO_PROYECTO.NEXTVAL,
        p_id_implementacion_proy,
        p_id_plan_trabajo,
        'VIAJES',
        rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO ,
        rec_registro_proyecto.VICIN_EFECTIVO,
        rec_registro_proyecto.UNIDAD_EFECTIVO ,
        rec_registro_proyecto.FUENTE1_EFECTIVO ,
        rec_registro_proyecto.FUENTE2_EFECTIVO ,
        rec_registro_proyecto.FUENTE3_EFECTIVO ,
        rec_registro_proyecto.FUENTE4_EFECTIVO ,
        rec_registro_proyecto.ES_FUENTE1_INTERNA,
        rec_registro_proyecto.ES_FUENTE2_INTERNA,
        rec_registro_proyecto.ES_FUENTE3_INTERNA,
        rec_registro_proyecto.ES_FUENTE4_INTERNA,
        4
      );
  END;
  --COMMIT;
END PRC_CREAR_ACTUALIZA_PRES_VIAJ;
PROCEDURE PRC_CREAR_ACTUALIZA_PRES_OTROS
  (
    p_id_plan_trabajo NUMBER, p_id_implementacion_proy NUMBER
  )
AS
  num_fila NUMBER:=1;
  rec_registro_proyecto RESUMEN_PRESUPUESTO_IMPL%ROWTYPE;
  v_existe_registro NUMBER;
  v_id_gastos_admon NUMBER;
  v_id_publicaciones NUMBER;
  v_id_bibliografia NUMBER;
  v_orden NUMBER;
  v_gasto_admon NUMBER := 0;
  v_publica NUMBER := 0;
  v_biblio NUMBER := 0;
BEGIN
  SELECT codigo
  INTO CONST_FUENTE_POLICIA
  FROM constantes
  WHERE id_constantes = 98;
  
  SELECT codigo
  INTO CONST_FUENTE_VICIN
  FROM constantes
  WHERE id_constantes = 99;
  
  SELECT ID_CONSTANTES
  INTO v_id_gastos_admon
  FROM constantes
  WHERE id_constantes = 182;
  
  SELECT ID_CONSTANTES
  INTO v_id_publicaciones
  FROM constantes
  WHERE id_constantes = 183;
  
  SELECT ID_CONSTANTES
  INTO v_id_bibliografia
  FROM constantes
  WHERE id_constantes = 229;
 
  FOR r_tipo_otros_gastos IN c_tipo_otros_gastos(p_id_plan_trabajo) LOOP
  FOR r_otros_gastos IN c_otros_gastos(p_id_plan_trabajo)
  LOOP
  
  IF r_tipo_otros_gastos.ID_TIPO_GASTO = v_id_gastos_admon THEN
    v_orden := 5;
    v_gasto_admon := 1;
  ELSIF r_tipo_otros_gastos.ID_TIPO_GASTO = v_id_publicaciones THEN
    v_orden := 6;
    v_publica := 1;
  ELSIF r_tipo_otros_gastos.ID_TIPO_GASTO = v_id_bibliografia THEN
    v_orden := 7;
    v_biblio := 1;
  END IF;
  
  IF r_tipo_otros_gastos.codigo = r_otros_gastos.codigo THEN
    IF r_otros_gastos.nombre_fuente                    = CONST_FUENTE_POLICIA THEN
      rec_registro_proyecto.policia_nacional_especie  := r_otros_gastos.valor_especie;
      rec_registro_proyecto.policia_nacional_efectivo := r_otros_gastos.valor_efectivo;
      rec_registro_proyecto.nombre_rubro              := r_otros_gastos.codigo;
    ELSIF r_otros_gastos.nombre_fuente                 = CONST_FUENTE_VICIN THEN
      rec_registro_proyecto.vicin_especie             := r_otros_gastos.valor_especie;
      rec_registro_proyecto.vicin_efectivo            := r_otros_gastos.valor_efectivo;
      rec_registro_proyecto.nombre_rubro              := r_otros_gastos.codigo;
    ELSIF r_otros_gastos.fuente_base                   = 'Y' THEN
      rec_registro_proyecto.unidad_especie            := r_otros_gastos.valor_especie;
      rec_registro_proyecto.unidad_efectivo           := r_otros_gastos.valor_efectivo;
      rec_registro_proyecto.nombre_rubro              := r_otros_gastos.codigo;
    ELSIF r_otros_gastos.fuente_base                   = 'N' THEN
      FOR i IN 1..v_arreglo_fuentes.count
      LOOP
        IF v_arreglo_fuentes(i)                     = r_otros_gastos.id_fuente_proyecto THEN
          IF i                                      =1 THEN
            rec_registro_proyecto.fuente1_especie  := r_otros_gastos.valor_especie;
            rec_registro_proyecto.fuente1_efectivo := r_otros_gastos.valor_efectivo;
            rec_registro_proyecto.nombre_rubro     := r_otros_gastos.codigo;
            rec_registro_proyecto.ES_FUENTE1_INTERNA := r_otros_gastos.ES_FUENTE_INTERNA;
          ELSIF i                                   =2 THEN
            rec_registro_proyecto.fuente2_especie  := r_otros_gastos.valor_especie;
            rec_registro_proyecto.fuente2_efectivo := r_otros_gastos.valor_efectivo;
            rec_registro_proyecto.nombre_rubro              := r_otros_gastos.codigo;
            rec_registro_proyecto.ES_FUENTE2_INTERNA := r_otros_gastos.ES_FUENTE_INTERNA;
          ELSIF i                                   =3 THEN
            rec_registro_proyecto.fuente3_especie  := r_otros_gastos.valor_especie;
            rec_registro_proyecto.fuente3_efectivo := r_otros_gastos.valor_efectivo;
            rec_registro_proyecto.nombre_rubro              := r_otros_gastos.codigo;
            rec_registro_proyecto.ES_FUENTE3_INTERNA := r_otros_gastos.ES_FUENTE_INTERNA;
          ELSIF i                                   =4 THEN
            rec_registro_proyecto.fuente4_especie  := r_otros_gastos.valor_especie;
            rec_registro_proyecto.fuente4_efectivo := r_otros_gastos.valor_efectivo;
            rec_registro_proyecto.nombre_rubro     := r_otros_gastos.codigo;
            rec_registro_proyecto.ES_FUENTE4_INTERNA := r_otros_gastos.ES_FUENTE_INTERNA;
          END IF;
        END IF;
      END LOOP;
     
      END IF;

    BEGIN
      SELECT 1
      INTO v_existe_registro
      FROM RESUMEN_PRESUPUESTO_IMPL
      WHERE ID_IMPLEMENTACION_PROY = p_id_implementacion_proy AND ID_PLAN_TRABAJO = p_id_plan_trabajo AND ESTADO = 'TEMPORAL'
      AND NOMBRE_RUBRO  = r_tipo_otros_gastos.codigo;
      UPDATE RESUMEN_PRESUPUESTO_IMPL
      SET POLICIA_NACIONAL_ESPECIE = rec_registro_proyecto.POLICIA_NACIONAL_ESPECIE,
        POLICIA_NACIONAL_EFECTIVO  = rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO,
        VICIN_ESPECIE              = rec_registro_proyecto.VICIN_ESPECIE,
        VICIN_EFECTIVO             = rec_registro_proyecto.VICIN_EFECTIVO,
        UNIDAD_ESPECIE             = rec_registro_proyecto.UNIDAD_ESPECIE,
        UNIDAD_EFECTIVO            = rec_registro_proyecto.UNIDAD_EFECTIVO ,
        FUENTE1_ESPECIE            = rec_registro_proyecto.FUENTE1_ESPECIE,
        FUENTE1_EFECTIVO           = rec_registro_proyecto.FUENTE1_EFECTIVO,
        FUENTE2_ESPECIE            = rec_registro_proyecto.FUENTE2_ESPECIE,
        FUENTE2_EFECTIVO           = rec_registro_proyecto.FUENTE2_EFECTIVO,
        FUENTE3_ESPECIE            = rec_registro_proyecto.FUENTE3_ESPECIE,
        FUENTE3_EFECTIVO           = rec_registro_proyecto.FUENTE3_EFECTIVO,
        FUENTE4_ESPECIE            = rec_registro_proyecto.FUENTE4_ESPECIE,
        FUENTE4_EFECTIVO           = rec_registro_proyecto.FUENTE4_EFECTIVO,
        ES_FUENTE1_INTERNA         = rec_registro_proyecto.ES_FUENTE1_INTERNA,
        ES_FUENTE2_INTERNA         = rec_registro_proyecto.ES_FUENTE2_INTERNA,
        ES_FUENTE3_INTERNA         = rec_registro_proyecto.ES_FUENTE3_INTERNA,
        ES_FUENTE4_INTERNA         = rec_registro_proyecto.ES_FUENTE4_INTERNA,
        ORDEN                      = v_orden
      WHERE ID_IMPLEMENTACION_PROY = p_id_implementacion_proy AND ID_PLAN_TRABAJO = p_id_plan_trabajo
      AND NOMBRE_RUBRO             = r_tipo_otros_gastos.codigo;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
      INSERT
      INTO RESUMEN_PRESUPUESTO_IMPL
        (
          ID_RESUMEN_PRESUPUESTO_IMPL ,
          ID_IMPLEMENTACION_PROY ,
          ID_PLAN_TRABAJO, 
          NOMBRE_RUBRO ,
          POLICIA_NACIONAL_ESPECIE ,
          POLICIA_NACIONAL_EFECTIVO ,
          VICIN_ESPECIE,
          VICIN_EFECTIVO,
          UNIDAD_ESPECIE ,
          UNIDAD_EFECTIVO ,
          FUENTE1_ESPECIE ,
          FUENTE1_EFECTIVO ,
          FUENTE2_ESPECIE ,
          FUENTE2_EFECTIVO ,
          FUENTE3_ESPECIE ,
          FUENTE3_EFECTIVO ,
          FUENTE4_ESPECIE ,
          FUENTE4_EFECTIVO,
          ES_FUENTE1_INTERNA,
          ES_FUENTE2_INTERNA,
          ES_FUENTE3_INTERNA,
          ES_FUENTE4_INTERNA,
          ORDEN
        )
        VALUES
        (
          SEC_PRESUPUESTO_PROYECTO.NEXTVAL,
          p_id_implementacion_proy,
          p_id_plan_trabajo,
          rec_registro_proyecto.NOMBRE_RUBRO,
          rec_registro_proyecto.POLICIA_NACIONAL_ESPECIE ,
          rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO ,
          rec_registro_proyecto.VICIN_ESPECIE,
          rec_registro_proyecto.VICIN_EFECTIVO,
          rec_registro_proyecto.UNIDAD_ESPECIE ,
          rec_registro_proyecto.UNIDAD_EFECTIVO ,
          rec_registro_proyecto.FUENTE1_ESPECIE ,
          rec_registro_proyecto.FUENTE1_EFECTIVO ,
          rec_registro_proyecto.FUENTE2_ESPECIE ,
          rec_registro_proyecto.FUENTE2_EFECTIVO ,
          rec_registro_proyecto.FUENTE3_ESPECIE ,
          rec_registro_proyecto.FUENTE3_EFECTIVO ,
          rec_registro_proyecto.FUENTE4_ESPECIE ,
          rec_registro_proyecto.FUENTE4_EFECTIVO ,
          rec_registro_proyecto.ES_FUENTE1_INTERNA,
          rec_registro_proyecto.ES_FUENTE2_INTERNA,
          rec_registro_proyecto.ES_FUENTE3_INTERNA,
          rec_registro_proyecto.ES_FUENTE4_INTERNA,
          v_orden
        );
    END;
    --COMMIT;
    END IF;
    END LOOP;
    rec_registro_proyecto.NOMBRE_RUBRO := null;
    rec_registro_proyecto.POLICIA_NACIONAL_ESPECIE := 0;
    rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO := 0;
    rec_registro_proyecto.VICIN_ESPECIE:= 0;
    rec_registro_proyecto.VICIN_EFECTIVO := 0;
    rec_registro_proyecto.UNIDAD_ESPECIE := 0;
    rec_registro_proyecto.UNIDAD_EFECTIVO := 0;
    rec_registro_proyecto.FUENTE1_ESPECIE := 0;
    rec_registro_proyecto.FUENTE1_EFECTIVO := 0;
    rec_registro_proyecto.FUENTE2_ESPECIE := 0;
    rec_registro_proyecto.FUENTE2_EFECTIVO := 0;
    rec_registro_proyecto.FUENTE3_ESPECIE := 0;
    rec_registro_proyecto.FUENTE3_EFECTIVO := 0;
    rec_registro_proyecto.FUENTE4_ESPECIE := 0;
    rec_registro_proyecto.FUENTE4_EFECTIVO := 0;
    rec_registro_proyecto.ES_FUENTE1_INTERNA := null;
    rec_registro_proyecto.ES_FUENTE2_INTERNA := null;
    rec_registro_proyecto.ES_FUENTE3_INTERNA := null;
    rec_registro_proyecto.ES_FUENTE4_INTERNA := null;
  END LOOP;

IF v_gasto_admon = 0 THEN    
  INSERT
      INTO RESUMEN_PRESUPUESTO_IMPL
        (
          ID_RESUMEN_PRESUPUESTO_IMPL ,
          ID_IMPLEMENTACION_PROY ,
          ID_PLAN_TRABAJO, 
          NOMBRE_RUBRO ,
          POLICIA_NACIONAL_ESPECIE ,
          POLICIA_NACIONAL_EFECTIVO ,
          VICIN_ESPECIE,
          VICIN_EFECTIVO,
          UNIDAD_ESPECIE ,
          UNIDAD_EFECTIVO ,
          FUENTE1_ESPECIE ,
          FUENTE1_EFECTIVO ,
          FUENTE2_ESPECIE ,
          FUENTE2_EFECTIVO ,
          FUENTE3_ESPECIE ,
          FUENTE3_EFECTIVO ,
          FUENTE4_ESPECIE ,
          FUENTE4_EFECTIVO,
          ES_FUENTE1_INTERNA,
          ES_FUENTE2_INTERNA,
          ES_FUENTE3_INTERNA,
          ES_FUENTE4_INTERNA,
          ORDEN
        )
        VALUES
        (
          SEC_PRESUPUESTO_PROYECTO.NEXTVAL,
          p_id_implementacion_proy,
          p_id_plan_trabajo,
          'GASTOS ADMINISTRATIVOS',
          rec_registro_proyecto.POLICIA_NACIONAL_ESPECIE ,
          rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO ,
          rec_registro_proyecto.VICIN_ESPECIE,
          rec_registro_proyecto.VICIN_EFECTIVO,
          rec_registro_proyecto.UNIDAD_ESPECIE ,
          rec_registro_proyecto.UNIDAD_EFECTIVO ,
          rec_registro_proyecto.FUENTE1_ESPECIE ,
          rec_registro_proyecto.FUENTE1_EFECTIVO ,
          rec_registro_proyecto.FUENTE2_ESPECIE ,
          rec_registro_proyecto.FUENTE2_EFECTIVO ,
          rec_registro_proyecto.FUENTE3_ESPECIE ,
          rec_registro_proyecto.FUENTE3_EFECTIVO ,
          rec_registro_proyecto.FUENTE4_ESPECIE ,
          rec_registro_proyecto.FUENTE4_EFECTIVO ,
          rec_registro_proyecto.ES_FUENTE1_INTERNA,
          rec_registro_proyecto.ES_FUENTE2_INTERNA,
          rec_registro_proyecto.ES_FUENTE3_INTERNA,
          rec_registro_proyecto.ES_FUENTE4_INTERNA,
          5
        );
END IF;

IF v_publica = 0 THEN    
  INSERT
      INTO RESUMEN_PRESUPUESTO_IMPL
        (
          ID_RESUMEN_PRESUPUESTO_IMPL ,
          ID_IMPLEMENTACION_PROY ,
          ID_PLAN_TRABAJO, 
          NOMBRE_RUBRO ,
          POLICIA_NACIONAL_ESPECIE ,
          POLICIA_NACIONAL_EFECTIVO ,
          VICIN_ESPECIE,
          VICIN_EFECTIVO,
          UNIDAD_ESPECIE ,
          UNIDAD_EFECTIVO ,
          FUENTE1_ESPECIE ,
          FUENTE1_EFECTIVO ,
          FUENTE2_ESPECIE ,
          FUENTE2_EFECTIVO ,
          FUENTE3_ESPECIE ,
          FUENTE3_EFECTIVO ,
          FUENTE4_ESPECIE ,
          FUENTE4_EFECTIVO,
          ES_FUENTE1_INTERNA,
          ES_FUENTE2_INTERNA,
          ES_FUENTE3_INTERNA,
          ES_FUENTE4_INTERNA,
          ORDEN
        )
        VALUES
        (
          SEC_PRESUPUESTO_PROYECTO.NEXTVAL,
          p_id_implementacion_proy,
          p_id_plan_trabajo,
          'PUBLICACIONES',
          rec_registro_proyecto.POLICIA_NACIONAL_ESPECIE ,
          rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO ,
          rec_registro_proyecto.VICIN_ESPECIE,
          rec_registro_proyecto.VICIN_EFECTIVO,
          rec_registro_proyecto.UNIDAD_ESPECIE ,
          rec_registro_proyecto.UNIDAD_EFECTIVO ,
          rec_registro_proyecto.FUENTE1_ESPECIE ,
          rec_registro_proyecto.FUENTE1_EFECTIVO ,
          rec_registro_proyecto.FUENTE2_ESPECIE ,
          rec_registro_proyecto.FUENTE2_EFECTIVO ,
          rec_registro_proyecto.FUENTE3_ESPECIE ,
          rec_registro_proyecto.FUENTE3_EFECTIVO ,
          rec_registro_proyecto.FUENTE4_ESPECIE ,
          rec_registro_proyecto.FUENTE4_EFECTIVO ,
          rec_registro_proyecto.ES_FUENTE1_INTERNA,
          rec_registro_proyecto.ES_FUENTE2_INTERNA,
          rec_registro_proyecto.ES_FUENTE3_INTERNA,
          rec_registro_proyecto.ES_FUENTE4_INTERNA,
          6
        );
 END IF;
 
 IF v_biblio = 0 THEN
          
  INSERT
      INTO RESUMEN_PRESUPUESTO_IMPL
        (
          ID_RESUMEN_PRESUPUESTO_IMPL ,
          ID_IMPLEMENTACION_PROY ,
          ID_PLAN_TRABAJO, 
          NOMBRE_RUBRO ,
          POLICIA_NACIONAL_ESPECIE ,
          POLICIA_NACIONAL_EFECTIVO ,
          VICIN_ESPECIE,
          VICIN_EFECTIVO,
          UNIDAD_ESPECIE ,
          UNIDAD_EFECTIVO ,
          FUENTE1_ESPECIE ,
          FUENTE1_EFECTIVO ,
          FUENTE2_ESPECIE ,
          FUENTE2_EFECTIVO ,
          FUENTE3_ESPECIE ,
          FUENTE3_EFECTIVO ,
          FUENTE4_ESPECIE ,
          FUENTE4_EFECTIVO,
          ES_FUENTE1_INTERNA,
          ES_FUENTE2_INTERNA,
          ES_FUENTE3_INTERNA,
          ES_FUENTE4_INTERNA,
          ORDEN
        )
        VALUES
        (
          SEC_PRESUPUESTO_PROYECTO.NEXTVAL,
          p_id_implementacion_proy,
          p_id_plan_trabajo,
          'BIBLIOGRAFIA Y DOCUMENTACION',
          rec_registro_proyecto.POLICIA_NACIONAL_ESPECIE ,
          rec_registro_proyecto.POLICIA_NACIONAL_EFECTIVO ,
          rec_registro_proyecto.VICIN_ESPECIE,
          rec_registro_proyecto.VICIN_EFECTIVO,
          rec_registro_proyecto.UNIDAD_ESPECIE ,
          rec_registro_proyecto.UNIDAD_EFECTIVO ,
          rec_registro_proyecto.FUENTE1_ESPECIE ,
          rec_registro_proyecto.FUENTE1_EFECTIVO ,
          rec_registro_proyecto.FUENTE2_ESPECIE ,
          rec_registro_proyecto.FUENTE2_EFECTIVO ,
          rec_registro_proyecto.FUENTE3_ESPECIE ,
          rec_registro_proyecto.FUENTE3_EFECTIVO ,
          rec_registro_proyecto.FUENTE4_ESPECIE ,
          rec_registro_proyecto.FUENTE4_EFECTIVO ,
          rec_registro_proyecto.ES_FUENTE1_INTERNA,
          rec_registro_proyecto.ES_FUENTE2_INTERNA,
          rec_registro_proyecto.ES_FUENTE3_INTERNA,
          rec_registro_proyecto.ES_FUENTE4_INTERNA,
          7
        );
END IF;

END PRC_CREAR_ACTUALIZA_PRES_OTROS;
PROCEDURE PRC_CREAR_ACTUALIZA_PRES
  (
    p_id_plan_trabajo NUMBER, p_id_implementacion_proy NUMBER
  )
AS
  i NUMBER :=1;
BEGIN

    DELETE RESUMEN_PRESUPUESTO_IMPL WHERE ID_PLAN_TRABAJO = p_id_plan_trabajo AND ID_IMPLEMENTACION_PROY = p_id_implementacion_proy AND ESTADO = 'TEMPORAL';
    --COMMIT;

    FOR r_otras_fuentes_proyecto IN c_otras_fuentes_proyecto(p_id_plan_trabajo) LOOP
      v_arreglo_fuentes.extend;
      v_arreglo_fuentes(i) := r_otras_fuentes_proyecto.id_fuente_proyecto;
      i := i+1;
    END LOOP;


  
  PRC_CREAR_ACTUALIZA_PRES_PERS(p_id_plan_trabajo, p_id_implementacion_proy);
  PRC_CREAR_ACTUALIZA_PRES_EQUIP(p_id_plan_trabajo, p_id_implementacion_proy);
  PRC_CREAR_ACTUALIZA_PRES_EVENT(p_id_plan_trabajo, p_id_implementacion_proy);
  PRC_CREAR_ACTUALIZA_PRES_VIAJ(p_id_plan_trabajo, p_id_implementacion_proy);
  PRC_CREAR_ACTUALIZA_PRES_OTROS(p_id_plan_trabajo, p_id_implementacion_proy);
  --COMMIT;
  v_arreglo_fuentes := arreglo_fuentes_type();
END;


/*
  =========================================== INICIO CALCULO PRESUPUESTO EJECUTADO ==================================================
  
 */
 
PROCEDURE PRC_CALCULAR_PRES_EJECUTA (P_ID_IMPLEMENTACION_PROY NUMBER, P_ID_INFORME_AVANCE_IMPL NUMBER) AS

V_VALOR_PERSONAL_FUENTE NUMBER;
V_VALOR_EQUIPOS_FUENTE NUMBER;
V_VALOR_EVENTOS_FUENTE NUMBER;
V_VALOR_VIAJES_FUENTE NUMBER;
V_VALOR_OTROS_GASTOS_FUENTE NUMBER;
V_VALOR_OTROS_PUBLICA_FUENTE NUMBER;
V_VALOR_OTROS_BIBLIO_FUENTE NUMBER;
I NUMBER;
V_TEXTO_GASTOS VARCHAR2(50);
V_TEXTO_PUBLICA VARCHAR2(50);
V_TEXTO_BIBLIO VARCHAR2(50);

V_POLICIA_PRESUPUESTADO NUMBER;
V_VICIN_PRESUPUESTADO NUMBER;
V_UNIDAD_PRESUPUESTADO NUMBER;
V_FUENTE1_PRESUPUESTADO NUMBER;
V_FUENTE2_PRESUPUESTADO NUMBER;
V_FUENTE3_PRESUPUESTADO NUMBER;
V_FUENTE4_PRESUPUESTADO NUMBER;
V_ID_PLAN_TRABAJO NUMBER;
V_ID_TIPO_COMPROMISO NUMBER;

BEGIN

  I := 1;

  DELETE RESUMEN_PRES_EJECUTA_IMPL WHERE ID_IMPLEMENTACION_PROYECTO = P_ID_IMPLEMENTACION_PROY AND ID_INFORME_AVANCE_IMPL = P_ID_INFORME_AVANCE_IMPL AND TIPO = 'I';
  --COMMIT;
  
  SELECT PT.ID_PLAN_TRABAJO
  INTO V_ID_PLAN_TRABAJO
  FROM PLAN_TRABAJO_IMPLEMENTACION PT
  WHERE PT.ID_IMPLEMENTACION_PROY = P_ID_IMPLEMENTACION_PROY AND 
  PT.ID_COMPROMISO_IMPLEMENTACION = (SELECT CI.ID_COMPROMISO_IMPLEMENTACION
                                    FROM COMPROMISO_IMPLEMENTACION CI
                                    WHERE CI.ID_IMPLEMENTACION_PROY = P_ID_IMPLEMENTACION_PROY AND 
                                    CI.ID_TIPO_COMPROMISO = 226 AND
                                    CI.ID_ESTADO_COMPROMISO_IMPL = 108);
  
  
  SELECT VALOR
  INTO V_TEXTO_GASTOS
  FROM CONSTANTES
  WHERE ID_CONSTANTES = 182;
  
  SELECT VALOR
  INTO V_TEXTO_PUBLICA
  FROM CONSTANTES
  WHERE ID_CONSTANTES = 183;
  
  SELECT VALOR
  INTO V_TEXTO_BIBLIO
  FROM CONSTANTES
  WHERE ID_CONSTANTES = 229;
  
  REGISTRO_PROYECTO_PERSONAL.ID_IMPLEMENTACION_PROYECTO := P_ID_IMPLEMENTACION_PROY;
  REGISTRO_PROYECTO_PERSONAL.ID_INFORME_AVANCE_IMPL := P_ID_INFORME_AVANCE_IMPL;
  REGISTRO_PROYECTO_PERSONAL.NOMBRE_RUBRO := 'PERSONAL';    
  REGISTRO_PROYECTO_PERSONAL.ORDEN := 1;
  
  REGISTRO_PROYECTO_EQUIPOS.ID_IMPLEMENTACION_PROYECTO := P_ID_IMPLEMENTACION_PROY;
  REGISTRO_PROYECTO_EQUIPOS.ID_INFORME_AVANCE_IMPL := P_ID_INFORME_AVANCE_IMPL;
  REGISTRO_PROYECTO_EQUIPOS.NOMBRE_RUBRO := 'EQUIPOS Y SOFTWARE';    
  REGISTRO_PROYECTO_EQUIPOS.ORDEN := 2;
  
  REGISTRO_PROYECTO_EVENTOS.ID_IMPLEMENTACION_PROYECTO := P_ID_IMPLEMENTACION_PROY;
  REGISTRO_PROYECTO_EVENTOS.ID_INFORME_AVANCE_IMPL := P_ID_INFORME_AVANCE_IMPL;
  REGISTRO_PROYECTO_EVENTOS.NOMBRE_RUBRO := 'EVENTOS';    
  REGISTRO_PROYECTO_EVENTOS.ORDEN := 3;
  
  REGISTRO_PROYECTO_VIAJES.ID_IMPLEMENTACION_PROYECTO := P_ID_IMPLEMENTACION_PROY;
  REGISTRO_PROYECTO_VIAJES.ID_INFORME_AVANCE_IMPL := P_ID_INFORME_AVANCE_IMPL;
  REGISTRO_PROYECTO_VIAJES.NOMBRE_RUBRO := 'VIAJES';    
  REGISTRO_PROYECTO_VIAJES.ORDEN := 4;
  
  REGISTRO_PROY_OTROS_GASTOS.ID_IMPLEMENTACION_PROYECTO := P_ID_IMPLEMENTACION_PROY;
  REGISTRO_PROY_OTROS_GASTOS.ID_INFORME_AVANCE_IMPL := P_ID_INFORME_AVANCE_IMPL;
  REGISTRO_PROY_OTROS_GASTOS.NOMBRE_RUBRO := V_TEXTO_GASTOS;    
  REGISTRO_PROY_OTROS_GASTOS.ORDEN := 5;
  
  REGISTRO_PROY_OTROS_PUBLICA.ID_IMPLEMENTACION_PROYECTO := P_ID_IMPLEMENTACION_PROY;
  REGISTRO_PROY_OTROS_PUBLICA.ID_INFORME_AVANCE_IMPL := P_ID_INFORME_AVANCE_IMPL;
  REGISTRO_PROY_OTROS_PUBLICA.NOMBRE_RUBRO := V_TEXTO_PUBLICA;    
  REGISTRO_PROY_OTROS_PUBLICA.ORDEN := 6;
  
  REGISTRO_PROY_OTROS_BIBLIO.ID_IMPLEMENTACION_PROYECTO := P_ID_IMPLEMENTACION_PROY;
  REGISTRO_PROY_OTROS_BIBLIO.ID_INFORME_AVANCE_IMPL := P_ID_INFORME_AVANCE_IMPL;
  REGISTRO_PROY_OTROS_BIBLIO.NOMBRE_RUBRO := V_TEXTO_BIBLIO;    
  REGISTRO_PROY_OTROS_BIBLIO.ORDEN := 7;
  
  
  FOR J IN C_FUENTES_PROYECTO(V_ID_PLAN_TRABAJO) LOOP
  
    V_VALOR_PERSONAL_FUENTE := NULL;
    V_VALOR_EQUIPOS_FUENTE := NULL;
    V_VALOR_EVENTOS_FUENTE := NULL;
    V_VALOR_VIAJES_FUENTE := NULL;
    V_VALOR_OTROS_GASTOS_FUENTE := NULL;
    V_VALOR_OTROS_PUBLICA_FUENTE := NULL;
    V_VALOR_OTROS_BIBLIO_FUENTE := NULL;
    
    DBMS_OUTPUT.PUT_LINE('FUENTE --> ' || J.NOMBRE_FUENTE);
    
    SELECT ID_TIPO_COMPROMISO 
    INTO V_ID_TIPO_COMPROMISO
    FROM COMPROMISO_IMPLEMENTACION CI JOIN INFORME_AVANCE_IMPLEMENTACION II
    ON (CI.ID_COMPROMISO_IMPLEMENTACION = II.ID_COMPROMISO_IMPLEMENTACION)
    WHERE II.ID_INFORME_AVANCE_IMPL = P_ID_INFORME_AVANCE_IMPL;
    
    IF (V_ID_TIPO_COMPROMISO = 227) THEN
          SELECT SUM(NVL(IP.VALOR_HORA_INVESTIGADOR_IMPL, 0) * NVL(IP.HORAS_DEDICADA_AVANCE_IMPL, 0)) VALOR
          INTO V_VALOR_PERSONAL_FUENTE
          FROM INVESTIGADORES_PROYECTO IP JOIN FUENTE_PROYECTO FP
          ON (IP.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
          WHERE FP.ID_PLAN_TRABAJO = V_ID_PLAN_TRABAJO AND
          IP.ID_PLAN_TRABAJO = V_ID_PLAN_TRABAJO;
    END IF;
    
    IF (V_ID_TIPO_COMPROMISO = 228) THEN
          SELECT SUM(NVL(IP.VALOR_HORA_INVESTIGADOR_IMPL, 0) * NVL(IP.HORAS_DEDICADA_AVANC_FIN_IMPL, 0)) VALOR
          INTO V_VALOR_PERSONAL_FUENTE
          FROM INVESTIGADORES_PROYECTO IP JOIN FUENTE_PROYECTO FP
          ON (IP.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
          WHERE FP.ID_PLAN_TRABAJO = V_ID_PLAN_TRABAJO AND
          IP.ID_PLAN_TRABAJO = V_ID_PLAN_TRABAJO;
    END IF;   
            
          
    SELECT SUM(NVL(EI.VALOR, 0)) VALOR
    INTO V_VALOR_EQUIPOS_FUENTE
    FROM EJECUCION_EQUIPOS_PROYECTO EE JOIN EQUIPOS_INVESTIGACION EI 
    ON (EE.ID_EQUIPO_INVESTIGACION = EI.ID_EQUIPO_INVESTIGACION) JOIN FUENTE_PROYECTO FP
    ON (EI.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE EE.ID_INFORME_IMPLEMENTACION = P_ID_INFORME_AVANCE_IMPL AND 
          FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND 
          FP.ID_PLAN_TRABAJO = V_ID_PLAN_TRABAJO;
    
    
    SELECT SUM(NVL(EP.COSTO, 0)) VALOR
    INTO V_VALOR_EVENTOS_FUENTE
    FROM EJECUCION_EVENTOS_PROYECTO EE JOIN EVENTO_PROYECTO EP
    ON (EE.ID_EVENTO_PROYECTO = EP.ID_EVENTO_PROYECTO) JOIN FUENTE_PROYECTO FP
    ON (EP.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE EE.ID_INFORME_IMPLEMENTACION = P_ID_INFORME_AVANCE_IMPL AND 
          FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND 
          FP.ID_PLAN_TRABAJO = V_ID_PLAN_TRABAJO;
    
    
    SELECT SUM(NVL(VP.COSTOS_PASAJES, 0) + NVL(VP.COSTOS_VIATICOS, 0)) VALOR
    INTO V_VALOR_VIAJES_FUENTE
    FROM EJECUCION_VIAJES_PROYECTO EV JOIN VIAJES_PROYECTO VP
    ON (EV.ID_VIAJE_PROYECTO = VP.ID_VIAJE_PROYECTO ) JOIN FUENTE_PROYECTO FP
    ON (VP.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE EV.ID_INFORME_IMPLEMENTACION = P_ID_INFORME_AVANCE_IMPL AND 
          FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND 
          FP.ID_PLAN_TRABAJO = V_ID_PLAN_TRABAJO;
    
    
    SELECT SUM(NVL(EO.VALOR_GASTADO_PERIODO, 0)) VALOR
    INTO V_VALOR_OTROS_GASTOS_FUENTE
    FROM EJECUCION_OTROS_GASTOS_PROY EO JOIN OTROS_GASTOS_PROYECTO OG
    ON (EO.ID_OTROS_GASTOS_PROYECTO = OG.ID_OTROS_GASTOS_PROYECTO ) JOIN FUENTE_PROYECTO FP
    ON (OG.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE EO.ID_INFORME_IMPLEMENTACION = P_ID_INFORME_AVANCE_IMPL AND 
          FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND 
          FP.ID_PLAN_TRABAJO = V_ID_PLAN_TRABAJO AND 
          OG.ID_TIPO_RUBRO = 182; -- GASTOS ADMINISTRATIVOS
             
    
    SELECT SUM(NVL(EO.VALOR_GASTADO_PERIODO, 0)) VALOR
    INTO V_VALOR_OTROS_PUBLICA_FUENTE
    FROM EJECUCION_OTROS_GASTOS_PROY EO JOIN OTROS_GASTOS_PROYECTO OG
    ON (EO.ID_OTROS_GASTOS_PROYECTO = OG.ID_OTROS_GASTOS_PROYECTO ) JOIN FUENTE_PROYECTO FP
    ON (OG.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE EO.ID_INFORME_IMPLEMENTACION = P_ID_INFORME_AVANCE_IMPL AND 
          FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND 
          FP.ID_PLAN_TRABAJO = V_ID_PLAN_TRABAJO AND 
          OG.ID_TIPO_RUBRO = 183; -- PUBLICACIONES
  
    
    SELECT SUM(NVL(EO.VALOR_GASTADO_PERIODO, 0)) VALOR
    INTO V_VALOR_OTROS_BIBLIO_FUENTE
    FROM EJECUCION_OTROS_GASTOS_PROY EO JOIN OTROS_GASTOS_PROYECTO OG
    ON (EO.ID_OTROS_GASTOS_PROYECTO = OG.ID_OTROS_GASTOS_PROYECTO ) JOIN FUENTE_PROYECTO FP
    ON (OG.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE EO.ID_INFORME_IMPLEMENTACION = P_ID_INFORME_AVANCE_IMPL AND 
          FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND 
          FP.ID_PLAN_TRABAJO = V_ID_PLAN_TRABAJO AND 
          OG.ID_TIPO_RUBRO = 229; -- BIBLIOGRAFIA Y DOCUMENTACION
    
    
    
    IF I = 1 THEN 
    
      REGISTRO_PROYECTO_PERSONAL.POLICIA_NAL_EJECUTA := V_VALOR_PERSONAL_FUENTE;  
      REGISTRO_PROYECTO_EQUIPOS.POLICIA_NAL_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROYECTO_EVENTOS.POLICIA_NAL_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROYECTO_VIAJES.POLICIA_NAL_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTROS_GASTOS.POLICIA_NAL_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTROS_PUBLICA.POLICIA_NAL_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTROS_BIBLIO.POLICIA_NAL_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;
      
      REGISTRO_PROYECTO_PERSONAL.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 1, I);  
      REGISTRO_PROYECTO_EQUIPOS.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 2, I); 
      REGISTRO_PROYECTO_EVENTOS.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 3, I);
      REGISTRO_PROYECTO_VIAJES.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 4, I);
      REGISTRO_PROY_OTROS_GASTOS.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 5, I);
      REGISTRO_PROY_OTROS_PUBLICA.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 6, I);
      REGISTRO_PROY_OTROS_BIBLIO.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 7, I);
      
    ELSIF I = 2 THEN    
          
      REGISTRO_PROYECTO_PERSONAL.VICIN_EJECUTA := V_VALOR_PERSONAL_FUENTE;  
      REGISTRO_PROYECTO_EQUIPOS.VICIN_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROYECTO_EVENTOS.VICIN_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROYECTO_VIAJES.VICIN_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTROS_GASTOS.VICIN_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTROS_PUBLICA.VICIN_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTROS_BIBLIO.VICIN_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;
      
      REGISTRO_PROYECTO_PERSONAL.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 1, I);  
      REGISTRO_PROYECTO_EQUIPOS.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 2, I); 
      REGISTRO_PROYECTO_EVENTOS.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 3, I);
      REGISTRO_PROYECTO_VIAJES.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 4, I);
      REGISTRO_PROY_OTROS_GASTOS.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 5, I);
      REGISTRO_PROY_OTROS_PUBLICA.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 6, I);
      REGISTRO_PROY_OTROS_BIBLIO.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 7, I);
      
      
    ELSIF I = 3 THEN    
          
      REGISTRO_PROYECTO_PERSONAL.UNIDAD_EJECUTA := V_VALOR_PERSONAL_FUENTE;  
      REGISTRO_PROYECTO_EQUIPOS.UNIDAD_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROYECTO_EVENTOS.UNIDAD_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROYECTO_VIAJES.UNIDAD_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTROS_GASTOS.UNIDAD_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTROS_PUBLICA.UNIDAD_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTROS_BIBLIO.UNIDAD_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;
      
      REGISTRO_PROYECTO_PERSONAL.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 1, I);  
      REGISTRO_PROYECTO_EQUIPOS.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 2, I); 
      REGISTRO_PROYECTO_EVENTOS.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 3, I);
      REGISTRO_PROYECTO_VIAJES.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 4, I);
      REGISTRO_PROY_OTROS_GASTOS.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 5, I);
      REGISTRO_PROY_OTROS_PUBLICA.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 6, I);
      REGISTRO_PROY_OTROS_BIBLIO.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 7, I);
      
    ELSIF I = 4 THEN    
          
      REGISTRO_PROYECTO_PERSONAL.FUENTE1_EJECUTA := V_VALOR_PERSONAL_FUENTE;  
      REGISTRO_PROYECTO_EQUIPOS.FUENTE1_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROYECTO_EVENTOS.FUENTE1_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROYECTO_VIAJES.FUENTE1_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTROS_GASTOS.FUENTE1_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTROS_PUBLICA.FUENTE1_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTROS_BIBLIO.FUENTE1_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;
      
      REGISTRO_PROYECTO_PERSONAL.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 1, I);  
      REGISTRO_PROYECTO_EQUIPOS.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 2, I); 
      REGISTRO_PROYECTO_EVENTOS.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 3, I);
      REGISTRO_PROYECTO_VIAJES.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 4, I);
      REGISTRO_PROY_OTROS_GASTOS.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 5, I);
      REGISTRO_PROY_OTROS_PUBLICA.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 6, I);
      REGISTRO_PROY_OTROS_BIBLIO.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 7, I);
      
    ELSIF I = 5 THEN    
          
      REGISTRO_PROYECTO_PERSONAL.FUENTE2_EJECUTA := V_VALOR_PERSONAL_FUENTE;  
      REGISTRO_PROYECTO_EQUIPOS.FUENTE2_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROYECTO_EVENTOS.FUENTE2_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROYECTO_VIAJES.FUENTE2_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTROS_GASTOS.FUENTE2_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTROS_PUBLICA.FUENTE2_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTROS_BIBLIO.FUENTE2_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;
      
      REGISTRO_PROYECTO_PERSONAL.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 1, I);  
      REGISTRO_PROYECTO_EQUIPOS.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 2, I); 
      REGISTRO_PROYECTO_EVENTOS.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 3, I);
      REGISTRO_PROYECTO_VIAJES.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 4, I);
      REGISTRO_PROY_OTROS_GASTOS.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 5, I);
      REGISTRO_PROY_OTROS_PUBLICA.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 6, I);
      REGISTRO_PROY_OTROS_BIBLIO.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 7, I);
      
    ELSIF I = 6 THEN
   
      REGISTRO_PROYECTO_PERSONAL.FUENTE3_EJECUTA := V_VALOR_PERSONAL_FUENTE;  
      REGISTRO_PROYECTO_EQUIPOS.FUENTE3_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROYECTO_EVENTOS.FUENTE3_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROYECTO_VIAJES.FUENTE3_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTROS_GASTOS.FUENTE3_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTROS_PUBLICA.FUENTE3_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTROS_BIBLIO.FUENTE3_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;
      
      REGISTRO_PROYECTO_PERSONAL.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 1, I);  
      REGISTRO_PROYECTO_EQUIPOS.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 2, I); 
      REGISTRO_PROYECTO_EVENTOS.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 3, I);
      REGISTRO_PROYECTO_VIAJES.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 4, I);
      REGISTRO_PROY_OTROS_GASTOS.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 5, I);
      REGISTRO_PROY_OTROS_PUBLICA.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 6, I);
      REGISTRO_PROY_OTROS_BIBLIO.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 7, I);
      
    ELSIF I = 7 THEN
    
      REGISTRO_PROYECTO_PERSONAL.FUENTE4_EJECUTA := V_VALOR_PERSONAL_FUENTE;  
      REGISTRO_PROYECTO_EQUIPOS.FUENTE4_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROYECTO_EVENTOS.FUENTE4_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROYECTO_VIAJES.FUENTE4_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTROS_GASTOS.FUENTE4_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTROS_PUBLICA.FUENTE4_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTROS_BIBLIO.FUENTE4_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;
      
      REGISTRO_PROYECTO_PERSONAL.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 1, I);  
      REGISTRO_PROYECTO_EQUIPOS.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 2, I); 
      REGISTRO_PROYECTO_EVENTOS.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 3, I);
      REGISTRO_PROYECTO_VIAJES.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 4, I);
      REGISTRO_PROY_OTROS_GASTOS.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 5, I);
      REGISTRO_PROY_OTROS_PUBLICA.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 6, I);
      REGISTRO_PROY_OTROS_BIBLIO.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 7, I);
      
    END IF;
    
    I := I + 1;      
  END LOOP;
  
  PRC_CREAR_REG_PRES_EJECUTA(REGISTRO_PROYECTO_PERSONAL);
  PRC_CREAR_REG_PRES_EJECUTA(REGISTRO_PROYECTO_EQUIPOS);
  PRC_CREAR_REG_PRES_EJECUTA(REGISTRO_PROYECTO_EVENTOS);
  PRC_CREAR_REG_PRES_EJECUTA(REGISTRO_PROYECTO_VIAJES);
  PRC_CREAR_REG_PRES_EJECUTA(REGISTRO_PROY_OTROS_GASTOS);
  PRC_CREAR_REG_PRES_EJECUTA(REGISTRO_PROY_OTROS_PUBLICA);
  PRC_CREAR_REG_PRES_EJECUTA(REGISTRO_PROY_OTROS_BIBLIO);
EXCEPTION
  WHEN NO_DATA_FOUND THEN 
    ROLLBACK;
END;

PROCEDURE PRC_CREAR_REG_PRES_EJECUTA (P_REGISTRO  RESUMEN_PRES_EJECUTA_IMPL%ROWTYPE) AS

BEGIN
  
  INSERT
  INTO RESUMEN_PRES_EJECUTA_IMPL
    (
      ID_RESUMEN_PRES_EJECUTA_IMPL,
      ID_IMPLEMENTACION_PROYECTO,
      ID_INFORME_AVANCE_IMPL,
      NOMBRE_RUBRO,
      POLICIA_NAL_PPTO,
      POLICIA_NAL_EJECUTA,
      VICIN_PPTO,
      VICIN_EJECUTA,
      UNIDAD_PPTO,
      UNIDAD_EJECUTA,
      FUENTE1_PPTO,
      FUENTE1_EJECUTA,
      FUENTE2_PPTO,
      FUENTE2_EJECUTA,
      FUENTE3_PPTO,
      FUENTE3_EJECUTA,
      FUENTE4_PPTO,
      FUENTE4_EJECUTA,
      ORDEN,
      TIPO
    )
    VALUES
    (
      SEC_RESUMEN_PRESU_EJECUTA.NEXTVAL,
      P_REGISTRO.ID_IMPLEMENTACION_PROYECTO,
      P_REGISTRO.ID_INFORME_AVANCE_IMPL,
      P_REGISTRO.NOMBRE_RUBRO,
      NVL(P_REGISTRO.POLICIA_NAL_PPTO, 0),
      NVL(P_REGISTRO.POLICIA_NAL_EJECUTA, 0),
      NVL(P_REGISTRO.VICIN_PPTO, 0),
      NVL(P_REGISTRO.VICIN_EJECUTA, 0),
      NVL(P_REGISTRO.UNIDAD_PPTO, 0),
      NVL(P_REGISTRO.UNIDAD_EJECUTA, 0),
      NVL(P_REGISTRO.FUENTE1_PPTO, 0),
      NVL(P_REGISTRO.FUENTE1_EJECUTA, 0),
      NVL(P_REGISTRO.FUENTE2_PPTO, 0),
      NVL(P_REGISTRO.FUENTE2_EJECUTA, 0),
      NVL(P_REGISTRO.FUENTE3_PPTO, 0),
      NVL(P_REGISTRO.FUENTE3_EJECUTA, 0),
      NVL(P_REGISTRO.FUENTE4_PPTO, 0),
      NVL(P_REGISTRO.FUENTE4_EJECUTA, 0),
      P_REGISTRO.ORDEN,
      'I'
    );
    
    --COMMIT;  
  
END;

FUNCTION FNC_TOMA_VALOR_PRESUPUESTADO (P_ID_IMPLEMENTACION_PROY NUMBER, P_ORDEN NUMBER, P_POS_FUENTE NUMBER) RETURN NUMBER AS

V_RETURN NUMBER;

BEGIN

  V_RETURN := 0;

  IF P_POS_FUENTE = 1 THEN -- POLICIA NACIONAL
      SELECT VALOR_PONAL 
      INTO V_RETURN
      FROM (
        SELECT ORDEN, NOMBRE_RUBRO, SUM(NVL(POLICIA_NACIONAL_ESPECIE, 0) + NVL(POLICIA_NACIONAL_EFECTIVO, 0)) VALOR_PONAL,
        SUM(NVL(VICIN_ESPECIE, 0) + NVL(VICIN_EFECTIVO, 0)) VALOR_VICIN,
        SUM(NVL(UNIDAD_ESPECIE, 0) + NVL(UNIDAD_EFECTIVO, 0)) VALOR_UNIDAD,
        SUM(NVL(FUENTE1_ESPECIE, 0) + NVL(FUENTE1_EFECTIVO, 0)) VALOR_FUENTE1,
        SUM(NVL(FUENTE2_ESPECIE, 0) + NVL(FUENTE2_EFECTIVO, 0)) VALOR_FUENTE2,
        SUM(NVL(FUENTE3_ESPECIE, 0) + NVL(FUENTE3_EFECTIVO, 0)) VALOR_FUENTE3,
        SUM(NVL(FUENTE4_ESPECIE, 0) + NVL(FUENTE4_EFECTIVO, 0)) VALOR_FUENTE4
        FROM RESUMEN_PRESUPUESTO_IMPL
        WHERE ID_IMPLEMENTACION_PROY = P_ID_IMPLEMENTACION_PROY AND ESTADO = 'TEMPORAL'
        GROUP BY ORDEN, NOMBRE_RUBRO
        ORDER BY ORDEN
      )
      WHERE ORDEN = P_ORDEN;
  ELSIF P_POS_FUENTE = 2 THEN -- VICIN
      SELECT VALOR_VICIN 
      INTO V_RETURN
      FROM (
        SELECT ORDEN, NOMBRE_RUBRO, SUM(NVL(POLICIA_NACIONAL_ESPECIE, 0) + NVL(POLICIA_NACIONAL_EFECTIVO, 0)) VALOR_PONAL,
        SUM(NVL(VICIN_ESPECIE, 0) + NVL(VICIN_EFECTIVO, 0)) VALOR_VICIN,
        SUM(NVL(UNIDAD_ESPECIE, 0) + NVL(UNIDAD_EFECTIVO, 0)) VALOR_UNIDAD,
        SUM(NVL(FUENTE1_ESPECIE, 0) + NVL(FUENTE1_EFECTIVO, 0)) VALOR_FUENTE1,
        SUM(NVL(FUENTE2_ESPECIE, 0) + NVL(FUENTE2_EFECTIVO, 0)) VALOR_FUENTE2,
        SUM(NVL(FUENTE3_ESPECIE, 0) + NVL(FUENTE3_EFECTIVO, 0)) VALOR_FUENTE3,
        SUM(NVL(FUENTE4_ESPECIE, 0) + NVL(FUENTE4_EFECTIVO, 0)) VALOR_FUENTE4
        FROM RESUMEN_PRESUPUESTO_IMPL
        WHERE ID_IMPLEMENTACION_PROY = P_ID_IMPLEMENTACION_PROY AND ESTADO = 'TEMPORAL'
        GROUP BY ORDEN, NOMBRE_RUBRO
        ORDER BY ORDEN
      )
      WHERE ORDEN = P_ORDEN;
  ELSIF P_POS_FUENTE = 3 THEN -- UNIDAD POLICIAL
      SELECT VALOR_UNIDAD 
      INTO V_RETURN
      FROM (
        SELECT ORDEN, NOMBRE_RUBRO, SUM(NVL(POLICIA_NACIONAL_ESPECIE, 0) + NVL(POLICIA_NACIONAL_EFECTIVO, 0)) VALOR_PONAL,
        SUM(NVL(VICIN_ESPECIE, 0) + NVL(VICIN_EFECTIVO, 0)) VALOR_VICIN,
        SUM(NVL(UNIDAD_ESPECIE, 0) + NVL(UNIDAD_EFECTIVO, 0)) VALOR_UNIDAD,
        SUM(NVL(FUENTE1_ESPECIE, 0) + NVL(FUENTE1_EFECTIVO, 0)) VALOR_FUENTE1,
        SUM(NVL(FUENTE2_ESPECIE, 0) + NVL(FUENTE2_EFECTIVO, 0)) VALOR_FUENTE2,
        SUM(NVL(FUENTE3_ESPECIE, 0) + NVL(FUENTE3_EFECTIVO, 0)) VALOR_FUENTE3,
        SUM(NVL(FUENTE4_ESPECIE, 0) + NVL(FUENTE4_EFECTIVO, 0)) VALOR_FUENTE4
        FROM RESUMEN_PRESUPUESTO_IMPL
        WHERE ID_IMPLEMENTACION_PROY = P_ID_IMPLEMENTACION_PROY AND ESTADO = 'TEMPORAL'
        GROUP BY ORDEN, NOMBRE_RUBRO
        ORDER BY ORDEN
      )
      WHERE ORDEN = P_ORDEN;
  ELSIF P_POS_FUENTE = 4 THEN --FUENTE1
      SELECT VALOR_FUENTE1 
      INTO V_RETURN
      FROM (
        SELECT ORDEN, NOMBRE_RUBRO, SUM(NVL(POLICIA_NACIONAL_ESPECIE, 0) + NVL(POLICIA_NACIONAL_EFECTIVO, 0)) VALOR_PONAL,
        SUM(NVL(VICIN_ESPECIE, 0) + NVL(VICIN_EFECTIVO, 0)) VALOR_VICIN,
        SUM(NVL(UNIDAD_ESPECIE, 0) + NVL(UNIDAD_EFECTIVO, 0)) VALOR_UNIDAD,
        SUM(NVL(FUENTE1_ESPECIE, 0) + NVL(FUENTE1_EFECTIVO, 0)) VALOR_FUENTE1,
        SUM(NVL(FUENTE2_ESPECIE, 0) + NVL(FUENTE2_EFECTIVO, 0)) VALOR_FUENTE2,
        SUM(NVL(FUENTE3_ESPECIE, 0) + NVL(FUENTE3_EFECTIVO, 0)) VALOR_FUENTE3,
        SUM(NVL(FUENTE4_ESPECIE, 0) + NVL(FUENTE4_EFECTIVO, 0)) VALOR_FUENTE4
        FROM RESUMEN_PRESUPUESTO_IMPL
        WHERE ID_IMPLEMENTACION_PROY = P_ID_IMPLEMENTACION_PROY AND ESTADO = 'TEMPORAL'
        GROUP BY ORDEN, NOMBRE_RUBRO
        ORDER BY ORDEN
      )
      WHERE ORDEN = P_ORDEN;
  ELSIF P_POS_FUENTE = 5 THEN -- FUENTE 2
      SELECT VALOR_FUENTE2 
      INTO V_RETURN
      FROM (
        SELECT ORDEN, NOMBRE_RUBRO, SUM(NVL(POLICIA_NACIONAL_ESPECIE, 0) + NVL(POLICIA_NACIONAL_EFECTIVO, 0)) VALOR_PONAL,
        SUM(NVL(VICIN_ESPECIE, 0) + NVL(VICIN_EFECTIVO, 0)) VALOR_VICIN,
        SUM(NVL(UNIDAD_ESPECIE, 0) + NVL(UNIDAD_EFECTIVO, 0)) VALOR_UNIDAD,
        SUM(NVL(FUENTE1_ESPECIE, 0) + NVL(FUENTE1_EFECTIVO, 0)) VALOR_FUENTE1,
        SUM(NVL(FUENTE2_ESPECIE, 0) + NVL(FUENTE2_EFECTIVO, 0)) VALOR_FUENTE2,
        SUM(NVL(FUENTE3_ESPECIE, 0) + NVL(FUENTE3_EFECTIVO, 0)) VALOR_FUENTE3,
        SUM(NVL(FUENTE4_ESPECIE, 0) + NVL(FUENTE4_EFECTIVO, 0)) VALOR_FUENTE4
        FROM RESUMEN_PRESUPUESTO_IMPL
        WHERE ID_IMPLEMENTACION_PROY = P_ID_IMPLEMENTACION_PROY AND ESTADO = 'TEMPORAL'
        GROUP BY ORDEN, NOMBRE_RUBRO
        ORDER BY ORDEN
      )
      WHERE ORDEN = P_ORDEN;
  ELSIF P_POS_FUENTE = 6 THEN -- FUENTE 3 
        SELECT VALOR_FUENTE3 
      INTO V_RETURN
      FROM (
        SELECT ORDEN, NOMBRE_RUBRO, SUM(NVL(POLICIA_NACIONAL_ESPECIE, 0) + NVL(POLICIA_NACIONAL_EFECTIVO, 0)) VALOR_PONAL,
        SUM(NVL(VICIN_ESPECIE, 0) + NVL(VICIN_EFECTIVO, 0)) VALOR_VICIN,
        SUM(NVL(UNIDAD_ESPECIE, 0) + NVL(UNIDAD_EFECTIVO, 0)) VALOR_UNIDAD,
        SUM(NVL(FUENTE1_ESPECIE, 0) + NVL(FUENTE1_EFECTIVO, 0)) VALOR_FUENTE1,
        SUM(NVL(FUENTE2_ESPECIE, 0) + NVL(FUENTE2_EFECTIVO, 0)) VALOR_FUENTE2,
        SUM(NVL(FUENTE3_ESPECIE, 0) + NVL(FUENTE3_EFECTIVO, 0)) VALOR_FUENTE3,
        SUM(NVL(FUENTE4_ESPECIE, 0) + NVL(FUENTE4_EFECTIVO, 0)) VALOR_FUENTE4
        FROM RESUMEN_PRESUPUESTO_IMPL
        WHERE ID_IMPLEMENTACION_PROY = P_ID_IMPLEMENTACION_PROY AND ESTADO = 'TEMPORAL'
        GROUP BY ORDEN, NOMBRE_RUBRO
        ORDER BY ORDEN
      )
      WHERE ORDEN = P_ORDEN;
  ELSIF P_POS_FUENTE = 7 THEN -- FUENTE 4
      SELECT VALOR_FUENTE4 
      INTO V_RETURN
      FROM (
        SELECT ORDEN, NOMBRE_RUBRO, SUM(NVL(POLICIA_NACIONAL_ESPECIE, 0) + NVL(POLICIA_NACIONAL_EFECTIVO, 0)) VALOR_PONAL,
        SUM(NVL(VICIN_ESPECIE, 0) + NVL(VICIN_EFECTIVO, 0)) VALOR_VICIN,
        SUM(NVL(UNIDAD_ESPECIE, 0) + NVL(UNIDAD_EFECTIVO, 0)) VALOR_UNIDAD,
        SUM(NVL(FUENTE1_ESPECIE, 0) + NVL(FUENTE1_EFECTIVO, 0)) VALOR_FUENTE1,
        SUM(NVL(FUENTE2_ESPECIE, 0) + NVL(FUENTE2_EFECTIVO, 0)) VALOR_FUENTE2,
        SUM(NVL(FUENTE3_ESPECIE, 0) + NVL(FUENTE3_EFECTIVO, 0)) VALOR_FUENTE3,
        SUM(NVL(FUENTE4_ESPECIE, 0) + NVL(FUENTE4_EFECTIVO, 0)) VALOR_FUENTE4
        FROM RESUMEN_PRESUPUESTO_IMPL
        WHERE ID_IMPLEMENTACION_PROY = P_ID_IMPLEMENTACION_PROY AND ESTADO = 'TEMPORAL'
        GROUP BY ORDEN, NOMBRE_RUBRO
        ORDER BY ORDEN
      )
      WHERE ORDEN = P_ORDEN;
  END IF;
RETURN V_RETURN;
END;
 
 
/*
  =========================================== FIN CALCULO PRESUPUESTO EJECUTADO =====================================================
  
 */
/*
  =========================================== INICIO CALCULO PRESUPUESTO ACUMULADO ==================================================
  
 */
 
PROCEDURE PRC_CALCULAR_PRES_ACUM (P_ID_IMPLEMENTACION_PROY NUMBER) AS

V_VALOR_PERSONAL_FUENTE NUMBER;
V_VALOR_EQUIPOS_FUENTE NUMBER;
V_VALOR_EVENTOS_FUENTE NUMBER;
V_VALOR_VIAJES_FUENTE NUMBER;
V_VALOR_OTROS_GASTOS_FUENTE NUMBER;
V_VALOR_OTROS_PUBLICA_FUENTE NUMBER;
V_VALOR_OTROS_BIBLIO_FUENTE NUMBER;
I NUMBER;
V_TEXTO_GASTOS VARCHAR2(50);
V_TEXTO_PUBLICA VARCHAR2(50);
V_TEXTO_BIBLIO VARCHAR2(50);

V_POLICIA_PRESUPUESTADO NUMBER;
V_VICIN_PRESUPUESTADO NUMBER;
V_UNIDAD_PRESUPUESTADO NUMBER;
V_FUENTE1_PRESUPUESTADO NUMBER;
V_FUENTE2_PRESUPUESTADO NUMBER;
V_FUENTE3_PRESUPUESTADO NUMBER;
V_FUENTE4_PRESUPUESTADO NUMBER;
V_PLAN_TRABAJO_ACUM NUMBER;

BEGIN

  I := 1;

  DELETE RESUMEN_PRES_EJECUTA_IMPL WHERE ID_IMPLEMENTACION_PROYECTO = P_ID_IMPLEMENTACION_PROY AND TIPO = 'A' AND ID_INFORME_AVANCE_IMPL IS NULL;
  --COMMIT;
  
  SELECT PT.ID_PLAN_TRABAJO
  INTO V_PLAN_TRABAJO_ACUM
  FROM PLAN_TRABAJO_IMPLEMENTACION PT
  WHERE PT.ID_IMPLEMENTACION_PROY = P_ID_IMPLEMENTACION_PROY AND 
  PT.ID_COMPROMISO_IMPLEMENTACION = (SELECT CI.ID_COMPROMISO_IMPLEMENTACION
                                    FROM COMPROMISO_IMPLEMENTACION CI
                                    WHERE CI.ID_IMPLEMENTACION_PROY = P_ID_IMPLEMENTACION_PROY AND 
                                    CI.ID_TIPO_COMPROMISO = 226 AND
                                    CI.ID_ESTADO_COMPROMISO_IMPL = 108);
  
  SELECT VALOR
  INTO V_TEXTO_GASTOS
  FROM CONSTANTES
  WHERE ID_CONSTANTES = 182;
  
  SELECT VALOR
  INTO V_TEXTO_PUBLICA
  FROM CONSTANTES
  WHERE ID_CONSTANTES = 183;
  
  SELECT VALOR
  INTO V_TEXTO_BIBLIO
  FROM CONSTANTES
  WHERE ID_CONSTANTES = 229;
  
  REGISTRO_PROY_PERSONAL_ACUM.ID_IMPLEMENTACION_PROYECTO := P_ID_IMPLEMENTACION_PROY;
  REGISTRO_PROY_PERSONAL_ACUM.NOMBRE_RUBRO := 'PERSONAL';    
  REGISTRO_PROY_PERSONAL_ACUM.ORDEN := 1;
  
  REGISTRO_PROY_EQUIPOS_ACUM.ID_IMPLEMENTACION_PROYECTO := P_ID_IMPLEMENTACION_PROY;
  REGISTRO_PROY_EQUIPOS_ACUM.NOMBRE_RUBRO := 'EQUIPOS Y SOFTWARE';    
  REGISTRO_PROY_EQUIPOS_ACUM.ORDEN := 2;
  
  REGISTRO_PROY_EVENTOS_ACUM.ID_IMPLEMENTACION_PROYECTO := P_ID_IMPLEMENTACION_PROY;
  REGISTRO_PROY_EVENTOS_ACUM.NOMBRE_RUBRO := 'EVENTOS';    
  REGISTRO_PROY_EVENTOS_ACUM.ORDEN := 3;
  
  REGISTRO_PROY_VIAJES_ACUM.ID_IMPLEMENTACION_PROYECTO := P_ID_IMPLEMENTACION_PROY;
  REGISTRO_PROY_VIAJES_ACUM.NOMBRE_RUBRO := 'VIAJES';    
  REGISTRO_PROY_VIAJES_ACUM.ORDEN := 4;
  
  REGISTRO_PROY_OTR_GASTOS_ACUM.ID_IMPLEMENTACION_PROYECTO := P_ID_IMPLEMENTACION_PROY;
  REGISTRO_PROY_OTR_GASTOS_ACUM.NOMBRE_RUBRO := V_TEXTO_GASTOS;    
  REGISTRO_PROY_OTR_GASTOS_ACUM.ORDEN := 5;
  
  REGISTRO_PROY_OTR_PUBLICA_ACUM.ID_IMPLEMENTACION_PROYECTO := P_ID_IMPLEMENTACION_PROY;
  REGISTRO_PROY_OTR_PUBLICA_ACUM.NOMBRE_RUBRO := V_TEXTO_PUBLICA;    
  REGISTRO_PROY_OTR_PUBLICA_ACUM.ORDEN := 6;
  
  REGISTRO_PROY_OTR_BIBLIO_ACUM.ID_IMPLEMENTACION_PROYECTO := P_ID_IMPLEMENTACION_PROY;
  REGISTRO_PROY_OTR_BIBLIO_ACUM.NOMBRE_RUBRO := V_TEXTO_BIBLIO;    
  REGISTRO_PROY_OTR_BIBLIO_ACUM.ORDEN := 7;
  
  
  FOR J IN C_FUENTES_PROYECTO_ACUM(V_PLAN_TRABAJO_ACUM) LOOP
  
    V_VALOR_PERSONAL_FUENTE := NULL;
    V_VALOR_EQUIPOS_FUENTE := NULL;
    V_VALOR_EVENTOS_FUENTE := NULL;
    V_VALOR_VIAJES_FUENTE := NULL;
    V_VALOR_OTROS_GASTOS_FUENTE := NULL;
    V_VALOR_OTROS_PUBLICA_FUENTE := NULL;
    V_VALOR_OTROS_BIBLIO_FUENTE := NULL;
    
    DBMS_OUTPUT.PUT_LINE('FUENTE --> ' || J.NOMBRE_FUENTE);

    SELECT SUM(NVL(IP.VALOR_HORA_INVESTIGADOR_IMPL, 0) * NVL(IP.HORAS_DEDICADA_AVANCE_IMPL, 0)) + 
           SUM (NVL(IP.VALOR_HORA_INVESTIGADOR_IMPL, 0) * NVL(IP.HORAS_DEDICADA_AVANC_FIN_IMPL, 0)) VALOR
    INTO V_VALOR_PERSONAL_FUENTE
    FROM INVESTIGADORES_PROYECTO IP JOIN FUENTE_PROYECTO FP
    ON (IP.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE FP.ID_PLAN_TRABAJO = V_PLAN_TRABAJO_ACUM AND
    IP.ID_PLAN_TRABAJO = V_PLAN_TRABAJO_ACUM;
  
          
    DBMS_OUTPUT.PUT_LINE('V_VALOR_PERSONAL_FUENTE --> ' || V_VALOR_PERSONAL_FUENTE);
          
    SELECT SUM(NVL(EI.VALOR, 0)) VALOR
    INTO V_VALOR_EQUIPOS_FUENTE
    FROM EJECUCION_EQUIPOS_PROYECTO EE JOIN EQUIPOS_INVESTIGACION EI 
    ON (EE.ID_EQUIPO_INVESTIGACION = EI.ID_EQUIPO_INVESTIGACION) JOIN FUENTE_PROYECTO FP
    ON (EI.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND 
          FP.ID_PLAN_TRABAJO = V_PLAN_TRABAJO_ACUM;
    
    DBMS_OUTPUT.PUT_LINE('V_VALOR_EQUIPOS_FUENTE --> ' || V_VALOR_EQUIPOS_FUENTE);
    
    SELECT SUM(NVL(EP.COSTO, 0)) VALOR
    INTO V_VALOR_EVENTOS_FUENTE
    FROM EJECUCION_EVENTOS_PROYECTO EE JOIN EVENTO_PROYECTO EP
    ON (EE.ID_EVENTO_PROYECTO = EP.ID_EVENTO_PROYECTO) JOIN FUENTE_PROYECTO FP
    ON (EP.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND 
          FP.ID_PLAN_TRABAJO = V_PLAN_TRABAJO_ACUM;
    
    DBMS_OUTPUT.PUT_LINE('V_VALOR_EVENTOS_FUENTE --> ' || V_VALOR_EVENTOS_FUENTE);
    
    SELECT SUM(NVL(VP.COSTOS_PASAJES, 0) + NVL(VP.COSTOS_VIATICOS, 0)) VALOR
    INTO V_VALOR_VIAJES_FUENTE
    FROM EJECUCION_VIAJES_PROYECTO EV JOIN VIAJES_PROYECTO VP
    ON (EV.ID_VIAJE_PROYECTO = VP.ID_VIAJE_PROYECTO ) JOIN FUENTE_PROYECTO FP
    ON (VP.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND 
          FP.ID_PLAN_TRABAJO = V_PLAN_TRABAJO_ACUM;
    
    DBMS_OUTPUT.PUT_LINE('V_VALOR_VIAJES_FUENTE --> ' || V_VALOR_VIAJES_FUENTE);
    
    SELECT SUM(NVL(EO.VALOR_GASTADO_PERIODO, 0)) VALOR
    INTO V_VALOR_OTROS_GASTOS_FUENTE
    FROM EJECUCION_OTROS_GASTOS_PROY EO JOIN OTROS_GASTOS_PROYECTO OG
    ON (EO.ID_OTROS_GASTOS_PROYECTO = OG.ID_OTROS_GASTOS_PROYECTO ) JOIN FUENTE_PROYECTO FP
    ON (OG.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND 
          FP.ID_PLAN_TRABAJO = V_PLAN_TRABAJO_ACUM AND 
          OG.ID_TIPO_RUBRO = 182; -- GASTOS ADMINISTRATIVOS
          
    DBMS_OUTPUT.PUT_LINE('V_VALOR_OTROS_GASTOS_FUENTE --> ' || V_VALOR_OTROS_GASTOS_FUENTE);
    
    SELECT SUM(NVL(EO.VALOR_GASTADO_PERIODO, 0)) VALOR
    INTO V_VALOR_OTROS_PUBLICA_FUENTE
    FROM EJECUCION_OTROS_GASTOS_PROY EO JOIN OTROS_GASTOS_PROYECTO OG
    ON (EO.ID_OTROS_GASTOS_PROYECTO = OG.ID_OTROS_GASTOS_PROYECTO ) JOIN FUENTE_PROYECTO FP
    ON (OG.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND 
          FP.ID_PLAN_TRABAJO = V_PLAN_TRABAJO_ACUM AND 
          OG.ID_TIPO_RUBRO = 183; -- PUBLICACIONES
  
    DBMS_OUTPUT.PUT_LINE('V_VALOR_OTROS_PUBLICA_FUENTE --> ' || V_VALOR_OTROS_PUBLICA_FUENTE);
    
    SELECT SUM(NVL(EO.VALOR_GASTADO_PERIODO, 0)) VALOR
    INTO V_VALOR_OTROS_BIBLIO_FUENTE
    FROM EJECUCION_OTROS_GASTOS_PROY EO JOIN OTROS_GASTOS_PROYECTO OG
    ON (EO.ID_OTROS_GASTOS_PROYECTO = OG.ID_OTROS_GASTOS_PROYECTO ) JOIN FUENTE_PROYECTO FP
    ON (OG.ID_FUENTE_PROYECTO = FP.ID_FUENTE_PROYECTO)
    WHERE FP.ID_FUENTE_PROYECTO = J.ID_FUENTE_PROYECTO AND 
          FP.ID_PLAN_TRABAJO = V_PLAN_TRABAJO_ACUM AND 
          OG.ID_TIPO_RUBRO = 229; -- BIBLIOGRAFIA Y DOCUMENTACION
    
    DBMS_OUTPUT.PUT_LINE('V_VALOR_OTROS_BIBLIO_FUENTE --> ' || V_VALOR_OTROS_BIBLIO_FUENTE); 
    
    
    IF I = 1 THEN 
    
      REGISTRO_PROY_PERSONAL_ACUM.POLICIA_NAL_EJECUTA := V_VALOR_PERSONAL_FUENTE;  
      REGISTRO_PROY_EQUIPOS_ACUM.POLICIA_NAL_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROY_EVENTOS_ACUM.POLICIA_NAL_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROY_VIAJES_ACUM.POLICIA_NAL_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTR_GASTOS_ACUM.POLICIA_NAL_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTR_PUBLICA_ACUM.POLICIA_NAL_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTR_BIBLIO_ACUM.POLICIA_NAL_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;
      
      REGISTRO_PROY_PERSONAL_ACUM.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 1, I);  
      REGISTRO_PROY_EQUIPOS_ACUM.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 2, I); 
      REGISTRO_PROY_EVENTOS_ACUM.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 3, I);
      REGISTRO_PROY_VIAJES_ACUM.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 4, I);
      REGISTRO_PROY_OTR_GASTOS_ACUM.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 5, I);
      REGISTRO_PROY_OTR_PUBLICA_ACUM.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 6, I);
      REGISTRO_PROY_OTR_BIBLIO_ACUM.POLICIA_NAL_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 7, I);
      
    ELSIF I = 2 THEN    
          
      REGISTRO_PROY_PERSONAL_ACUM.VICIN_EJECUTA := V_VALOR_PERSONAL_FUENTE;  
      REGISTRO_PROY_EQUIPOS_ACUM.VICIN_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROY_EVENTOS_ACUM.VICIN_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROY_VIAJES_ACUM.VICIN_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTR_GASTOS_ACUM.VICIN_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTR_PUBLICA_ACUM.VICIN_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTR_BIBLIO_ACUM.VICIN_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;
      
      REGISTRO_PROY_PERSONAL_ACUM.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 1, I);  
      REGISTRO_PROY_EQUIPOS_ACUM.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 2, I); 
      REGISTRO_PROY_EVENTOS_ACUM.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 3, I);
      REGISTRO_PROY_VIAJES_ACUM.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 4, I);
      REGISTRO_PROY_OTR_GASTOS_ACUM.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 5, I);
      REGISTRO_PROY_OTR_PUBLICA_ACUM.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 6, I);
      REGISTRO_PROY_OTR_BIBLIO_ACUM.VICIN_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 7, I);
      
      
    ELSIF I = 3 THEN    
          
      REGISTRO_PROY_PERSONAL_ACUM.UNIDAD_EJECUTA := V_VALOR_PERSONAL_FUENTE;  
      REGISTRO_PROY_EQUIPOS_ACUM.UNIDAD_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROY_EVENTOS_ACUM.UNIDAD_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROY_VIAJES_ACUM.UNIDAD_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTR_GASTOS_ACUM.UNIDAD_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTR_PUBLICA_ACUM.UNIDAD_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTR_BIBLIO_ACUM.UNIDAD_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;
      
      REGISTRO_PROY_PERSONAL_ACUM.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 1, I);  
      REGISTRO_PROY_EQUIPOS_ACUM.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 2, I); 
      REGISTRO_PROY_EVENTOS_ACUM.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 3, I);
      REGISTRO_PROY_VIAJES_ACUM.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 4, I);
      REGISTRO_PROY_OTR_GASTOS_ACUM.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 5, I);
      REGISTRO_PROY_OTR_PUBLICA_ACUM.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 6, I);
      REGISTRO_PROY_OTR_BIBLIO_ACUM.UNIDAD_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 7, I);
      
    ELSIF I = 4 THEN    
          
      REGISTRO_PROY_PERSONAL_ACUM.FUENTE1_EJECUTA := V_VALOR_PERSONAL_FUENTE;  
      REGISTRO_PROY_EQUIPOS_ACUM.FUENTE1_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROY_EVENTOS_ACUM.FUENTE1_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROY_VIAJES_ACUM.FUENTE1_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTR_GASTOS_ACUM.FUENTE1_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTR_PUBLICA_ACUM.FUENTE1_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTR_BIBLIO_ACUM.FUENTE1_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;
      
      REGISTRO_PROY_PERSONAL_ACUM.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 1, I);  
      REGISTRO_PROY_EQUIPOS_ACUM.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 2, I); 
      REGISTRO_PROY_EVENTOS_ACUM.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 3, I);
      REGISTRO_PROY_VIAJES_ACUM.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 4, I);
      REGISTRO_PROY_OTR_GASTOS_ACUM.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 5, I);
      REGISTRO_PROY_OTR_PUBLICA_ACUM.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 6, I);
      REGISTRO_PROY_OTR_BIBLIO_ACUM.FUENTE1_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 7, I);
      
    ELSIF I = 5 THEN    
          
      REGISTRO_PROY_PERSONAL_ACUM.FUENTE2_EJECUTA := V_VALOR_PERSONAL_FUENTE;  
      REGISTRO_PROY_EQUIPOS_ACUM.FUENTE2_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROY_EVENTOS_ACUM.FUENTE2_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROY_VIAJES_ACUM.FUENTE2_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTR_GASTOS_ACUM.FUENTE2_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTR_PUBLICA_ACUM.FUENTE2_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTR_BIBLIO_ACUM.FUENTE2_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;
      
      REGISTRO_PROY_PERSONAL_ACUM.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 1, I);  
      REGISTRO_PROY_EQUIPOS_ACUM.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 2, I); 
      REGISTRO_PROY_EVENTOS_ACUM.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 3, I);
      REGISTRO_PROY_VIAJES_ACUM.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 4, I);
      REGISTRO_PROY_OTR_GASTOS_ACUM.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 5, I);
      REGISTRO_PROY_OTR_PUBLICA_ACUM.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 6, I);
      REGISTRO_PROY_OTR_BIBLIO_ACUM.FUENTE2_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 7, I);
      
    ELSIF I = 6 THEN
   
      REGISTRO_PROY_PERSONAL_ACUM.FUENTE3_EJECUTA := V_VALOR_PERSONAL_FUENTE;  
      REGISTRO_PROY_EQUIPOS_ACUM.FUENTE3_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROY_EVENTOS_ACUM.FUENTE3_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROY_VIAJES_ACUM.FUENTE3_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTR_GASTOS_ACUM.FUENTE3_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTR_PUBLICA_ACUM.FUENTE3_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTR_BIBLIO_ACUM.FUENTE3_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;
      
      REGISTRO_PROY_PERSONAL_ACUM.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 1, I);  
      REGISTRO_PROY_EQUIPOS_ACUM.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 2, I); 
      REGISTRO_PROY_EVENTOS_ACUM.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 3, I);
      REGISTRO_PROY_VIAJES_ACUM.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 4, I);
      REGISTRO_PROY_OTR_GASTOS_ACUM.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 5, I);
      REGISTRO_PROY_OTR_PUBLICA_ACUM.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 6, I);
      REGISTRO_PROY_OTR_BIBLIO_ACUM.FUENTE3_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 7, I);
      
    ELSIF I = 7 THEN
    
      REGISTRO_PROY_PERSONAL_ACUM.FUENTE4_EJECUTA := V_VALOR_PERSONAL_FUENTE;  
      REGISTRO_PROY_EQUIPOS_ACUM.FUENTE4_EJECUTA := V_VALOR_EQUIPOS_FUENTE;
      REGISTRO_PROY_EVENTOS_ACUM.FUENTE4_EJECUTA := V_VALOR_EVENTOS_FUENTE;
      REGISTRO_PROY_VIAJES_ACUM.FUENTE4_EJECUTA := V_VALOR_VIAJES_FUENTE;
      REGISTRO_PROY_OTR_GASTOS_ACUM.FUENTE4_EJECUTA := V_VALOR_OTROS_GASTOS_FUENTE;
      REGISTRO_PROY_OTR_PUBLICA_ACUM.FUENTE4_EJECUTA := V_VALOR_OTROS_PUBLICA_FUENTE;
      REGISTRO_PROY_OTR_BIBLIO_ACUM.FUENTE4_EJECUTA := V_VALOR_OTROS_BIBLIO_FUENTE;
      
      REGISTRO_PROY_PERSONAL_ACUM.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 1, I);  
      REGISTRO_PROY_EQUIPOS_ACUM.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 2, I); 
      REGISTRO_PROY_EVENTOS_ACUM.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 3, I);
      REGISTRO_PROY_VIAJES_ACUM.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 4, I);
      REGISTRO_PROY_OTR_GASTOS_ACUM.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 5, I);
      REGISTRO_PROY_OTR_PUBLICA_ACUM.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 6, I);
      REGISTRO_PROY_OTR_BIBLIO_ACUM.FUENTE4_PPTO := FNC_TOMA_VALOR_PRESUPUESTADO(P_ID_IMPLEMENTACION_PROY, 7, I);
      
    END IF;
    
    I := I + 1;      
  END LOOP;
  
  PRC_CREAR_REG_PRES_ACUM(REGISTRO_PROY_PERSONAL_ACUM);
  PRC_CREAR_REG_PRES_ACUM(REGISTRO_PROY_EQUIPOS_ACUM);
  PRC_CREAR_REG_PRES_ACUM(REGISTRO_PROY_EVENTOS_ACUM);
  PRC_CREAR_REG_PRES_ACUM(REGISTRO_PROY_VIAJES_ACUM);
  PRC_CREAR_REG_PRES_ACUM(REGISTRO_PROY_OTR_GASTOS_ACUM);
  PRC_CREAR_REG_PRES_ACUM(REGISTRO_PROY_OTR_PUBLICA_ACUM);
  PRC_CREAR_REG_PRES_ACUM(REGISTRO_PROY_OTR_BIBLIO_ACUM);

EXCEPTION WHEN NO_DATA_FOUND THEN
  ROLLBACK;
END;

PROCEDURE PRC_CREAR_REG_PRES_ACUM (P_REGISTRO  RESUMEN_PRES_EJECUTA_IMPL%ROWTYPE) AS

BEGIN
  
  INSERT
  INTO RESUMEN_PRES_EJECUTA_IMPL
    (
      ID_RESUMEN_PRES_EJECUTA_IMPL,
      ID_IMPLEMENTACION_PROYECTO,
      NOMBRE_RUBRO,
      POLICIA_NAL_PPTO,
      POLICIA_NAL_EJECUTA,
      VICIN_PPTO,
      VICIN_EJECUTA,
      UNIDAD_PPTO,
      UNIDAD_EJECUTA,
      FUENTE1_PPTO,
      FUENTE1_EJECUTA,
      FUENTE2_PPTO,
      FUENTE2_EJECUTA,
      FUENTE3_PPTO,
      FUENTE3_EJECUTA,
      FUENTE4_PPTO,
      FUENTE4_EJECUTA,
      ORDEN,
      TIPO
    )
    VALUES
    (
      SEC_RESUMEN_PRESU_EJECUTA.NEXTVAL,
      P_REGISTRO.ID_IMPLEMENTACION_PROYECTO,
      P_REGISTRO.NOMBRE_RUBRO,
      NVL(P_REGISTRO.POLICIA_NAL_PPTO, 0),
      NVL(P_REGISTRO.POLICIA_NAL_EJECUTA, 0),
      NVL(P_REGISTRO.VICIN_PPTO, 0),
      NVL(P_REGISTRO.VICIN_EJECUTA, 0),
      NVL(P_REGISTRO.UNIDAD_PPTO, 0),
      NVL(P_REGISTRO.UNIDAD_EJECUTA, 0),
      NVL(P_REGISTRO.FUENTE1_PPTO, 0),
      NVL(P_REGISTRO.FUENTE1_EJECUTA, 0),
      NVL(P_REGISTRO.FUENTE2_PPTO, 0),
      NVL(P_REGISTRO.FUENTE2_EJECUTA, 0),
      NVL(P_REGISTRO.FUENTE3_PPTO, 0),
      NVL(P_REGISTRO.FUENTE3_EJECUTA, 0),
      NVL(P_REGISTRO.FUENTE4_PPTO, 0),
      NVL(P_REGISTRO.FUENTE4_EJECUTA, 0),
      P_REGISTRO.ORDEN,
      'A'
    );
    
    --COMMIT;  
  
END;

END PKG_CALCULO_PRESUPUESTO_IMPL;
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------


ALTER TABLE EXCEPCIONES_COMPROMISO ADD (ID_COMPROMISO_PROYECT_CORRECC NUMBER);
ALTER TABLE EXCEPCIONES_COMPROMISO ADD CONSTRAINT ID_COMPRO_PRO_EXCEPCION_FK FOREIGN KEY (ID_COMPROMISO_PROYECT_CORRECC) REFERENCES COMPROMISO_PROYECTO (ID_COMPROMISO_PROYECTO);

ALTER TABLE EXCEPCIONES_COMPROMISO ADD NOMBRE_COMPROMISO_CORRECCION VARCHAR2(200);

UPDATE TIPO_UNIDAD SET ACTIVO = 'Y' WHERE ID_TIPO_UNIDAD = 2;
ALTER TABLE PUBLICACION_INVESTIGADOR MODIFY ID_INVESTIGADOR NUMBER NULL;

ALTER TABLE PUBLICACION_INVESTIGADOR ADD IDENTIFICACION_SIAT VARCHAR2(100);

--29/10/2014
ALTER TABLE INVESTI_DESARROL_INVESTTIGADOR MODIFY ID_INVESTIGADOR NUMBER NULL;
ALTER TABLE INVESTI_DESARROL_INVESTTIGADOR ADD IDENTIFICACION_SIAT VARCHAR2(100);

ALTER TABLE INVESTIGADOR ADD ID_UNIDAD_POLICIAL_CREA NUMBER;
ALTER TABLE INVESTIGADOR ADD ID_UNIDAD_POLICIAL_MODIFICA NUMBER;

CREATE SEQUENCE SEC_SALI_BUSQU_INVESTI_SIAT
  START WITH 1
  INCREMENT by 1
  MINVALUE 1
;

CREATE TABLE SALIDA_BUSQUEDA_INVESTI_SIAT(
    ID NUMBER,
    SESION VARCHAR2(100),
    IDENTIFICA VARCHAR2(100),
    ORIGEN VARCHAR2(20),
    ID_TIPO_VINCULA NUMBER,
    NOMBRE_TIPO_VINCULA VARCHAR2(100),
    GRADO VARCHAR2(100),
    NOMBRES_APELLIDOS VARCHAR2(200),
    CORREO VARCHAR2(100),
    TELEFONO VARCHAR2(100)
);

create or replace
PROCEDURE PRC_BUSCADOR_INVESTIGADOR_SIAT
(
  P_SESION IN SALIDA_BUSQUEDA_INVESTI_SIAT.SESION%TYPE,
  P_ID_UNIDAD_POLICIAL IN NUMBER,
  P_IDENTIFICACION IN VISTA_FUNCIONARIO.IDENTIFICACION%TYPE,
  P_NOMBRES IN VISTA_FUNCIONARIO.NOMBRES%TYPE, 
  P_APELLIDOS IN VISTA_FUNCIONARIO.APELLIDOS%TYPE,
  P_PROFESOR_POLICIAL IN INVESTIGADOR.PROFESOR_POLICIAL%TYPE,
  P_ID_ESTADO  IN NUMBER,
  P_ID_NIVEL_PREGRADO  IN NUMBER,
  P_ID_NIVEL_POSTGRADO  IN NUMBER,
  P_ID_NIVEL_ESPECILIZACION  IN NUMBER,
  P_ID_NIVEL_MAESTRIA  IN NUMBER,
  P_ID_NIVEL_DOCTORADO  IN NUMBER,
  P_ID_CARAC_CON_PUBLICACION IN NUMBER,
  P_ID_CARAC_CON_INVESTIGACION IN NUMBER,
  P_ID_GRADO IN NUMBER,
  P_ID_VINCULA IN NUMBER 
) AS  
  --VARIABLES

  BEGIN
    
    --DELETE FROM SALIDA_BUSQUEDA_INVESTI_SIAT WHERE SESION = P_SESION;
    
    --UNIDAD POLICIAL    
    IF P_ID_UNIDAD_POLICIAL IS NOT NULL THEN
      --BUSCAMOS LAS PERSONAS DEL SIAT QUE PERTENEZCAN A DICHA UNIDAD
      FOR rec_personas_siat IN (SELECT * FROM VISTA_FUNCIONARIO WHERE COD_UNID_LAB = P_ID_UNIDAD_POLICIAL) 
        LOOP
          INSERT INTO SALIDA_BUSQUEDA_INVESTI_SIAT (
                      ID,SESION,
                      IDENTIFICA,ORIGEN,ID_TIPO_VINCULA,
                      NOMBRE_TIPO_VINCULA,GRADO,
                      NOMBRES_APELLIDOS,CORREO,TELEFONO)
            VALUES (SEC_SALI_BUSQU_INVESTI_SIAT.nextval, P_SESION,rec_personas_siat.IDENTIFICACION,'SIAT',NULL,NULL,rec_personas_siat.GRADO,
                    rec_personas_siat.NOMBRE_COMPLETO,rec_personas_siat.CORREO,rec_personas_siat.TELEFONO);
        END LOOP;
        --TAMBIEN BUSCAMOS LOS INVESTIGADORES QUE PERTENEZCAN A DICHA UNIDAD
        FOR rec_personas_siat IN (SELECT * FROM INVESTIGADOR, CONSTANTES WHERE ID_UNIDAD_POLICIAL_CREA = P_ID_UNIDAD_POLICIAL AND TIPO_VINCULACION = ID_CONSTANTES) 
        LOOP
          INSERT INTO SALIDA_BUSQUEDA_INVESTI_SIAT (
                      ID,SESION,
                      IDENTIFICA,ORIGEN,ID_TIPO_VINCULA,
                      NOMBRE_TIPO_VINCULA,GRADO,
                      NOMBRES_APELLIDOS,CORREO,TELEFONO)
            VALUES (SEC_SALI_BUSQU_INVESTI_SIAT.nextval, P_SESION,rec_personas_siat.NUMERO_IDENTIFICACION,'INVESTIGADOR',rec_personas_siat.ID_CONSTANTES,rec_personas_siat.VALOR,NULL,
                    rec_personas_siat.NOMBRES || ' ' || rec_personas_siat.APELLIDOS,
                    rec_personas_siat.CORREO_ELECTRONICO,rec_personas_siat.TELEFONO);
        END LOOP;
    END IF;
    
    --IDENTIFICACION
    IF P_IDENTIFICACION IS NOT NULL THEN
      --BUSCAMOS LA PERSONA EN EL SIAT POR IDENTIFICACION
      FOR rec_personas_siat IN (SELECT * FROM VISTA_FUNCIONARIO WHERE IDENTIFICACION = P_IDENTIFICACION) 
        LOOP
          INSERT INTO SALIDA_BUSQUEDA_INVESTI_SIAT (
                      ID,SESION,
                      IDENTIFICA,ORIGEN,ID_TIPO_VINCULA,
                      NOMBRE_TIPO_VINCULA,GRADO,
                      NOMBRES_APELLIDOS,CORREO,TELEFONO)
            VALUES (SEC_SALI_BUSQU_INVESTI_SIAT.nextval, P_SESION,rec_personas_siat.IDENTIFICACION,'SIAT',NULL,NULL,rec_personas_siat.GRADO,
                    rec_personas_siat.NOMBRE_COMPLETO,rec_personas_siat.CORREO,rec_personas_siat.TELEFONO);
        END LOOP;
        --TAMBIEN BUSCAMOS LA PERSONA EN LA TABLA INVESTIGADOR POR IDENTIFICACION
        FOR rec_personas_siat IN (SELECT * FROM INVESTIGADOR, CONSTANTES WHERE NUMERO_IDENTIFICACION = P_IDENTIFICACION AND TIPO_VINCULACION = ID_CONSTANTES) 
        LOOP
          INSERT INTO SALIDA_BUSQUEDA_INVESTI_SIAT (
                      ID,SESION,
                      IDENTIFICA,ORIGEN,ID_TIPO_VINCULA,
                      NOMBRE_TIPO_VINCULA,GRADO,
                      NOMBRES_APELLIDOS,CORREO,TELEFONO)
            VALUES (SEC_SALI_BUSQU_INVESTI_SIAT.nextval, P_SESION,rec_personas_siat.NUMERO_IDENTIFICACION,'INVESTIGADOR',rec_personas_siat.ID_CONSTANTES,rec_personas_siat.VALOR,NULL,
                    rec_personas_siat.NOMBRES || ' ' || rec_personas_siat.APELLIDOS,
                    rec_personas_siat.CORREO_ELECTRONICO,rec_personas_siat.TELEFONO);
        END LOOP;        
    END IF;
    
    --NOMBRES
    IF P_NOMBRES IS NOT NULL THEN    
      FOR rec_personas_siat IN (SELECT * FROM VISTA_FUNCIONARIO WHERE UPPER(NOMBRES) LIKE '%' || UPPER(P_NOMBRES) || '%') 
        LOOP          
          INSERT INTO SALIDA_BUSQUEDA_INVESTI_SIAT (
                      ID,SESION,
                      IDENTIFICA,ORIGEN,ID_TIPO_VINCULA,
                      NOMBRE_TIPO_VINCULA,GRADO,
                      NOMBRES_APELLIDOS,CORREO,TELEFONO)
            VALUES (SEC_SALI_BUSQU_INVESTI_SIAT.nextval, P_SESION,rec_personas_siat.IDENTIFICACION,'SIAT',NULL,NULL,rec_personas_siat.GRADO,
                    rec_personas_siat.NOMBRE_COMPLETO,rec_personas_siat.CORREO,rec_personas_siat.TELEFONO);
        END LOOP;
        
        FOR rec_personas_siat IN (SELECT * FROM INVESTIGADOR, CONSTANTES WHERE UPPER(NOMBRES) LIKE '%' || UPPER(P_NOMBRES) || '%' AND TIPO_VINCULACION = ID_CONSTANTES) 
        LOOP          
          INSERT INTO SALIDA_BUSQUEDA_INVESTI_SIAT (
                      ID,SESION,
                      IDENTIFICA,ORIGEN,ID_TIPO_VINCULA,
                      NOMBRE_TIPO_VINCULA,GRADO,
                      NOMBRES_APELLIDOS,CORREO,TELEFONO)
            VALUES (SEC_SALI_BUSQU_INVESTI_SIAT.nextval, P_SESION,rec_personas_siat.NUMERO_IDENTIFICACION,'INVESTIGADOR',rec_personas_siat.ID_CONSTANTES,rec_personas_siat.VALOR,NULL,
                    rec_personas_siat.NOMBRES || ' ' || rec_personas_siat.APELLIDOS,
                    rec_personas_siat.CORREO_ELECTRONICO,rec_personas_siat.TELEFONO);
        END LOOP;
    END IF;

    --APELLIDOS
    IF P_APELLIDOS IS NOT NULL THEN
      FOR rec_personas_siat IN (SELECT * FROM VISTA_FUNCIONARIO WHERE UPPER(APELLIDOS) LIKE '%' || UPPER(P_APELLIDOS) || '%') 
        LOOP
          INSERT INTO SALIDA_BUSQUEDA_INVESTI_SIAT (
                      ID,SESION,
                      IDENTIFICA,ORIGEN,ID_TIPO_VINCULA,
                      NOMBRE_TIPO_VINCULA,GRADO,
                      NOMBRES_APELLIDOS,CORREO,TELEFONO)
            VALUES (SEC_SALI_BUSQU_INVESTI_SIAT.nextval, P_SESION,rec_personas_siat.IDENTIFICACION,'SIAT',NULL,NULL,rec_personas_siat.GRADO,
                    rec_personas_siat.NOMBRE_COMPLETO,rec_personas_siat.CORREO,rec_personas_siat.TELEFONO);
        END LOOP;
        
        FOR rec_personas_siat IN (SELECT * FROM INVESTIGADOR, CONSTANTES WHERE UPPER(APELLIDOS) LIKE '%' || UPPER(P_APELLIDOS) || '%' AND TIPO_VINCULACION = ID_CONSTANTES) 
        LOOP
          INSERT INTO SALIDA_BUSQUEDA_INVESTI_SIAT (
                      ID,SESION,
                      IDENTIFICA,ORIGEN,ID_TIPO_VINCULA,
                      NOMBRE_TIPO_VINCULA,GRADO,
                      NOMBRES_APELLIDOS,CORREO,TELEFONO)
            VALUES (SEC_SALI_BUSQU_INVESTI_SIAT.nextval, P_SESION,rec_personas_siat.NUMERO_IDENTIFICACION,'INVESTIGADOR',rec_personas_siat.ID_CONSTANTES,rec_personas_siat.VALOR,NULL,
                    rec_personas_siat.NOMBRES || ' ' || rec_personas_siat.APELLIDOS,
                    rec_personas_siat.CORREO_ELECTRONICO,rec_personas_siat.TELEFONO);
        END LOOP;
    END IF;    
        
    IF P_PROFESOR_POLICIAL IS NOT NULL THEN 
    
        FOR rec_personas_siat IN (SELECT * FROM INVESTIGADOR, CONSTANTES WHERE PROFESOR_POLICIAL = P_PROFESOR_POLICIAL AND TIPO_VINCULACION = ID_CONSTANTES) 
        LOOP
          INSERT INTO SALIDA_BUSQUEDA_INVESTI_SIAT (
                      ID,SESION,IDENTIFICA,ORIGEN,ID_TIPO_VINCULA,NOMBRE_TIPO_VINCULA,GRADO,NOMBRES_APELLIDOS,CORREO,TELEFONO)
            VALUES (SEC_SALI_BUSQU_INVESTI_SIAT.nextval, P_SESION,rec_personas_siat.NUMERO_IDENTIFICACION,'INVESTIGADOR',rec_personas_siat.ID_CONSTANTES,rec_personas_siat.VALOR,NULL,
                    rec_personas_siat.NOMBRES || ' ' || rec_personas_siat.APELLIDOS,
                    rec_personas_siat.CORREO_ELECTRONICO,rec_personas_siat.TELEFONO); 
        END LOOP;                
    END IF;
    
    IF P_ID_ESTADO IS NOT NULL THEN
      --CONSTANTES
      --214	Vinculado actualmente
      --215	No vinculado actualmente
      IF P_ID_ESTADO = 214 THEN
        --111=TIPO_ESTADO_PROYECTO_CULMINADO
        --114=TIPO_ESTADO_PROYECTO_IMPLEMENTADO
        FOR rec_personas_siat IN (SELECT distinct iv.IDENTIFICACION,iv.NOMBRE_COMPLETO,iv.CORREO,iv.TELEFONO,
                        iv.GRADO, DECODE(ORIGEN_SIAF_O_INVESTI,'S','SIAT','I','INVESTIGADOR','SIAT') ORIGEN 
                        FROM investigadores_proyecto iv, proyecto p 
                        where iv.id_proyecto = p.id_proyecto and p.id_estado NOT IN (111,114)) 
        LOOP
          INSERT INTO SALIDA_BUSQUEDA_INVESTI_SIAT (
                      ID,SESION,IDENTIFICA,ORIGEN,ID_TIPO_VINCULA,NOMBRE_TIPO_VINCULA,GRADO,NOMBRES_APELLIDOS,CORREO,TELEFONO)
            VALUES (SEC_SALI_BUSQU_INVESTI_SIAT.nextval, P_SESION,rec_personas_siat.IDENTIFICACION,rec_personas_siat.ORIGEN,NULL,NULL,
                    rec_personas_siat.GRADO,rec_personas_siat.NOMBRE_COMPLETO,
                    rec_personas_siat.CORREO,rec_personas_siat.TELEFONO);                                       
        END LOOP;                              
        
        ELSIF P_ID_ESTADO = 214 THEN     
          FOR rec_personas_siat IN (SELECT distinct vfun.IDENTIFICACION,vfun.NOMBRE_COMPLETO,vfun.CORREO,vfun.TELEFONO,
                                vfun.GRADO, 'SIAT' ORIGEN 
                                FROM vista_funcionario vfun
                                WHERE NOT EXISTS(SELECT 1 from investigadores_proyecto iv WHERE vfun.IDENTIFICACION = iv.IDENTIFICACION)) 
        LOOP
          INSERT INTO SALIDA_BUSQUEDA_INVESTI_SIAT (
                      ID,SESION,IDENTIFICA,ORIGEN,ID_TIPO_VINCULA,NOMBRE_TIPO_VINCULA,GRADO,NOMBRES_APELLIDOS,CORREO,TELEFONO)
            VALUES (SEC_SALI_BUSQU_INVESTI_SIAT.nextval, P_SESION,rec_personas_siat.IDENTIFICACION,rec_personas_siat.ORIGEN,NULL,NULL,
                    rec_personas_siat.GRADO,rec_personas_siat.NOMBRE_COMPLETO,
                    rec_personas_siat.CORREO,rec_personas_siat.TELEFONO);                                       
        END LOOP;          
      END IF;
      
    END IF;
    
    --ELIMINAMOS LOS REGISTROS REPETIDOS
    DELETE FROM SALIDA_BUSQUEDA_INVESTI_SIAT
     WHERE rowid  not in(
      SELECT MIN( rowid )
             FROM SALIDA_BUSQUEDA_INVESTI_SIAT
             WHERE SESION = P_SESION
            GROUP BY IDENTIFICA, ORIGEN);
    
  END PRC_BUSCADOR_INVESTIGADOR_SIAT;





CREATE TABLE CATEGORIA_POLICIAL
  (
    ID_CATEGORIA NUMBER NOT NULL,
    DESCRIPCION  VARCHAR2(50),
    ACTIVO       VARCHAR2(2),
    CONSTRAINT CATEGORIA_POLICIAL_PK PRIMARY KEY (ID_CATEGORIA)
  );


Insert into CATEGORIA_POLICIAL (ID_CATEGORIA,DESCRIPCION,ACTIVO) values ('1','OFICIAL','SI');
Insert into CATEGORIA_POLICIAL (ID_CATEGORIA,DESCRIPCION,ACTIVO) values ('2','SUBOFICIAL','SI');
Insert into CATEGORIA_POLICIAL (ID_CATEGORIA,DESCRIPCION,ACTIVO) values ('3','NIVEL EJECUTIVO','SI');
Insert into CATEGORIA_POLICIAL (ID_CATEGORIA,DESCRIPCION,ACTIVO) values ('4','AGENTE','SI');
Insert into CATEGORIA_POLICIAL (ID_CATEGORIA,DESCRIPCION,ACTIVO) values ('5','NO UNIFORMADO','SI');
Insert into CATEGORIA_POLICIAL (ID_CATEGORIA,DESCRIPCION,ACTIVO) values ('6','ALUMNO','SI');
Insert into CATEGORIA_POLICIAL (ID_CATEGORIA,DESCRIPCION,ACTIVO) values ('7','AUXILIAR DE POLICIA','SI');
Insert into CATEGORIA_POLICIAL (ID_CATEGORIA,DESCRIPCION,ACTIVO) values ('0','NO REPORTADO','SI');

CREATE TABLE GRADO_CATEGORIA
  (
    ALFABETICO   VARCHAR2(100),
    NATURALEZA   VARCHAR2(100),
    DESCRIPCION  VARCHAR2(100),
    ID_CATEGORIA VARCHAR2(100),
    VIGENTE      VARCHAR2(100),
    ID           NUMBER
  );

Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TE_R','NA','TENIENTE DE LA RESERVA','1','SI','1');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('CPS-1','DI','CONTRATO POR PRESTACION DE SERVICIOS-01','5','SI','2');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('CPS-2','AS','CONTRATO POR PRESTACION DE SERVICIOS-02','5','SI','3');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('CPS-5','TE','CONTRATO POR PRESTACION DE SERVICIOS-05','5','SI','4');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('CPS-6','AT','CONTRATO POR PRESTACION DE SERVICIOS-06','5','SI','5');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SUP-1','DI','SUPERNUMERARIO-01','5','SI','6');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SUP-2','AS','SUPERNUMERARIO-02','5','SI','7');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SUP-3','EJ','SUPERNUMERARIO-03','5','SI','8');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SUP-4','PR','SUPERNUMERARIO-04','5','SI','9');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SUP-5','TE','SUPERNUMERARIO-05','5','SI','10');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SUP-6','AT','SUPERNUMERARIO-06','5','SI','11');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('RU','PR','RURAL','5','SI','12');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('D4','NA','ADJUNTO CUARTO','5','SI','13');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('D5','NA','ADJUNTO QUINTO','5','SI','14');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('CT_R','NA','CAPITAN DE LA RESERVA','1','SI','15');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AG','NA','AGENTE','4','SI','16');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('IJ','NA','INTENDENTE JEFE','3','SI','17');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('GR','NA','GENERAL','1','SI','18');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('MG','NA','MAYOR GENERAL','1','SI','19');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('BG','NA','BRIGADIER GENERAL','1','SI','20');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('CR','NA','CORONEL','1','SI','21');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TC','NA','TENIENTE CORONEL','1','SI','22');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('MY','NA','MAYOR','1','SI','23');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('CT','NA','CAPITAN','1','SI','24');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TE','NA','TENIENTE','1','SI','25');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ST','NA','SUBTENIENTE','1','SI','26');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AF','NA','ALFEREZ','6','SI','27');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('CD','NA','CADETE','6','SI','28');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('CM','NA','COMISARIO','3','SI','29');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SM','NA','SARGENTO MAYOR','2','SI','30');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SC','NA','SUBCOMISARIO','3','SI','31');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SP','NA','SARGENTO PRIMERO','2','SI','32');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SV','NA','SARGENTO VICEPRIMERO','2','SI','33');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('IT','NA','INTENDENTE','3','SI','34');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SS','NA','SARGENTO SEGUNDO','2','SI','35');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SI','NA','SUBINTENDENTE','3','SI','36');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('CP','NA','CABO PRIMERO','2','SI','37');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('CS','NA','CABO SEGUNDO','2','SI','38');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PT','NA','PATRULLERO','3','SI','39');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AL','NA','ALUMNO','6','SI','40');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AB','NA','AUXILIAR DE POLICIA BACHILLER','7','SI','41');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AR','NA','AUXILIAR DE POLICIA','7','SI','42');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('EP','NA','ESPECIALISTA ASESOR PRIMERO','5','SI','43');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ES','NA','ESPECIALISTA ASESOR SEGUNDO','5','SI','44');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('E1','NA','ESPECIALISTA PRIMERO','5','SI','45');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('E2','NA','ESPECIALISTA SEGUNDO','5','SI','46');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('E3','NA','ESPECIALISTA TERCERO','5','SI','47');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('E5','NA','ESPECIALISTA QUINTO','5','SI','48');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('E6','NA','ESPECIALISTA SEXTO','5','SI','49');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('DJ','NA','ADJUNTO JEFE','5','SI','50');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('DI','NA','ADJUNTO INTENDENTE','5','SI','51');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('DM','NA','ADJUNTO MAYOR','5','SI','52');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('DE','NA','ADJUNTO ESPECIAL','5','SI','53');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('D1','NA','ADJUNTO PRIMERO','5','SI','54');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('D2','NA','ADJUNTO SEGUNDO','5','SI','55');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('D3','NA','ADJUNTO TERCERO','5','SI','56');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SN','NA','PERSONAL A CONTRATO','5','SI','57');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORD08','OR','ORIENTADOR DE DEFENSA-08','5','SI','58');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('APJ12','AT','AUXILIAR DE POLICIA JUDICIAL-12','5','SI','59');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TES17','TE','TECNICO DE SERVICIOS-17','5','SI','60');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('APA09','AT','AUXILIAR PARA APOYO DE SEGURIDAD-09','5','SI','61');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORE13','OR','ORIENTADOR ESPIRITUAL-13','5','SI','62');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASE02','AS','ASESOR DEL SECTOR DEFENSA-02','5','SI','63');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TES14','TE','TECNICO DE SERVICIOS-14','5','SI','64');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ADS06','AT','AUXILIAR DE SERVICIOS-06','5','SI','65');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASE04','AS','ASESOR DEL SECTOR DEFENSA-04','5','SI','66');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASD33','AS','ASESOR DEL SECTOR DEFENSA_33','5','SI','67');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASD26','AS','ASESOR DEL SECTOR DEFENSA_26','5','SI','68');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASD12','AS','ASESOR DEL SECTOR DEFENSA_12','5','SI','69');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASD10','AS','ASESOR DEL SECTOR DEFENSA_10','5','SI','70');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASD07','AS','ASESOR DEL SECTOR DEFENSA_07','5','SI','71');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASD05','AS','ASESOR DEL SECTOR DEFENSA_05','5','SI','72');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASD03','AS','ASESOR DEL SECTOR DEFENSA_03','5','SI','73');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASD01','AS','ASESOR DEL SECTOR DEFENSA_01','5','SI','74');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PRD20','PR','PROFESIONAL DE DEFENSA_20','5','SI','75');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PRD18','PR','PROFESIONAL DE DEFENSA_18','5','SI','76');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PRD17','PR','PROFESIONAL DE DEFENSA_17','5','SI','77');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PRS16','PR','PROFESIONAL DE SEGURIDAD_16','5','SI','78');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PRS15','PR','PROFESIONAL DE SEGURIDAD_15','5','SI','79');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PRS14','PR','PROFESIONAL DE SEGURIDAD_14','5','SI','80');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PRS13','PR','PROFESIONAL DE SEGURIDAD_13','5','SI','81');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PRS11','PR','PROFESIONAL DE SEGURIDAD_11','5','SI','82');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PRS09','PR','PROFESIONAL DE SEGURIDAD_09','5','SI','83');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PRS08','PR','PROFESIONAL DE SEGURIDAD_08','5','SI','84');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASD09','AS','ASESOR DEL SECTOR DEFENSA_09','5','SI','85');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASD08','AS','ASESOR DEL SECTOR DEFENSA_08','5','SI','86');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASD04','AS','ASESOR DEL SECTOR DEFENSA_04','5','SI','87');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PRS07','PR','PROFESIONAL DE SEGURIDAD_07','5','SI','88');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PRS06','PR','PROFESIONAL DE SEGURIDAD_06','5','SI','89');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PRS05','PR','PROFESIONAL DE SEGURIDAD_05','5','SI','90');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PRS03','PR','PROFESIONAL DE SEGURIDAD_03','5','SI','91');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORF22','OR','ORIENTADOR DE DEFENSA_22','5','SI','92');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORF21','OR','ORIENTADOR DE DEFENSA_21','5','SI','93');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORF20','OR','ORIENTADOR DE DEFENSA_20','5','SI','94');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORE20','OR','ORIENTADOR ESPIRITUAL_20','5','SI','95');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORF19','OR','ORIENTADOR DE DEFENSA_19','5','SI','96');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORF18','OR','ORIENTADOR DE DEFENSA_18','5','SI','97');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORF17','OR','ORIENTADOR DE DEFENSA_17','5','SI','98');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORF15','OR','ORIENTADOR DE DEFENSA_15','5','SI','99');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TAP33','TE','TEC. APOYO DE SEGURIDAD Y DEFENSA_33','5','SI','100');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TAP30','TE','TEC. APOYO DE SEGURIDAD Y DEFENSA_30','5','SI','101');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TAP29','TE','TEC. APOYO DE SEGURIDAD Y DEFENSA_29','5','SI','102');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TAP28','TE','TEC. APOYO DE SEGURIDAD Y DEFENSA_28','5','SI','103');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TAP26','TE','TEC. APOYO DE SEGURIDAD Y DEFENSA_26','5','SI','104');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TAP25','TE','TEC. APOYO DE SEGURIDAD Y DEFENSA_25','5','SI','105');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TAP24','TE','TEC. APOYO DE SEGURIDAD Y DEFENSA_24','5','SI','106');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TAP23','TE','TEC. APOYO DE SEGURIDAD Y DEFENSA_23','5','SI','107');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TAP22','TE','TEC. APOYO DE SEGURIDAD Y DEFENSA_22','5','SI','108');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TSE33','TE','TECNICO DE SERVICIOS_33','5','SI','109');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TSE31','TE','TECNICO DE SERVICIOS_31','5','SI','110');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TSE28','TE','TECNICO DE SERVICIOS_28','5','SI','111');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TSE26','TE','TECNICO DE SERVICIOS_26','5','SI','112');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TSE25','TE','TECNICO DE SERVICIOS_25','5','SI','113');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TSE24','TE','TECNICO DE SERVICIOS_24','5','SI','114');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TSE23','TE','TECNICO DE SERVICIOS_23','5','SI','115');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TSE22','TE','TECNICO DE SERVICIOS_22','5','SI','116');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TSE20','TE','TECNICO DE SERVICIOS_20','5','SI','117');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AAP35','AT','AUX.  APOYO DE SEGURIDAD Y DEFENSA_35','5','SI','118');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AAP33','AT','AUX.  APOYO DE SEGURIDAD Y DEFENSA_33','5','SI','119');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AAP31','AT','AUX.  APOYO DE SEGURIDAD Y DEFENSA_31','5','SI','120');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AAP30','AT','AUX.  APOYO DE SEGURIDAD Y DEFENSA_30','5','SI','121');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AAP29','AT','AUX.  APOYO DE SEGURIDAD Y DEFENSA_29','5','SI','122');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AAP28','AT','AUX.  APOYO DE SEGURIDAD Y DEFENSA_28','5','SI','123');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AAP27','AT','AUX.  APOYO DE SEGURIDAD Y DEFENSA_27','5','SI','124');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AAP26','AT','AUX.  APOYO DE SEGURIDAD Y DEFENSA_26','5','SI','125');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AAP25','AT','AUXI. APOYO DE SEGURIDAD Y DEFENSA_25','5','SI','126');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AAP23','AT','AUX.  APOYO DE SEGURIDAD Y DEFENSA_23','5','SI','127');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AAP21','AT','AUX.  APOYO DE SEGURIDAD Y DEFENSA_21','5','SI','128');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AAP18','AT','AUX.  APOYO DE SEGURIDAD Y DEFENSA_18','5','SI','129');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AAP17','AT','AUX.  APOYO DE SEGURIDAD Y DEFENSA_17','5','SI','130');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AAP15','AT','AUXI. APOYO DE SEGURIDAD Y DEFENSA_15','5','SI','131');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASS35','AT','AUXILIAR DE SERVICIOS_35','5','SI','132');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASS33','AT','AUXILIAR DE SERVICIOS_33','5','SI','133');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASS30','AT','AUXILIAR DE SERVICIOS_30','5','SI','134');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASS29','AT','AUXILIAR DE SERVICIOS_29','5','SI','135');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASS28','AT','AUXILIAR DE SERVICIOS_28','5','SI','136');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASS27','AT','AUXILIAR DE SERVICIOS_27','5','SI','137');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASS26','AT','AUXILIAR DE SERVICIOS_26','5','SI','138');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASS25','AT','AUXILIAR DE SERVICIOS_25','5','SI','139');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASS23','AT','AUXILIAR DE SERVICIOS_23','5','SI','140');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASS21','AT','AUXILIAR DE SERVICIOS_21','5','SI','141');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASS18','AT','AUXILIAR DE SERVICIOS_18','5','SI','142');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASS17','AT','AUXILIAR DE SERVICIOS_17','5','SI','143');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASS15','AT','AUXILIAR DE SERVICIOS_15','5','SI','144');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TAP31','TE','TEC. APOYO DE SEGURIDAD Y DEFENSA_31','5','SI','145');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PRD23','PR','PROFESIONAL DE DEFENSA_23','5','SI','146');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PRS20','PR','PROFESIONAL DE SEGURIDAD_20','5','SI','147');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PRS18','PR','PROFESIONAL DE SEGURIDAD_18','5','SI','148');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('APA33','AT','AUXILIAR PARA APOYO DE SEGURIDAD-33','5','SI','149');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASE16','AS','ASESOR DEL SECTOR DEFENSA-16','5','SI','150');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORE12','OR','ORIENTADOR ESPIRITUAL-12','5','SI','151');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TEJ18','TE','TECNICO DE POLICIA JUDICIAL-18','5','SI','152');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ADS10','AT','AUXILIAR DE SERVICIOS-10','5','SI','153');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('E4','NA','ESPECIALISTA CUARTO','5','SI','154');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('CPS-4','PR','CONTRATO POR PRESTACION DE SERVICIOS-04','5','SI','155');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('JO_20','DI','JEFE DE OFICINA _20','5','SI','156');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('JO_11','DI','JEFE DE OFICINA _11','5','SI','157');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('LO_11','AS','ASESOR_11','5','SI','158');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OP_21','PR','ODONTOLOGO ESPECIALISTA _21','5','SI','159');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PF_20','PR','PROFESIONAL ESPECIALIZADO _20','5','SI','160');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AU_18','AT','AUXILIAR DE SERVICIOS GENERALES _18','5','SI','161');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SE_07','AT','SECRETARIO (A)_07','5','SI','162');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SJ_24','AT','SECRETARIO (A) EJECUTIVO_24','5','SI','163');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AA_15','AT','AUXILIAR PARA APOYO SEGURIDAD DEFENSA15','5','SI','164');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AA_17','AT','AUXILIAR PARA APOYO SEGURIDAD DEFENSA17','5','SI','165');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AA_18','AT','AUXILIAR PARA APOYO SEGURIDAD DEFENSA18','5','SI','166');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AA_21','AT','AUXILIAR PARA APOYO SEGURIDAD DEFENSA21','5','SI','167');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AA_23','AT','AUXILIAR PARA APOYO SEGURIDAD DEFENSA23','5','SI','168');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AA_25','AT','AUXILIAR PARA APOYO SEGURIDAD DEFENSA25','5','SI','169');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AA_26','AT','AUXILIAR PARA APOYO SEGURIDAD DEFENSA26','5','SI','170');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AA_27','AT','AUXILIAR PARA APOYO SEGURIDAD DEFENSA27','5','SI','171');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AA_28','AT','AUXILIAR PARA APOYO SEGURIDAD DEFENSA28','5','SI','172');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AA_30','AT','AUXILIAR PARA APOYO SEGURIDAD DEFENSA30','5','SI','173');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AA_31','AT','AUXILIAR PARA APOYO SEGURIDAD DEFENSA31','5','SI','174');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AA_32','AT','AUXILIAR PARA APOYO SEGURIDAD DEFENSA32','5','SI','175');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AA_33','AT','AUXILIAR PARA APOYO SEGURIDAD DEFENSA33','5','SI','176');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AA_34','AT','AUXILIAR PARA APOYO SEGURIDAD DEFENSA34','5','SI','177');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AA_35','AT','AUXILIAR PARA APOYO SEGURIDAD DEFENSA35','5','SI','178');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AD_26','AT','ASESOR DEL SECTOR DEFENSA26','5','SI','179');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AD_27','AT','ASESOR DEL SECTOR DEFENSA27','5','SI','180');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AD_33','AT','ASESOR DEL SECTOR DEFENSA33','5','SI','181');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AS_18','AT','AUXILIAR DE SERVICIOS18','5','SI','182');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AS_21','AT','AUXILIAR DE SERVICIOS21','5','SI','183');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AS_23','AT','AUXILIAR DE SERVICIOS23','5','SI','184');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AS_26','AT','AUXILIAR DE SERVICIOS26','5','SI','185');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AS_27','AT','AUXILIAR DE SERVICIOS27','5','SI','186');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AS_28','AT','AUXILIAR DE SERVICIOS28','5','SI','187');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AS_31','AT','AUXILIAR DE SERVICIOS31','5','SI','188');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AS_32','AT','AUXILIAR DE SERVICIOS32','5','SI','189');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AS_33','AT','AUXILIAR DE SERVICIOS33','5','SI','190');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PD_17','AT','PROFESIONAL DE DEFENSA17','5','SI','191');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PD_18','AT','PROFESIONAL DE DEFENSA18','5','SI','192');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PD_20','AT','PROFESIONAL DE DEFENSA20','5','SI','193');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PS_10','AT','PROFESIONAL DE SEGURIDAD10','5','SI','194');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PS_11','AT','PROFESIONAL DE SEGURIDAD11','5','SI','195');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PS_12','AT','PROFESIONAL DE SEGURIDAD12','5','SI','196');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PS_13','AT','PROFESIONAL DE SEGURIDAD13','5','SI','197');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PS_14','AT','PROFESIONAL DE SEGURIDAD14','5','SI','198');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PS_15','AT','PROFESIONAL DE SEGURIDAD15','5','SI','199');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PS_16','AT','PROFESIONAL DE SEGURIDAD16','5','SI','200');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PS_20','AT','PROFESIONAL DE SEGURIDAD20','5','SI','201');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PS224','AT','PROFESIONAL DE SEGURIDAD224','5','SI','202');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PS_22','AT','PROFESIONAL DE SEGURIDAD22','5','SI','203');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PS_06','AT','PROFESIONAL DE SEGURIDAD06','5','SI','204');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PS_07','AT','PROFESIONAL DE SEGURIDAD07','5','SI','205');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PS_08','AT','PROFESIONAL DE SEGURIDAD08','5','SI','206');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PS_09','AT','PROFESIONAL DE SEGURIDAD09','5','SI','207');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SM106','AT','SERVIDOR MISIONAL EN SANIDAD POLICIAL106','5','SI','208');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SM_10','AT','SERVIDOR MISIONAL EN SANIDAD POLICIAL10','5','SI','209');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SM126','AT','SERVIDOR MISIONAL EN SANIDAD POLICIAL126','5','SI','210');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SM_12','AT','SERVIDOR MISIONAL EN SANIDAD POLICIAL12','5','SI','211');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SM146','AT','SERVIDOR MISIONAL EN SANIDAD POLICIAL146','5','SI','212');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SM_14','AT','SERVIDOR MISIONAL EN SANIDAD POLICIAL14','5','SI','213');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SM164','AT','SERVIDOR MISIONAL EN SANIDAD POLICIAL164','5','SI','214');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SM_16','AT','SERVIDOR MISIONAL EN SANIDAD POLICIAL16','5','SI','215');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SM184','AT','SERVIDOR MISIONAL EN SANIDAD POLICIAL184','5','SI','216');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SM_18','AT','SERVIDOR MISIONAL EN SANIDAD POLICIAL18','5','SI','217');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SM214','AT','SERVIDOR MISIONAL EN SANIDAD POLICIAL214','5','SI','218');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASE30','AS','ASESOR DEL SECTOR DEFENSA-30','5','SI','219');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASE24','AS','ASESOR DEL SECTOR DEFENSA-24','5','SI','220');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PIR02','PR','PROFESIONAL IDENTIFICACION REGISTRO-2','5','SI','221');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PIR01','PR','PROFESIONAL IDENTIFICACION REGISTRO-1','5','SI','222');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('DU_21','DI','DIRECTOR UNIDAD HOSPITALARIA_21','5','SI','223');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('DU_20','DI','DIRECTOR UNIDAD HOSPITALARIA_20','5','SI','224');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('DU_19','DI','DIRECTOR UNIDAD HOSPITALARIA_19','5','SI','225');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('DU_18','DI','DIRECTOR UNIDAD HOSPITALARIA_18','5','SI','226');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('JO_19','DI','JEFE DE OFICINA _19','5','SI','227');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('JO_18','DI','JEFE DE OFICINA _18','5','SI','228');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('JO_17','DI','JEFE DE OFICINA _17','5','SI','229');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('JO_16','DI','JEFE DE OFICINA _16','5','SI','230');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('JO_15','DI','JEFE DE OFICINA _15','5','SI','231');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('JO_14','DI','JEFE DE OFICINA _14','5','SI','232');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('JO_13','DI','JEFE DE OFICINA _13','5','SI','233');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('JO_12','DI','JEFE DE OFICINA _12','5','SI','234');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('JO_06','DI','JEFE DE OFICINA _06','5','SI','235');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('LO_18','AS','ASESOR_18','5','SI','236');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('LO_17','AS','ASESOR_17','5','SI','237');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('LO_16','AS','ASESOR_16','5','SI','238');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('LO_15','AS','ASESOR_15','5','SI','239');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('LO_14','AS','ASESOR_14','5','SI','240');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('LO_13','AS','ASESOR_13','5','SI','241');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('LO_12','AS','ASESOR_12','5','SI','242');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('LO_10','AS','ASESOR_10','5','SI','243');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('LO_09','AS','ASESOR_09','5','SI','244');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('LO_08','AS','ASESOR_08','5','SI','245');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('LO_07','AS','ASESOR_07','5','SI','246');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('LO_06','AS','ASESOR_06','5','SI','247');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('LO_04','AS','ASESOR_04','5','SI','248');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('LO_03','AS','ASESOR_03','5','SI','249');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('LO_02','AS','ASESOR_02','5','SI','250');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('LO_01','AS','ASESOR_01','5','SI','251');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('DC_19','EJ','DIRECTOR DE CLINICA _19','5','SI','252');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('DC_17','EJ','DIRECTOR DE CLINICA _17','5','SI','253');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('DC_15','EJ','DIRECTOR DE CLINICA _15','5','SI','254');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('DC_14','EJ','DIRECTOR DE CLINICA _14','5','SI','255');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('JA_25','EJ','JEFE DE AREA POLICIAL _25','5','SI','256');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('JA_24','EJ','JEFE DE AREA POLICIAL _24','5','SI','257');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('JA_23','EJ','JEFE DE AREA POLICIAL _23','5','SI','258');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('JA_22','EJ','JEFE DE AREA POLICIAL _22','5','SI','259');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('JA_21','EJ','JEFE DE AREA POLICIAL _21','5','SI','260');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ME_11','PR','MEDICO_11','5','SI','261');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ME_12','PR','MEDICO_12','5','SI','262');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ME_18','PR','MEDICO_18','5','SI','263');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ME_17','PR','MEDICO_17','5','SI','264');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ME_16','PR','MEDICO_16','5','SI','265');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ME_15','PR','MEDICO_15','5','SI','266');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ME_14','PR','MEDICO_14','5','SI','267');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ME_13','PR','MEDICO_13','5','SI','268');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('MP_17','PR','MEDICO ESPECIALISTA _17','5','SI','269');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('MP_16','PR','MEDICO ESPECIALISTA _16','5','SI','270');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('MP_15','PR','MEDICO ESPECIALISTA _15','5','SI','271');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('MP_22','PR','MEDICO ESPECIALISTA _22','5','SI','272');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('MP_21','PR','MEDICO ESPECIALISTA _21','5','SI','273');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('MP_20','PR','MEDICO ESPECIALISTA _20','5','SI','274');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('MP_18','PR','MEDICO ESPECIALISTA _18','5','SI','275');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OD_10','PR','ODONTOLOGO_10','5','SI','276');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OD_11','PR','ODONTOLOGO_11','5','SI','277');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OD_12','PR','ODONTOLOGO_12','5','SI','278');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OD_13','PR','ODONTOLOGO_13','5','SI','279');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OD_14','PR','ODONTOLOGO_14','5','SI','280');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OD_15','PR','ODONTOLOGO_15','5','SI','281');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OD_16','PR','ODONTOLOGO_16','5','SI','282');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OD_18','PR','ODONTOLOGO_18','5','SI','283');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OP_17','PR','ODONTOLOGO ESPECIALISTA _17','5','SI','284');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OP_16','PR','ODONTOLOGO ESPECIALISTA _16','5','SI','285');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OP_22','PR','ODONTOLOGO ESPECIALISTA _22','5','SI','286');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OP_20','PR','ODONTOLOGO ESPECIALISTA _20','5','SI','287');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OP_19','PR','ODONTOLOGO ESPECIALISTA _19','5','SI','288');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OP_18','PR','ODONTOLOGO ESPECIALISTA _18','5','SI','289');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PF_22','PR','PROFESIONAL ESPECIALIZADO _22','5','SI','290');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PF_21','PR','PROFESIONAL ESPECIALIZADO _21','5','SI','291');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PF_19','PR','PROFESIONAL ESPECIALIZADO _19','5','SI','292');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PF_18','PR','PROFESIONAL ESPECIALIZADO _18','5','SI','293');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PF_17','PR','PROFESIONAL ESPECIALIZADO _17','5','SI','294');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PF_14','PR','PROFESIONAL ESPECIALIZADO _14','5','SI','295');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PU_09','PR','PROFESIONAL UNIVERSITARIO _09','5','SI','296');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PU_04','PR','PROFESIONAL UNIVERSITARIO _04','5','SI','297');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PU_02','PR','PROFESIONAL UNIVERSITARIO _02','5','SI','298');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PF_12','PR','PROFESIONAL ESPECIALIZADO _12','5','SI','299');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OD_17','PR','ODONTOLOGO_17','5','SI','300');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('JD_12','EJ','JEFE DE DIVISION_12','5','SI','301');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TA_18','TE','TECNICO ADMINISTRATIVO_18','5','SI','302');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TA_17','TE','TECNICO ADMINISTRATIVO_17','5','SI','303');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TA_16','TE','TECNICO ADMINISTRATIVO_16','5','SI','304');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TA_15','TE','TECNICO ADMINISTRATIVO_15','5','SI','305');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TA_14','TE','TECNICO ADMINISTRATIVO_14','5','SI','306');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TA_11','TE','TECNICO ADMINISTRATIVO_11','5','SI','307');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TA_09','TE','TECNICO ADMINISTRATIVO_09','5','SI','308');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TA_07','TE','TECNICO ADMINISTRATIVO_07','5','SI','309');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TA_06','TE','TECNICO ADMINISTRATIVO_06','5','SI','310');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TA_05','TE','TECNICO ADMINISTRATIVO_05','5','SI','311');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TO_18','TE','TECNICO OPERATIVO _18','5','SI','312');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TO_17','TE','TECNICO OPERATIVO _17','5','SI','313');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TO_13','TE','TECNICO OPERATIVO _13','5','SI','314');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TO_12','TE','TECNICO OPERATIVO _12','5','SI','315');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TO_10','TE','TECNICO OPERATIVO _10','5','SI','316');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TO_07','TE','TECNICO OPERATIVO _07','5','SI','317');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TO_06','TE','TECNICO OPERATIVO _06','5','SI','318');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TO_05','TE','TECNICO OPERATIVO _05','5','SI','319');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AD_23','AT','AUXILIAR ADMINISTRATIVO _23','5','SI','320');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AD_22','AT','AUXILIAR ADMINISTRATIVO _22','5','SI','321');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AD_21','AT','AUXILIAR ADMINISTRATIVO _21','5','SI','322');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AD_19','AT','ASESOR DEL SECTOR DEFENSA19','5','SI','323');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AD_17','AT','ASESOR DEL SECTOR DEFENSA17','5','SI','324');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AD_16','AT','AUXILIAR ADMINISTRATIVO _16','5','SI','325');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AD_15','AT','AUXILIAR ADMINISTRATIVO _15','5','SI','326');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AD_14','AT','AUXILIAR ADMINISTRATIVO _14','5','SI','327');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AD_13','AT','AUXILIAR ADMINISTRATIVO _13','5','SI','328');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AD_12','AT','AUXILIAR ADMINISTRATIVO _12','5','SI','329');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AD_11','AT','AUXILIAR ADMINISTRATIVO _11','5','SI','330');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AD_09','AT','AUXILIAR ADMINISTRATIVO _09','5','SI','331');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AD_08','AT','AUXILIAR ADMINISTRATIVO _08','5','SI','332');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AD_07','AT','AUXILIAR ADMINISTRATIVO _07','5','SI','333');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AD_06','AT','AUXILIAR ADMINISTRATIVO _06','5','SI','334');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AD_05','AT','AUXILIAR ADMINISTRATIVO _05','5','SI','335');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AD_02','AT','AUXILIAR ADMINISTRATIVO _02','5','SI','336');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AU_19','AT','AUXILIAR DE SERVICIOS GENERALES _19','5','SI','337');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AU_17','AT','AUXILIAR DE SERVICIOS GENERALES _17','5','SI','338');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AU_16','AT','AUXILIAR DE SERVICIOS GENERALES _16','5','SI','339');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AU_15','AT','AUXILIAR DE SERVICIOS GENERALES _15','5','SI','340');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AU_14','AT','AUXILIAR DE SERVICIOS GENERALES _14','5','SI','341');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AU_13','AT','AUXILIAR DE SERVICIOS GENERALES _13','5','SI','342');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AU_11','AT','AUXILIAR DE SERVICIOS GENERALES _11','5','SI','343');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AU_09','AT','AUXILIAR DE SERVICIOS GENERALES _09','5','SI','344');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AU_08','AT','AUXILIAR DE SERVICIOS GENERALES _08','5','SI','345');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AU_06','AT','AUXILIAR DE SERVICIOS GENERALES _06','5','SI','346');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AU_05','AT','AUXILIAR DE SERVICIOS GENERALES _05','5','SI','347');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AU_03','AT','AUXILIAR DE SERVICIOS GENERALES _03','5','SI','348');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AU_02','AT','AUXILIAR DE SERVICIOS GENERALES _02','5','SI','349');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AU_01','AT','AUXILIAR DE SERVICIOS GENERALES _01','5','SI','350');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('EA_21','AT','ENFERMERO AUXILIAR_21','5','SI','351');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('EA_20','AT','ENFERMERO AUXILIAR_20','5','SI','352');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('EA_19','AT','ENFERMERO AUXILIAR_19','5','SI','353');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('EA_18','AT','ENFERMERO AUXILIAR_18','5','SI','354');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('EA_17','AT','ENFERMERO AUXILIAR_17','5','SI','355');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('EA_16','AT','ENFERMERO AUXILIAR_16','5','SI','356');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('EA_15','AT','ENFERMERO AUXILIAR_15','5','SI','357');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('EA_14','AT','ENFERMERO AUXILIAR_14','5','SI','358');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('EA_13','AT','ENFERMERO AUXILIAR_13','5','SI','359');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('EA_12','AT','ENFERMERO AUXILIAR_12','5','SI','360');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('EA_11','AT','ENFERMERO AUXILIAR_11','5','SI','361');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('EA_09','AT','ENFERMERO AUXILIAR_09','5','SI','362');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('EA_07','AT','ENFERMERO AUXILIAR_07','5','SI','363');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('EA_05','AT','ENFERMERO AUXILIAR_05','5','SI','364');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OE_05','AT','OPERARIO_05','5','SI','365');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OE_04','AT','OPERARIO_04','5','SI','366');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OE_03','AT','OPERARIO_03','5','SI','367');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OE_02','AT','OPERARIO_02','5','SI','368');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OE_01','AT','OPERARIO_01','5','SI','369');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OC_18','AT','OPERARIO CALIFICADO _18','5','SI','370');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OC_17','AT','OPERARIO CALIFICADO _17','5','SI','371');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OC_20','AT','OPERARIO CALIFICADO _20','5','SI','372');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OC_15','AT','OPERARIO CALIFICADO _15','5','SI','373');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OC_14','AT','OPERARIO CALIFICADO _14','5','SI','374');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OC_13','AT','OPERARIO CALIFICADO _13','5','SI','375');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OC_12','AT','OPERARIO CALIFICADO _12','5','SI','376');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OC_10','AT','OPERARIO CALIFICADO _10','5','SI','377');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OC_09','AT','OPERARIO CALIFICADO _09','5','SI','378');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OC_07','AT','OPERARIO CALIFICADO _07','5','SI','379');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OC_06','AT','OPERARIO CALIFICADO _06','5','SI','380');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('OC_05','AT','OPERARIO CALIFICADO _05','5','SI','381');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SE_14','AT','SECRETARIO (A)_14','5','SI','382');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SE_13','AT','SECRETARIO (A)_13','5','SI','383');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SE_12','AT','SECRETARIO (A)_12','5','SI','384');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SE_08','AT','SECRETARIO (A)_08','5','SI','385');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SE_06','AT','SECRETARIO (A)_06','5','SI','386');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SY_26','AT','SECRETARIO (A) BILING݅ _26','5','SI','387');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SY_25','AT','SECRETARIO (A) BILING݅ _25','5','SI','388');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SJ_23','AT','SECRETARIO (A) EJECUTIVO_23','5','SI','389');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SJ_22','AT','SECRETARIO (A) EJECUTIVO_22','5','SI','390');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SJ_21','AT','SECRETARIO (A) EJECUTIVO_21','5','SI','391');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SJ_20','AT','SECRETARIO (A) EJECUTIVO_20','5','SI','392');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SJ_19','AT','SECRETARIO (A) EJECUTIVO_19','5','SI','393');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SJ_17','AT','SECRETARIO (A) EJECUTIVO_17','5','SI','394');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SJ_16','AT','SECRETARIO (A) EJECUTIVO_16','5','SI','395');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SJ_15','AT','SECRETARIO (A) EJECUTIVO_15','5','SI','396');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PU_01','PR','PROFESIONAL UNIVERSITARIO_01','5','SI','397');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('CPS-3','EJ','CONTRATO POR PRESTACION DE SERVICIOS-03','5','SI','398');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASE19','AS','ASESOR DEL SECTOR DEFENSA-19','5','SI','399');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASE18','AS','ASESOR DEL SECTOR DEFENSA-18','5','SI','400');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASE09','AS','ASESOR DEL SECTOR DEFENSA-09','5','SI','401');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASE08','AS','ASESOR DEL SECTOR DEFENSA-08','5','SI','402');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ASE06','AS','ASESOR DEL SECTOR DEFENSA-06','5','SI','403');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PRO06','PR','PROFESIONAL DE SEGURIDAD-06','5','SI','404');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PRO04','PR','PROFESIONAL DE SEGURIDAD-04','5','SI','405');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PRO03','PR','PROFESIONAL DE SEGURIDAD-03','5','SI','406');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PRO02','PR','PROFESIONAL DE SEGURIDAD-02','5','SI','407');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PRO01','PR','PROFESIONAL DE SEGURIDAD-01','5','SI','408');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORE16','OR','ORIENTADOR ESPIRITUAL-16','5','SI','409');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORD16','OR','ORIENTADOR DE DEFENSA-16','5','SI','410');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORD15','OR','ORIENTADOR DE DEFENSA-15','5','SI','411');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORD14','OR','ORIENTADOR DE DEFENSA-14','5','SI','412');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORE14','OR','ORIENTADOR ESPIRITUAL-14','5','SI','413');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORD13','OR','ORIENTADOR DE DEFENSA-13','5','SI','414');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORD12','OR','ORIENTADOR DE DEFENSA-12','5','SI','415');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORD11','OR','ORIENTADOR DE DEFENSA-11','5','SI','416');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORD10','OR','ORIENTADOR DE DEFENSA-10','5','SI','417');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORD09','OR','ORIENTADOR DE DEFENSA-09','5','SI','418');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORD06','OR','ORIENTADOR DE DEFENSA-06','5','SI','419');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORD05','OR','ORIENTADOR DE DEFENSA-05','5','SI','420');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORD04','OR','ORIENTADOR DE DEFENSA-04','5','SI','421');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORD03','OR','ORIENTADOR DE DEFENSA-03','5','SI','422');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TES21','TE','TECNICO DE SERVICIOS-21','5','SI','423');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ORD01','OR','ORIENTADOR DE DEFENSA-01','5','SI','424');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TEA21','TE','TECNICO PARA APOYO DE SEGURIDAD-21','5','SI','425');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TEJ21','TE','TECNICO DE POLICIA JUDICIAL-21','5','SI','426');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TES19','TE','TECNICO DE SERVICIOS-19','5','SI','427');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TEA19','TE','TECNICO PARA APOYO DE SEGURIDAD-19','5','SI','428');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TEJ19','TE','TECNICO DE POLICIA JUDICIAL-19','5','SI','429');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TES18','TE','TECNICO DE SERVICIOS-18','5','SI','430');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TEA18','TE','TECNICO PARA APOYO DE SEGURIDAD-18','5','SI','431');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TEA17','TE','TECNICO PARA APOYO DE SEGURIDAD-17','5','SI','432');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TEJ17','TE','TECNICO DE POLICIA JUDICIAL-17','5','SI','433');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TEA14','TE','TECNICO PARA APOYO DE SEGURIDAD-14','5','SI','434');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TEJ14','TE','TECNICO DE POLICIA JUDICIAL-14','5','SI','435');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TES12','TE','TECNICO DE SERVICIOS-12','5','SI','436');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TEA12','TE','TECNICO PARA APOYO DE SEGURIDAD-12','5','SI','437');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TEJ12','TE','TECNICO DE POLICIA JUDICIAL-12','5','SI','438');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ADS12','AT','AUXILIAR DE SERVICIOS-12','5','SI','439');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('APA12','AT','AUXILIAR PARA APOYO DE SEGURIDAD-12','5','SI','440');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ADS11','AT','AUXILIAR DE SERVICIOS-11','5','SI','441');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('APA11','AT','AUXILIAR PARA APOYO DE SEGURIDAD-11','5','SI','442');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('APJ11','AT','AUXILIAR DE POLICIA JUDICIAL-11','5','SI','443');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ADI11','AT','AUXILIAR DE INTELIGENCIA-11','5','SI','444');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('APA10','AT','AUXILIAR PARA APOYO DE SEGURIDAD-10','5','SI','445');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('APJ10','AT','AUXILIAR DE POLICIA JUDICIAL-10','5','SI','446');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ADS09','AT','AUXILIAR DE SERVICIOS-09','5','SI','447');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('APA07','AT','AUXILIAR PARA APOYO DE SEGURIDAD-07','5','SI','448');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('APA06','AT','AUXILIAR PARA APOYO DE SEGURIDAD-06','5','SI','449');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('APJ06','AT','AUXILIAR DE POLICIA JUDICIAL-06','5','SI','450');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ADS05','AT','AUXILIAR DE SERVICIOS-05','5','SI','451');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('APA05','AT','AUXILIAR PARA APOYO DE SEGURIDAD-05','5','SI','452');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ADS03','AT','AUXILIAR DE SERVICIOS-03','5','SI','453');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('APA03','AT','AUXILIAR PARA APOYO DE SEGURIDAD-03','5','SI','454');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('APJ03','AT','AUXILIAR DE POLICIA JUDICIAL-03','5','SI','455');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ADS01','AT','AUXILIAR DE SERVICIOS-01','5','SI','456');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('APA01','AT','AUXILIAR PARA APOYO DE SEGURIDAD-01','5','SI','457');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TES22','TE','TECNICO DE SERVICIOS-22','5','SI','458');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TES20','TE','TECNICO DE SERVICIOS-20','5','SI','459');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TEI12','TE','TECNICO DE INTELIGENCIA-12','5','SI','460');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('ADS07','AT','AUXILIAR DE SERVICIOS-07','5','SI','461');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SM_21','AT','SERVIDOR MISIONAL EN SANIDAD POLICIAL21','5','SI','462');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SM254','AT','SERVIDOR MISIONAL EN SANIDAD POLICIAL254','5','SI','463');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SM_25','AT','SERVIDOR MISIONAL EN SANIDAD POLICIAL25','5','SI','464');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SM_04','AT','SERVIDOR MISIONAL EN SANIDAD POLICIAL04','5','SI','465');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SM086','AT','SERVIDOR MISIONAL EN SANIDAD POLICIAL086','5','SI','466');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SM_08','AT','SERVIDOR MISIONAL EN SANIDAD POLICIAL08','5','SI','467');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SM096','AT','SERVIDOR MISIONAL EN SANIDAD POLICIAL096','5','SI','468');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('SM_09','AT','SERVIDOR MISIONAL EN SANIDAD POLICIAL09','5','SI','469');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TA_23','AT','TECNICO PARA APOYO SEGURIDAD DEFENSA23','5','SI','470');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TA_24','AT','TECNICO PARA APOYO SEGURIDAD DEFENSA24','5','SI','471');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TA_25','AT','TECNICO PARA APOYO SEGURIDAD DEFENSA25','5','SI','472');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TA_26','AT','TECNICO PARA APOYO SEGURIDAD DEFENSA26','5','SI','473');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TA_27','AT','TECNICO PARA APOYO SEGURIDAD DEFENSA27','5','SI','474');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TA_28','AT','TECNICO PARA APOYO SEGURIDAD DEFENSA28','5','SI','475');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TA_29','AT','TECNICO PARA APOYO SEGURIDAD DEFENSA29','5','SI','476');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TA_30','AT','TECNICO PARA APOYO SEGURIDAD DEFENSA30','5','SI','477');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TA_32','AT','TECNICO PARA APOYO SEGURIDAD DEFENSA32','5','SI','478');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TA_31','AT','TECNICO PARA APOYO SEGURIDAD DEFENSA31','5','SI','479');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TA_33','AT','TECNICO PARA APOYO SEGURIDAD DEFENSA33','5','SI','480');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TS_23','AT','TECNICO DE SERVICIOS23','5','SI','481');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TS_24','AT','TECNICO DE SERVICIOS24','5','SI','482');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TS_25','AT','TECNICO DE SERVICIOS25','5','SI','483');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TS_26','AT','TECNICO DE SERVICIOS26','5','SI','484');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TS_28','AT','TECNICO DE SERVICIOS28','5','SI','485');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TS_29','AT','TECNICO DE SERVICIOS29','5','SI','486');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TS_30','AT','TECNICO DE SERVICIOS30','5','SI','487');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PIR03','PR','PROFESIONAL IDENTIFICACION REGISTRO-3','5','SI','488');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PIR04','PR','PROFESIONAL IDENTIFICACION REGISTRO-4','5','SI','489');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PIR05','PR','PROFESIONAL IDENTIFICACION REGISTRO-5','5','SI','490');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PIR06','PR','PROFESIONAL IDENTIFICACION REGISTRO-6','5','SI','491');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TIR01','TE','TECNICO DE IDENTIFICACION REGISTRO-1','5','SI','492');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TIR02','TE','TECNICO DE IDENTIFICACION REGISTRO-2','5','SI','493');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TIR03','TE','TECNICO DE IDENTIFICACION REGISTRO-3','5','SI','494');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TIR04','TE','TECNICO DE IDENTIFICACION REGISTRO-4','5','SI','495');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TIR05','TE','TECNICO DE IDENTIFICACION REGISTRO-5','5','SI','496');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TIR06','TE','TECNICO DE IDENTIFICACION REGISTRO-6','5','SI','497');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TIR07','TE','TECNICO DE IDENTIFICACION REGISTRO-7','5','SI','498');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TIR08','TE','TECNICO DE IDENTIFICACION REGISTRO-8','5','SI','499');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TIR09','TE','TECNICO DE IDENTIFICACION REGISTRO-9','5','SI','500');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TIR10','TE','TECNICO DE IDENTIFICACION REGISTRO-10','5','SI','501');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TIR11','TE','TECNICO DE IDENTIFICACION REGISTRO-11','5','SI','502');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('TIR12','TE','TECNICO DE IDENTIFICACION REGISTRO-12','5','SI','503');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AIR01','AT','AUXILIAR DE IDENTIFICACION REGISTRO-1','5','SI','504');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AIR02','AT','AUXILIAR DE IDENTIFICACION REGISTRO-2','5','SI','505');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AIR03','AT','AUXILIAR DE IDENTIFICACION REGISTRO-3','5','SI','506');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AIR04','AT','AUXILIAR DE IDENTIFICACION REGISTRO-4','5','SI','507');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('AIR05','AT','AUXILIAR DE IDENTIFICACION REGISTRO-5','5','SI','508');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('PIR07','PR','PROFESIONAL IDENTIFICACION REGISTRO-7','5','SI','509');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('APJ09','AT','AUXILIAR DE POLICIA JUDICIAL-09','5','SI','510');
Insert into GRADO_CATEGORIA (ALFABETICO,NATURALEZA,DESCRIPCION,ID_CATEGORIA,VIGENTE,ID) values ('MY_R','NA','MAYOR DE LA RESERVA','1','SI','511');
